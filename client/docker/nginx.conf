# gzip
gzip              on;
gzip_comp_level   9;
gzip_http_version 1.1;
gzip_vary         on;
gzip_min_length   1000;
gzip_proxied      any;
gzip_types        *;
gzip_disable      "MSIE [1-6]\.";
gzip_buffers      16 8k;

proxy_cache_path /tmp/nginx-cache levels=1:2 keys_zone=api_cache:10m max_size=10g inactive=60m;

# Angular-universal (SSR)
upstream ssr_angular {
  server 127.0.0.1:4000;
}

server {
  listen 80;
  listen [::]:80;

  server_name gymsystems.no www.gymsystems.no;
  root /usr/share/nginx/;

  keepalive_timeout   180s;
  client_max_body_size 8M;

  # Security headers
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "no-referrer-when-downgrade" always;
  add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

  # Proxy to backend API
  location /api {
    proxy_cache api_cache;
    proxy_cache_lock on;                              # we allow only 1 req per URI to hit origin in case of a cache miss
    proxy_ignore_headers Cache-Control;               # we ask Nginx to ignore the Cache-Control header
    proxy_cache_valid 200 302 10m;                    # we cache any 200 or 302 response for up to 10 minutes
    proxy_cache_valid 404      1m;                    # any 404 response is cached for 1 minute
    proxy_cache_bypass $http_x_no_cache $arg_nocache; # Trigger a synchronous cache update when a specific `X-No-Cache` header or if a `nocache` GET parameter are set
    add_header X-Proxy-Cache $upstream_cache_status;  # we add the X-Proxy-Cache header to our response to the client

    proxy_pass http://api:3000;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";

    rewrite ^/(.*) /$1 break;
  }

  # Look for static files, else try ssr
  location / {
    root /usr/share/nginx/browser;
    try_files $uri $uri/ @ssr;
    # try_files $uri $uri/ /index.html =404;
  }

  # Proxy to ssr
  location @ssr {
    proxy_pass http://ssr_angular;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_http_version 1.1;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Static files and caching
  # cache.appcache, your document html and data
  location ~* \.(?:manifest|appcache|xml|html?|json|txt)$ {
    root /usr/share/nginx/browser;
    expires -1;
  }

  # Media: images, icons, video, audio, HTC
  location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
    root /usr/share/nginx/browser;
    expires 1M;
    access_log off;
    add_header Cache-Control "public";
  }

  # CSS and Javascript
  location ~* \.(?:css|js)$ {
    root /usr/share/nginx/browser;
    expires 1y;
    access_log off;
    add_header Cache-Control "public";
  }
}
