# gzip
gzip              on;
gzip_comp_level   9;
gzip_http_version 1.1;
gzip_vary         on;
gzip_min_length   1000;
gzip_proxied      any;
gzip_types        *;
gzip_disable      "MSIE [1-6]\.";
gzip_buffers      16 8k;
gzip_types        text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

# brotli
brotli on;
brotli_comp_level 6;
brotli_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

proxy_cache_path /tmp/nginx-cache levels=1:2 keys_zone=api_cache:10m max_size=10g inactive=60m;

# Angular-universal
upstream ssr_angular {
  server 127.0.0.1:4000;
}

# NginX proxy wrapper
server {
  listen 80;
  listen [::]:80;

  server_name gymsystems.org www.gymsystems.org;
  root /usr/share/nginx/;

  keepalive_timeout   180s;
  client_max_body_size 8M;

  location /api {
    proxy_cache api_cache;
    proxy_cache_lock on;                              # we allow only 1 req per URI to hit origin in case of a cache miss
    proxy_ignore_headers Cache-Control;               # we ask Nginx to ignore the Cache-Control header
    proxy_cache_valid 200 302 10m;                    # we cache any 200 or 302 response for up to 10 minutes
    proxy_cache_valid 404      1m;                    # any 404 response is cached for 1 minute
    proxy_cache_bypass $http_x_no_cache $arg_nocache; # Trigger a synchronous cache update when a specific `X-No-Cache` header or if a `nocache` GET parameter are set
    add_header X-Proxy-Cache $upstream_cache_status;  # we add the X-Proxy-Cache header to our response to the client

    proxy_pass http://api:3000;

    rewrite ^/(.*) /$1 break;
  }

  location / {
    root /usr/share/nginx/browser;
    index index.html index.htm;
    expires 1y;
    add_header Cache-Control "public";
    try_files $uri $uri/ @backend;
  }

  location @backend {
    proxy_pass http://ssr_angular;
  }

  # . files
  location ~ /\.(?!well-known) {
    deny all;
  }

  # assets, media
  location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
    expires 7d;
    access_log off;
  }

  # svg, fonts
  location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
    add_header Access-Control-Allow-Origin "*";
    expires 7d;
    access_log off;
  }

  # security headers
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "no-referrer-when-downgrade" always;
  add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
}
