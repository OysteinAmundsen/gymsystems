var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AdvancedComponent.html",[0,0.234,1,0.9]],["body/components/AdvancedComponent.html",[0,0.303,1,1.297,2,0.929,3,0.053,4,0.048,5,0.712,6,0.712,7,0.698,8,0.712,9,0.048,10,2.863,11,0.82,12,1.291,13,0.643,14,1.936,15,1.933,16,5.281,17,1.03,18,5.858,19,1.03,20,4.868,21,0.153,22,0.532,23,5.858,24,5.858,25,4.631,26,3.756,27,3.942,28,5.858,29,0.629,30,6.52,31,4.314,32,1.437,33,1.335,34,4.868,35,1.564,36,6.52,37,5.858,38,0.389,39,3.231,40,3.125,41,4.161,42,3.438,43,2.988,44,3.326,45,3.691,46,3.125,47,2.508,48,3.691,49,1.012,50,3.231,51,0.775,52,0.008,53,0.663,54,0.364,55,0.64,56,2.202,57,3.231,58,0.904,59,1.075,60,4.868,61,3.231,62,1.901,63,3.231,64,3.231,65,4.868,66,1.802,67,3.231,68,2.295,69,1.99,70,1.368,71,1.186,72,3.231,73,2.988,74,3.231,75,4.161,76,3.231,77,2.017,78,3.231,79,3.231,80,3.447,81,2.295,82,4.868,83,3.121,84,3.231,85,3.231,86,3.231,87,3.231,88,3.231,89,0.144,90,2.621,91,0.231,92,1.038,93,1.219,94,0.757,95,1.549,96,1.982,97,1.704,98,0.107,99,0.14,100,5.777,101,5.858,102,1.312,103,4.968,104,5.858,105,5.858,106,3.231,107,2.265,108,0.568,109,3.231,110,1.03,111,3.231,112,1.219,113,1.145,114,3.231,115,2.621,116,3.088,117,4.751,118,1.015,119,3.231,120,1.704,121,5.288,122,1.779,123,5.777,124,3.231,125,3.121,126,2.295,127,3.231,128,1.829,129,4.868,130,4.868,131,3.231,132,3.231,133,3.231,134,3.231,135,2.894,136,3.231,137,3.231,138,3.231,139,3.231,140,2.863,141,3.231,142,3.231,143,3.231,144,3.231,145,3.231,146,3.231,147,2.863,148,3.231,149,1.901,150,3.231,151,0.839,152,3.231,153,1.764,154,3.231,155,4.868,156,3.231,157,4.868,158,2.175,159,3.231,160,2.863,161,3.231,162,2.072,163,3.231,164,3.231,165,3.231,166,3.458,167,4.314,168,3.121,169,2.576,170,2.865,171,2.657,172,1.45,173,4.868,174,1.564,175,1.136,176,2.621,177,2.107,178,1.249,179,1.28,180,2.44,181,2.265,182,1.597,183,1.549,184,2.621,185,1.383,186,2.863,187,1.901,188,1.829,189,1.829,190,1.751,191,1.461,192,2.295,193,1.549,194,1.219,195,3.231,196,2.202,197,3.277,198,3.458,199,2.084,200,2.567,201,2.333,202,1.836,203,2.295,204,3.231,205,2.175,206,1.11,207,4.868,208,4.314,209,4.631,210,2.175,211,1.711,212,1.764,213,1.978,214,3.231,215,2.175,216,2.072,217,1.504,218,1.549,219,2.072,220,2.621,221,0.521,222,0.968,223,0.989,224,0.63,225,1.437,226,0.712,227,0.712,228,0.63,229,0.712,230,0.643,231,0.712,232,0.643,233,0.712,234,0.643,235,0.929,236,1.804,237,0.656,238,1.073,239,0.643,240,0.712,241,0.643,242,0.684,243,1.073,244,0.643,245,0.698,246,0.712,247,0.656,248,1.291,249,0.656,250,0.643,251,0.656,252,0.712,253,0.643,254,0.656,255,1.03,256,0.656,257,0.643,258,0.712,259,0.643,260,0.643,261,0.63,262,0.712,263,0.643,264,0.712,265,0.656,266,0.712,267,0.712,268,0.617,269,0.712,270,0.643,271,0.712,272,0.643,273,0.712,274,0.63,275,0.63,276,0.712,277,0.63,278,0.712,279,0.656,280,0.712,281,0.643,282,0.712,283,0.656,284,0.617,285,0.712,286,0.643,287,1.03,288,0.656,289,0.712,290,0.656,291,0.712,292,0.656,293,0.712,294,0.656,295,0.712,296,0.63,297,0.712,298,0.63,299,0.712,300,0.656,301,0.712,302,0.656,303,0.712,304,0.656,305,0.712,306,0.643,307,0.712,308,0.656,309,0.656,310,0.63,311,0.656,312,0.712,313,0.643,314,0.684,315,0.712,316,0.643,317,0.712,318,0.656,319,0.643,320,0.643,321,0.712,322,0.643,323,0.712,324,0.656,325,0.568,326,0.643,327,0.698,328,0.643,329,0.712,330,0.643,331,0.604,332,0.643,333,0.712,334,0.643,335,0.712,336,0.643,337,0.656,338,0.712,339,0.656,340,0.643,341,0.712,342,0.63,343,0.698,344,0.712,345,0.003,346,0.004,347,0.003]],["title/modules/AdvancedModule.html",[348,1.362,349,3.215]],["body/modules/AdvancedModule.html",[1,1.788,3,0.103,4,0.092,9,0.092,52,0.008,89,0.171,91,0.445,92,1.999,98,0.114,99,0.27,221,1.004,345,0.005,346,0.006,347,0.005,348,1.873,349,6.727,350,2.466,351,2.737,352,3.842,353,2.896,354,2.595,355,2.664,356,5.515,357,5.515,358,5.515,359,6.05,360,6.05,361,6.05,362,4.065,363,3.658,364,2.664,365,2.466,366,6.224,367,3.267,368,3.267,369,4.024,370,2.737,371,3.772,372,4.894,373,3.397,374,3.397,375,6.191,376,3.893,377,4.166,378,3.772,379,1.833,380,3.397,381,6.224,382,6.224,383,6.224,384,4.189,385,5.515,386,6.224]],["title/components/AppComponent.html",[0,0.234,228,0.882]],["body/components/AppComponent.html",[0,0.263,1,0.514,2,0.782,3,0.068,4,0.038,5,0.569,6,0.569,7,0.558,8,0.569,9,0.038,11,0.689,12,1.121,13,0.514,14,1.914,15,1.907,17,0.866,19,0.866,21,0.275,22,0.372,29,0.529,32,1.275,33,0.493,35,1.315,38,0.493,40,2.774,47,2.177,48,3.276,49,0.995,51,0.765,52,0.008,53,0.591,54,0.333,55,0.632,56,2.3,58,0.909,59,1.238,62,2.409,70,0.912,71,0.821,77,1.669,89,0.149,91,0.185,95,1.238,98,0.047,99,0.112,102,0.995,108,0.719,110,0.996,113,1.235,122,2.032,151,0.671,169,0.951,172,1.054,174,2.026,175,0.908,177,2.916,178,2.718,179,2.89,181,3.124,182,3.713,183,2.438,185,3.295,187,1.52,188,1.462,190,2.082,191,1.852,193,1.238,194,2.38,196,1.852,197,1.739,198,1.835,199,3.011,200,1.362,201,3.371,202,2.183,203,4.111,206,2.167,211,2.64,212,2.235,213,2.727,216,3.71,217,1.202,220,2.095,221,0.417,222,0.814,223,0.831,224,0.503,225,1.275,226,0.569,227,0.569,228,1.128,229,0.569,230,0.514,231,0.569,232,0.514,233,0.569,234,0.514,235,0.782,236,1.696,237,0.525,238,0.902,239,0.514,240,0.569,241,0.514,242,1.076,243,0.902,244,0.514,245,0.558,246,0.569,247,0.525,248,1.121,249,0.525,250,0.514,251,0.525,252,0.569,253,0.514,254,0.525,255,0.866,256,0.525,257,0.514,258,0.569,259,0.514,260,0.514,261,0.503,262,0.569,263,0.514,264,0.569,265,0.525,266,1.275,267,0.569,268,0.493,269,0.569,270,0.514,271,0.569,272,0.514,273,0.569,274,0.503,275,0.503,276,0.569,277,0.503,278,0.569,279,0.525,280,0.569,281,0.514,282,0.569,283,0.525,284,1.393,285,0.569,286,0.514,287,0.866,288,0.525,289,0.569,290,0.525,291,0.569,292,0.525,293,0.569,294,0.525,295,0.569,296,0.503,297,0.569,298,0.503,299,0.569,300,0.525,301,0.569,302,0.525,303,0.569,304,0.525,305,0.569,306,0.514,307,0.569,308,0.525,309,0.525,310,0.503,311,0.525,312,0.569,313,0.514,314,0.546,315,0.569,316,0.514,317,0.569,318,0.525,319,0.514,320,0.514,321,0.569,322,0.514,323,0.569,324,0.525,325,0.454,326,0.514,327,0.558,328,0.514,329,0.569,330,0.514,331,1.255,332,0.514,333,0.569,334,0.514,335,0.569,336,0.514,337,0.525,338,0.569,339,0.525,340,0.514,341,0.569,342,0.503,343,0.558,344,0.569,345,0.002,346,0.003,347,0.002,365,2.015,387,2.289,388,2.067,389,5.086,390,1.801,391,5.086,392,4.094,393,5.086,394,5.086,395,5.086,396,4.125,397,5.948,398,4.094,399,4.094,400,5.787,401,2.413,402,5.787,403,4.094,404,5.086,405,5.086,406,5.086,407,2.289,408,2.799,409,2.693,410,2.787,411,4.125,412,5.787,413,5.086,414,5.787,415,4.094,416,4.094,417,2.583,418,6.309,419,4.094,420,4.768,421,2.583,422,3.628,423,2.583,424,2.583,425,2.583,426,2.583,427,4.094,428,2.583,429,2.583,430,2.583,431,2.067,432,2.583,433,1.919,434,2.583,435,2.583,436,2.583,437,2.583,438,2.583,439,2.583,440,2.583,441,2.583,442,0.729,443,1.95,444,1.95,445,0.685,446,1.077,447,1.077,448,2.583,449,1.584,450,1.95,451,2.095,452,2.583,453,1.362,454,2.583,455,2.095,456,4.094,457,2.583,458,2.583,459,2.095,460,5.086,461,1.95,462,2.583,463,2.289,464,4.094,465,3.628,466,1.023,467,2.289,468,1.739,469,2.583,470,2.583,471,4.094,472,2.583,473,4.094,474,2.583,475,2.583,476,4.094,477,2.583,478,1.739,479,2.095,480,2.583,481,2.583,482,2.583,483,2.583,484,1.656,485,1.835,486,2.583,487,2.583,488,2.583,489,3.321,490,2.583,491,1.95,492,2.583,493,2.583,494,2.583,495,4.094,496,2.583,497,4.094,498,2.289,499,5.086,500,2.583,501,2.289,502,2.289,503,4.094,504,2.583,505,2.095,506,2.583,507,2.289,508,2.289,509,3.628,510,3.582,511,2.289,512,2.289,513,2.583,514,2.583,515,3.091,516,3.091,517,2.625,518,3.091,519,2.908,520,4.094,521,2.756,522,4.094,523,3.321,524,3.628,525,2.583,526,2.095,527,2.874,528,2.511,529,2.879,530,1.462,531,5.086,532,2.874,533,2.625,534,2.088,535,1.656,536,2.095,537,1.95,538,3.371,539,2.289,540,4.094,541,2.095,542,3.628,543,3.982,544,2.289,545,2.583,546,3.091,547,2.095,548,1.656,549,1.656,550,2.289,551,2.095,552,2.289,553,3.572,554,3.091,555,4.518,556,4.246,557,2.625,558,2.159,559,1.835,560,2.289,561,1.315,562,2.583,563,2.289,564,1.202,565,1.656,566,2.237,567,2.583,568,1.656,569,3.84,570,2.583,571,3.321,572,2.583,573,2.095,574,3.869,575,2.583,576,2.289,577,2.511,578,3.326,579,2.583,580,4.694,581,1.95,582,4.125,583,5.086,584,2.511,585,1.835,586,1.739,587,2.289,588,2.583,589,2.095,590,1.739,591,2.583,592,4.094,593,2.289,594,3.628,595,2.289,596,2.289,597,2.583,598,2.583,599,1.95,600,2.095,601,2.583,602,1.95,603,2.289,604,2.289,605,2.583,606,1.95,607,2.289,608,2.583,609,1.95,610,1.962,611,2.583,612,1.462,613,2.583,614,2.095,615,2.583,616,2.289,617,2.583,618,1.739,619,1.95,620,2.023,621,2.583,622,2.583,623,2.583,624,2.583,625,2.583,626,2.583,627,1.739,628,3.321,629,3.261,630,3.628,631,2.095,632,1.835,633,1.462]],["title/modules/AppModule.html",[348,1.362,634,3.046]],["body/modules/AppModule.html",[2,0.831,3,0.072,4,0.064,9,0.064,15,0.884,40,2.085,41,4.29,48,3.927,52,0.008,56,1.968,69,1.178,89,0.173,91,0.311,92,1.397,95,2.085,98,0.137,99,0.262,102,1.039,110,1.095,118,2.473,151,1.568,221,0.702,222,0.866,228,1.739,268,1.555,275,1.587,277,1.587,296,1.587,298,1.587,345,0.004,346,0.005,347,0.004,348,2.087,350,2.748,351,2.656,352,3.228,353,3.228,354,2.892,355,1.863,362,3.684,363,2.894,364,1.863,365,1.724,367,2.969,368,2.585,370,1.914,371,2.984,376,3.08,377,3.296,378,2.984,379,1.281,431,2.454,443,3.285,444,3.285,446,2.518,447,1.814,449,2.668,450,3.285,451,3.529,455,3.529,461,3.285,478,2.929,505,3.529,515,3.285,568,2.79,634,6.343,635,3.856,636,3.856,637,3.856,638,3.856,639,3.856,640,5.483,641,5.483,642,5.483,643,5.483,644,3.285,645,3.856,646,3.856,647,4.56,648,3.529,649,3.856,650,5.351,651,5.351,652,3.872,653,5.351,654,1.635,655,5.351,656,5.626,657,5.351,658,3.856,659,3.856,660,3.856,661,3.285,662,3.285,663,3.529,664,5.351,665,3.856,666,3.529,667,4.56,668,3.856,669,3.091,670,4.56,671,3.091,672,2.294,673,3.529,674,3.285,675,3.296,676,5.351,677,3.554,678,3.703,679,3.872,680,4.29,681,4.065,682,3.856,683,3.856,684,3.856,685,3.856,686,3.856,687,3.285,688,3.856,689,3.856,690,3.856,691,3.285,692,3.529,693,3.529,694,3.529,695,3.529,696,3.856,697,3.529,698,3.856,699,3.529,700,3.856,701,4.253,702,3.856,703,3.529,704,3.856,705,3.856,706,3.856,707,5.237,708,3.184,709,3.856,710,3.856,711,4.56,712,2.15,713,3.856,714,3.856,715,5.351,716,3.856,717,3.856,718,2.085,719,3.856,720,3.856,721,3.856,722,3.856,723,3.856,724,3.856,725,4.632,726,3.529,727,3.285,728,3.529,729,3.856,730,3.856,731,3.856,732,3.856,733,3.856,734,3.856,735,3.856,736,3.856,737,3.856,738,3.856,739,3.856,740,3.856,741,3.856,742,3.856,743,2.929,744,3.856,745,2.929,746,6.146,747,4.065,748,3.856,749,3.285,750,3.856,751,3.856]],["title/modules/AppRoutingModule.html",[348,1.362,640,3.046]],["body/modules/AppRoutingModule.html",[0,0.457,3,0.104,4,0.092,9,0.092,52,0.008,66,1.733,89,0.169,91,0.448,98,0.115,99,0.272,102,1.078,242,1.326,268,1.464,275,1.494,277,1.494,296,1.494,298,1.494,345,0.005,346,0.006,347,0.005,350,3.038,355,2.684,364,2.684,367,2.684,368,3.282,442,1.77,478,5.575,516,4.734,517,4.02,519,4.454,640,5.161,692,5.085,693,5.085,694,5.085,695,5.085,697,5.085,752,6.27,753,5.085,754,4.043,755,5.789,756,6.27,757,6.27,758,7.467,759,5.085,760,4.734,761,4.22,762,5.085,763,6.27,764,6.27,765,7.667,766,6.27,767,6.27,768,6.27,769,6.27,770,6.27,771,5.556,772,4.734,773,6.27]],["title/modules/AppServerModule.html",[348,1.362,774,3.417]],["body/modules/AppServerModule.html",[3,0.109,4,0.097,9,0.097,52,0.008,89,0.169,91,0.473,95,3.166,221,1.066,228,1.777,345,0.006,346,0.007,347,0.006,348,1.988,350,2.617,351,2.906,352,3.074,353,3.683,354,3.3,355,2.828,363,3.793,364,2.828,365,2.617,367,3.388,368,3.388,634,6.136,652,4.236,656,5.358,667,4.988,691,4.988,774,7.017,775,5.854,776,6.606,777,6.606,778,5.854,779,6.379,780,6.606,781,7.914,782,4.693,783,7.914,784,5.854,785,4.051,786,5.854,787,6.606,788,6.606]],["title/interceptors/AuthInterceptor.html",[642,3.046,745,3.046]],["body/interceptors/AuthInterceptor.html",[3,0.05,4,0.045,9,0.045,11,0.511,21,0.144,22,0.422,29,0.6,33,1.299,35,1.491,38,0.679,40,3.026,47,1.987,49,0.947,51,0.987,52,0.008,53,0.605,54,0.417,55,0.815,56,2.549,58,0.927,59,0.765,70,1.011,89,0.156,91,0.217,93,1.145,95,1.455,98,0.056,99,0.132,102,1.409,107,2.16,108,0.815,110,1.294,113,1.352,122,1.181,125,5.501,153,2.534,158,2.043,162,1.946,193,2.225,260,1.745,331,1.44,345,0.003,346,0.004,347,0.003,379,0.894,397,2.689,408,2.35,409,3.166,410,2.843,442,0.857,445,0.805,446,1.265,447,1.265,453,1.6,463,4.114,517,1.946,521,5.513,523,2.462,561,1.491,609,3.505,642,3.125,654,1.257,661,2.292,662,4.767,699,3.765,718,1.455,771,2.689,782,2.156,785,1.861,789,2.462,790,2.689,791,5.637,792,5.637,793,4.642,794,4.642,795,4.642,796,5.121,797,4.642,798,4.642,799,5.637,800,2.156,801,2.413,802,2.855,803,6.314,804,3.715,805,4.004,806,4.485,807,5.637,808,5.637,809,6.314,810,4.642,811,4.642,812,6.696,813,6.081,814,3.035,815,4.642,816,7.362,817,6.314,818,4.642,819,3.439,820,6.314,821,4.642,822,4.642,823,4.642,824,4.642,825,4.114,826,4.642,827,5.959,828,7.362,829,4.642,830,4.642,831,2.847,832,4.642,833,4.642,834,3.505,835,4.642,836,3.317,837,4.114,838,4.642,839,4.642,840,1.257,841,3.125,842,7.7,843,4.767,844,3.765,845,3.034,846,3.765,847,4.114,848,5.595,849,6.314,850,4.642,851,4.114,852,4.642,853,3.765,854,5.814,855,4.642,856,3.035,857,5.637,858,4.642,859,4.642,860,2.976,861,6.616,862,4.642,863,8.5,864,7.137,865,4.642,866,6.314,867,3.765,868,5.595,869,4.642,870,6.804,871,5.595,872,7.175,873,5.595,874,3.035,875,6.804,876,3.035,877,4.642,878,3.035,879,2.689,880,3.035,881,4.642,882,4.642,883,4.642,884,6.029,885,3.765,886,3.191,887,5.121,888,3.035,889,5.121,890,4.642,891,2.972,892,4.642,893,3.035,894,4.642,895,3.035,896,4.256,897,3.125,898,4.114,899,4.642,900,3.765,901,3.035,902,3.035,903,3.035,904,2.689,905,2.689,906,2.689,907,3.035,908,1.786,909,2.702,910,2.043,911,2.043,912,2.462,913,2.462,914,3.035,915,3.035,916,1.861,917,3.035,918,2.462,919,3.035,920,3.035,921,3.035,922,4.642,923,3.035,924,2.462,925,2.689,926,3.035,927,3.035,928,2.689,929,3.035,930,2.689,931,5.637,932,2.689,933,3.035,934,3.035,935,3.035,936,2.689,937,3.035,938,2.156,939,5.637,940,4.642,941,3.035,942,3.035,943,3.035,944,3.035,945,3.035,946,3.035,947,3.035,948,1.657,949,4.572,950,2.689,951,3.035,952,3.505,953,4.642,954,4.642,955,4.642,956,3.035,957,3.035,958,2.462,959,3.035,960,3.035,961,3.035,962,2.462,963,3.035,964,3.035,965,1.946,966,2.689,967,4.642,968,4.642,969,4.642,970,4.642,971,2.689,972,3.035,973,3.035,974,3.035,975,3.035,976,3.035,977,3.035,978,3.035,979,2.689,980,3.035,981,3.035,982,2.462,983,3.505,984,3.035,985,3.035,986,2.689,987,3.035,988,2.156,989,3.035,990,2.689,991,3.035,992,3.035,993,4.642,994,2.689,995,3.035,996,3.035,997,6.804,998,3.035,999,4.642,1000,2.156,1001,2.292,1002,2.462,1003,3.035,1004,3.035,1005,3.035,1006,3.035,1007,2.043,1008,3.035,1009,3.035,1010,3.035,1011,3.035,1012,1.657,1013,3.035,1014,3.035,1015,3.035,1016,5.637,1017,3.035,1018,3.035,1019,4.642,1020,3.035,1021,3.035,1022,3.035,1023,3.035,1024,3.035]],["title/components/AwardsComponent.html",[0,0.234,230,0.9]],["body/components/AwardsComponent.html",[0,0.384,1,0.992,2,1.265,3,0.082,4,0.073,5,1.099,6,1.099,7,1.077,8,1.099,9,0.073,11,1.116,12,1.64,13,0.992,14,1.971,15,1.969,17,1.402,19,1.402,21,0.237,29,0.856,32,1.747,33,0.952,38,0.896,49,0.779,52,0.008,53,0.642,58,0.645,59,0.822,89,0.091,91,0.357,98,0.091,99,0.216,172,1.542,221,0.805,222,1.318,223,1.345,224,0.972,225,1.747,226,1.099,227,1.099,228,0.972,229,1.099,230,1.577,231,1.099,232,0.992,233,1.099,234,0.992,235,1.265,236,1.981,237,1.013,238,1.46,239,0.992,240,1.099,241,0.992,242,1.055,243,1.46,244,0.992,245,1.077,246,1.099,247,1.013,248,1.64,249,1.013,250,0.992,251,1.013,252,1.099,253,0.992,254,1.013,255,1.402,256,1.013,257,0.992,258,1.099,259,0.992,260,0.992,261,0.972,262,1.099,263,0.992,264,1.099,265,1.013,266,1.099,267,1.099,268,0.952,269,1.099,270,0.992,271,1.099,272,0.992,273,1.099,274,0.972,275,0.972,276,1.099,277,0.972,278,1.099,279,1.013,280,1.099,281,0.992,282,1.099,283,1.013,284,0.952,285,1.099,286,0.992,287,1.402,288,1.013,289,1.099,290,1.013,291,1.099,292,1.013,293,1.099,294,1.013,295,1.099,296,0.972,297,1.099,298,0.972,299,1.099,300,1.013,301,1.099,302,1.013,303,1.099,304,1.013,305,1.099,306,0.992,307,1.099,308,1.013,309,1.013,310,0.972,311,1.013,312,1.099,313,0.992,314,1.055,315,1.099,316,0.992,317,1.099,318,1.013,319,0.992,320,0.992,321,1.099,322,0.992,323,1.099,324,1.013,325,0.876,326,0.992,327,1.077,328,0.992,329,1.099,330,0.992,331,0.933,332,0.992,333,1.099,334,0.992,335,1.099,336,0.992,337,1.013,338,1.099,339,1.013,340,0.992,341,1.099,342,0.972,343,1.077,344,1.099,345,0.004,346,0.006,347,0.004,1025,4.419,1026,7.025,1027,7.44,1028,6.626,1029,4.988,1030,4.988,1031,6.626]],["title/injectables/BrowserService.html",[40,2.169,654,1.225]],["body/injectables/BrowserService.html",[3,0.093,4,0.083,9,0.083,21,0.267,29,0.926,38,0.678,40,3.435,49,1.047,51,0.744,52,0.008,53,0.456,54,0.279,55,0.614,56,3.241,58,1.133,59,1.181,69,1.523,83,5.62,89,0.131,91,0.402,98,0.103,99,0.244,102,0.968,107,3.335,108,0.988,110,1.407,113,0.988,158,4.824,345,0.005,346,0.006,347,0.005,370,2.475,390,2.475,449,4.836,654,1.94,1032,2.618,1033,4.564,1034,3.451,1035,6.35,1036,7.167,1037,6.35,1038,8.303,1039,7.167,1040,6.35,1041,7.357,1042,7.167,1043,7.167,1044,6.35,1045,7.225,1046,9.017,1047,9.017,1048,8.068,1049,5.627,1050,5.601,1051,5.627,1052,7.167,1053,5.627,1054,5.627,1055,9.017,1056,5.627,1057,5.627,1058,5.627,1059,5.627,1060,3.787,1061,5.627,1062,5.627,1063,6.396,1064,4.986,1065,4.986,1066,4.986,1067,4.986,1068,4.986,1069,2.545,1070,5.627,1071,5.627,1072,5.627,1073,5.627,1074,5.627,1075,7.167,1076,5.627]],["title/guards/CanActivateRegistration.html",[755,3.417,1077,3.215]],["body/guards/CanActivateRegistration.html",[3,0.105,4,0.094,9,0.094,11,1.074,21,0.303,29,1.001,38,0.768,49,0.911,51,1.025,52,0.008,53,0.628,54,0.384,55,0.846,58,0.825,77,1.84,89,0.163,91,0.456,98,0.117,99,0.277,110,1.224,112,2.407,113,1.121,116,3.364,118,2.005,174,2.681,260,1.542,287,1.35,345,0.005,346,0.007,347,0.005,390,2.807,409,4.04,442,1.801,446,2.66,447,2.66,449,3.913,654,2.098,755,5.851,761,5.843,801,2.732,804,5.108,805,5.929,910,4.295,911,4.295,1069,2.886,1078,4.818,1079,7.396,1080,5.654,1081,6.381,1082,6.381,1083,6.286,1084,7.041,1085,7.041,1086,6.381,1087,1.962,1088,6.381,1089,6.381,1090,6.381,1091,5.175,1092,6.381,1093,6.381,1094,6.381,1095,5.175,1096,5.654,1097,6.381,1098,5.654]],["title/components/ClubComponent.html",[0,0.234,232,0.9]],["body/components/ClubComponent.html",[0,0.343,1,0.8,2,1.091,3,0.066,4,0.084,5,0.886,6,0.886,7,0.868,8,0.886,9,0.059,11,0.962,12,1.465,13,0.8,14,1.955,15,1.953,17,1.209,19,1.209,21,0.191,22,0.519,29,0.738,32,1.595,33,0.768,38,0.688,45,3.763,46,3.469,49,0.982,51,0.532,52,0.008,53,0.662,54,0.329,55,0.439,58,0.859,59,1.096,66,1.58,70,1.025,71,0.922,89,0.153,91,0.288,93,1.517,94,0.942,97,2.121,98,0.074,99,0.174,113,1.343,116,2.121,151,1.484,172,1.378,174,1.835,221,0.649,222,1.137,223,1.16,224,0.784,225,1.595,226,0.886,227,0.886,228,0.784,229,0.886,230,0.8,231,0.886,232,1.44,233,0.886,234,0.8,235,1.56,236,1.899,237,0.817,238,1.259,239,0.8,240,0.886,241,0.8,242,0.851,243,1.259,244,0.8,245,0.868,246,0.886,247,0.817,248,1.465,249,0.817,250,0.8,251,0.817,252,0.886,253,0.8,254,0.817,255,1.209,256,0.817,257,0.8,258,0.886,259,0.8,260,0.8,261,0.784,262,0.886,263,0.8,264,0.886,265,0.817,266,0.886,267,0.886,268,0.768,269,0.886,270,0.8,271,0.886,272,0.8,273,0.886,274,0.784,275,0.784,276,0.886,277,0.784,278,0.886,279,0.817,280,0.886,281,0.8,282,0.886,283,0.817,284,0.768,285,0.886,286,0.8,287,1.209,288,0.817,289,0.886,290,0.817,291,0.886,292,0.817,293,0.886,294,0.817,295,0.886,296,0.784,297,0.886,298,0.784,299,0.886,300,0.817,301,0.886,302,0.817,303,0.886,304,0.817,305,0.886,306,0.8,307,0.886,308,0.817,309,0.817,310,0.784,311,0.817,312,0.886,313,0.8,314,0.851,315,0.886,316,0.8,317,0.886,318,0.817,319,0.8,320,0.8,321,0.886,322,0.8,323,0.886,324,0.817,325,0.706,326,0.8,327,0.868,328,0.8,329,0.886,330,0.8,331,1.429,332,0.8,333,0.886,334,0.8,335,0.886,336,0.8,337,0.817,338,0.886,339,0.817,340,0.8,341,0.886,342,0.784,343,0.868,344,0.886,345,0.003,346,0.005,347,0.003,365,1.593,388,2.701,401,3.018,408,3.407,410,3.237,431,2.701,433,2.507,442,1.135,445,1.066,491,4.315,564,1.872,718,1.928,801,2.845,802,3.273,840,1.547,1012,2.195,1099,3.564,1100,6.647,1101,5.714,1102,6.647,1103,2.923,1104,7.237,1105,2.155,1106,2.584,1107,2.466,1108,1.919,1109,5.714,1110,1.517,1111,1.928,1112,2.264,1113,4.022,1114,4.022,1115,4.022,1116,4.022,1117,3.846,1118,3.505,1119,4.022,1120,4.022,1121,1.517,1122,1.987,1123,1.634,1124,2.195,1125,2.466,1126,1.184,1127,3.262,1128,7.645,1129,3.037,1130,2.857,1131,3.262,1132,2.195,1133,4.022,1134,2.579,1135,4.022,1136,4.022,1137,3.037,1138,4.022,1139,2.707,1140,3.564,1141,2.824,1142,2.824,1143,2.051,1144,2.195,1145,1.928,1146,2.707,1147,1.872,1148,1.819,1149,2.513,1150,2.466,1151,4.022,1152,4.315,1153,2.584]],["title/components/ClubEditorComponent.html",[0,0.234,234,0.9]],["body/components/ClubEditorComponent.html",[0,0.325,1,0.599,2,0.881,3,0.05,4,0.044,5,0.664,6,0.664,7,0.651,8,0.664,9,0.044,11,0.777,12,1.237,13,0.599,14,1.929,15,1.925,17,0.977,19,0.977,21,0.143,22,0.419,29,0.597,32,1.386,33,1.295,35,1.483,38,0.556,43,2.355,44,3.209,49,1.036,51,0.742,52,0.008,53,0.68,54,0.354,55,0.613,58,0.993,59,1.266,66,1.276,70,1.283,71,1.155,73,2.863,77,2.215,89,0.147,91,0.216,92,0.968,93,1.137,94,0.706,98,0.055,99,0.131,102,0.794,110,0.476,113,1.191,118,1.763,120,1.589,122,1.6,135,1.489,151,1.761,169,1.11,172,1.163,175,1.059,177,2.019,178,1.165,181,2.148,182,1.489,183,1.444,191,1.363,193,1.444,199,1.29,200,1.589,201,2.213,202,2.117,205,2.028,206,1.035,218,1.444,221,0.486,222,0.918,223,0.937,224,0.587,225,1.386,226,0.664,227,0.664,228,0.587,229,0.664,230,0.599,231,0.664,232,0.599,233,0.664,234,1.251,235,1.649,236,1.772,237,0.612,238,1.017,239,0.599,240,0.664,241,0.599,242,0.637,243,1.017,244,0.599,245,0.651,246,0.664,247,0.612,248,1.237,249,0.612,250,0.599,251,0.612,252,0.664,253,0.599,254,0.612,255,0.977,256,0.612,257,0.599,258,0.664,259,0.599,260,0.599,261,0.587,262,0.664,263,0.599,264,0.664,265,0.612,266,0.664,267,0.664,268,0.575,269,0.664,270,0.599,271,0.664,272,0.599,273,0.664,274,0.587,275,0.587,276,0.664,277,0.587,278,0.664,279,0.612,280,0.664,281,0.599,282,0.664,283,0.612,284,1.201,285,0.664,286,0.599,287,0.977,288,0.612,289,0.664,290,0.612,291,0.664,292,0.612,293,0.664,294,0.612,295,0.664,296,0.587,297,0.664,298,0.587,299,0.664,300,0.612,301,0.664,302,0.612,303,0.664,304,0.612,305,0.664,306,0.599,307,0.664,308,0.612,309,0.612,310,0.587,311,0.612,312,0.664,313,0.599,314,0.637,315,0.664,316,0.599,317,0.664,318,0.612,319,0.599,320,0.599,321,0.664,322,0.599,323,0.664,324,0.612,325,0.529,326,0.599,327,0.651,328,0.599,329,0.664,330,0.599,331,1.338,332,0.599,333,0.664,334,0.599,335,0.664,336,0.599,337,0.612,338,1.237,339,0.612,340,0.599,341,0.664,342,0.587,343,0.651,344,0.664,345,0.003,346,0.004,347,0.003,408,3.105,410,2.95,431,2.28,442,0.851,445,0.799,491,3.486,527,1.976,535,1.932,548,1.932,549,1.932,553,1.706,554,2.275,555,2.028,610,1.444,620,1.489,801,2.403,802,2.845,831,1.848,840,1.519,845,2.907,938,2.14,1012,2.52,1105,1.741,1108,1.668,1110,1.137,1112,1.829,1121,1.137,1122,3.892,1123,2.28,1126,0.887,1130,2.14,1131,2.444,1132,1.645,1134,4.033,1141,2.281,1142,2.281,1148,1.363,1149,1.325,1152,4.237,1154,7.85,1155,5.68,1156,1.706,1157,3.302,1158,2.717,1159,4.973,1160,5.612,1161,5.612,1162,4.973,1163,5.612,1164,3.777,1165,3.772,1166,4.617,1167,6.29,1168,4.617,1169,4.091,1170,5.501,1171,1.645,1172,2.67,1173,2.67,1174,2.444,1175,2.67,1176,4.617,1177,3.013,1178,2.67,1179,2.444,1180,2.275,1181,2.444,1182,3.013,1183,4.617,1184,3.013,1185,2.14,1186,3.777,1187,2.444,1188,2.275,1189,4.617,1190,1.932,1191,2.14,1192,2.275,1193,2.275,1194,2.14,1195,2.67,1196,2.14,1197,1.589,1198,3.013,1199,2.67,1200,3.013,1201,2.275,1202,5.612,1203,4.617,1204,4.617,1205,3.013,1206,2.444,1207,1.428,1208,5.501,1209,1.645,1210,3.013,1211,3.013,1212,3.013,1213,3.013,1214,2.67,1215,2.275,1216,2.67,1217,3.013,1218,5.612,1219,2.444,1220,4.091,1221,6.782,1222,3.013,1223,3.013,1224,5.612,1225,2.444,1226,3.013,1227,2.028,1228,3.013,1229,3.013,1230,2.275,1231,2.67,1232,3.013,1233,3.013,1234,3.013,1235,2.614,1236,3.013,1237,3.013,1238,3.013,1239,3.013,1240,3.013,1241,3.013,1242,3.013,1243,3.013,1244,2.67,1245,1.589,1246,2.275,1247,6.808,1248,7.683,1249,7.683,1250,6.808,1251,4.617,1252,3.486,1253,4.617,1254,2.281,1255,4.617,1256,4.617,1257,3.745,1258,2.444,1259,2.67,1260,3.013,1261,2.275,1262,2.275,1263,4.617,1264,3.013]],["title/components/ClubLookupComponent.html",[0,0.234,237,0.919]],["body/components/ClubLookupComponent.html",[0,0.309,1,0.666,2,0.955,3,0.055,4,0.049,5,0.738,6,0.738,7,0.723,8,0.738,9,0.049,11,0.842,12,1.319,13,0.666,14,1.94,15,1.936,17,1.058,19,1.058,21,0.237,22,0.454,29,0.646,32,1.463,33,0.639,35,1.606,38,0.403,47,1.434,49,1.041,51,1.021,52,0.008,53,0.687,54,0.409,55,0.843,58,1.048,59,1.362,62,3.906,69,0.907,70,1.073,71,1.37,77,0.966,89,0.146,91,0.24,92,1.076,94,0.785,98,0.061,99,0.145,102,0.576,107,1.559,108,0.588,110,1.048,112,1.263,113,1.051,118,1.571,135,2.471,149,1.971,151,1.299,172,1.24,177,1.205,178,1.294,211,1.177,213,1.361,217,1.559,218,1.605,219,2.147,221,0.54,222,0.995,223,1.015,224,0.653,225,1.463,226,0.738,227,0.738,228,0.653,229,0.738,230,0.666,231,0.738,232,0.666,233,0.738,234,0.666,235,1.621,236,1.82,237,1.513,238,1.102,239,0.666,240,0.738,241,0.666,242,0.709,243,1.102,244,0.666,245,0.723,246,0.738,247,0.68,248,1.319,249,0.68,250,0.666,251,0.68,252,0.738,253,0.666,254,0.68,255,1.058,256,0.68,257,0.666,258,0.738,259,0.666,260,0.666,261,0.653,262,0.738,263,0.666,264,0.738,265,0.68,266,0.738,267,0.738,268,0.639,269,0.738,270,0.666,271,0.738,272,0.666,273,0.738,274,0.653,275,0.653,276,0.738,277,0.653,278,0.738,279,0.68,280,0.738,281,0.666,282,0.738,283,0.68,284,0.639,285,0.738,286,0.666,287,1.058,288,0.68,289,0.738,290,0.68,291,0.738,292,0.68,293,0.738,294,0.68,295,0.738,296,0.653,297,0.738,298,0.653,299,0.738,300,0.68,301,0.738,302,0.68,303,0.738,304,0.68,305,0.738,306,0.666,307,0.738,308,0.68,309,0.68,310,0.653,311,0.68,312,0.738,313,0.666,314,0.709,315,0.738,316,0.666,317,0.738,318,0.68,319,0.666,320,0.666,321,0.738,322,0.666,323,0.738,324,0.68,325,0.588,326,0.666,327,0.723,328,0.666,329,0.738,330,0.666,331,0.935,332,0.666,333,0.738,334,0.666,335,0.738,336,0.666,337,0.68,338,0.738,339,0.68,340,0.666,341,0.738,342,0.653,343,0.723,344,0.738,345,0.003,346,0.004,347,0.003,354,2.085,379,0.986,388,2.432,401,2.768,433,2.257,445,0.888,466,1.327,521,2.254,561,1.076,564,1.559,600,2.717,701,3.067,725,2.943,747,3.366,749,2.529,785,2.054,834,2.529,836,1.971,840,1.354,908,1.971,916,2.054,1103,2.632,1107,2.054,1108,1.76,1122,4.241,1126,0.986,1143,1.708,1145,1.605,1152,5.012,1186,5.342,1214,2.968,1235,3.388,1265,7.89,1266,7.222,1267,2.717,1268,5.882,1269,4.519,1270,3.776,1271,4.519,1272,4.056,1273,5.303,1274,4.431,1275,5.985,1276,5.303,1277,5.985,1278,5.303,1279,4.431,1280,4.431,1281,5.882,1282,4.431,1283,5.001,1284,4.056,1285,2.141,1286,5.001,1287,2.968,1288,4.431,1289,3.349,1290,3.349,1291,3.349,1292,4.431,1293,3.349,1294,3.776,1295,3.349,1296,4.431,1297,5.882,1298,3.349,1299,2.968,1300,5.001,1301,4.251,1302,3.349,1303,4.056,1304,3.349,1305,2.968,1306,2.968,1307,2.968,1308,2.968,1309,2.968,1310,3.349,1311,3.349,1312,2.968,1313,2.632,1314,4.056,1315,2.254,1316,2.717,1317,3.349,1318,2.254,1319,2.968,1320,5.985,1321,3.349,1322,3.349,1323,3.349,1324,2.968,1325,2.379,1326,3.349,1327,3.349,1328,2.717,1329,3.349,1330,3.349,1331,2.968,1332,2.968,1333,2.968,1334,2.968,1335,2.968,1336,2.968,1337,3.349,1338,5.001,1339,3.349,1340,3.349,1341,3.349,1342,2.968,1343,3.349,1344,3.349,1345,3.349,1346,3.349,1347,2.968,1348,2.968,1349,2.968,1350,3.349,1351,2.054,1352,2.968,1353,3.349,1354,3.349,1355,3.349,1356,1.473]],["title/modules/ClubModule.html",[348,1.362,1357,3.215]],["body/modules/ClubModule.html",[3,0.091,4,0.081,9,0.081,52,0.008,89,0.172,91,0.395,92,1.774,98,0.101,99,0.239,221,0.891,232,1.735,234,1.735,235,1.054,281,1.735,286,1.735,288,1.771,316,1.735,326,1.735,328,1.735,345,0.005,346,0.006,347,0.005,348,1.662,350,2.188,351,2.429,352,3.637,353,2.57,354,3.259,355,2.364,362,3.945,363,3.394,364,2.364,365,2.188,367,3.031,368,3.031,369,3.734,370,2.429,371,3.499,375,5.743,376,3.612,377,3.865,378,3.499,379,1.626,380,3.014,442,1.559,675,3.865,677,4.167,679,4.54,681,4.766,754,3.734,913,4.479,1155,3.541,1357,6.802,1358,4.893,1359,4.893,1360,4.893,1361,4.893,1362,5.871,1363,6.196,1364,5.522,1365,4.766,1366,5.347,1367,5.347,1368,5.743,1369,4.893,1370,5.522,1371,3.535,1372,5.522,1373,5.522,1374,4.479,1375,5.522,1376,5.522,1377,5.522,1378,4.479,1379,5.522,1380,5.522]],["title/injectables/CommonService.html",[654,1.225,1381,2.169]],["body/injectables/CommonService.html",[3,0.089,4,0.079,9,0.079,21,0.255,22,0.632,29,0.899,38,0.929,49,1.018,51,1.118,52,0.008,53,0.685,54,0.419,55,0.923,58,1.092,83,5.97,89,0.15,91,0.384,94,1.26,98,0.099,99,0.233,102,1.489,108,1.599,110,1.335,122,1.367,199,2.301,325,1.222,345,0.005,346,0.006,347,0.005,390,2.364,561,1.726,654,1.884,909,3.335,1032,2.501,1069,2.431,1381,3.335,1382,4.763,1383,6.959,1384,6.167,1385,6.959,1386,6.959,1387,6.959,1388,5.375,1389,6.959,1390,5.375,1391,4.36,1392,6.959,1393,3.079,1394,5.375,1395,6.959,1396,1.666,1397,5.375,1398,5.375,1399,5.375,1400,5.375,1401,3.618,1402,6.959,1403,3.912,1404,8.454,1405,4.803,1406,5.375,1407,3.296,1408,2.241,1409,4.763,1410,4.763,1411,5.375,1412,5.375,1413,5.375,1414,4.763,1415,4.36,1416,4.059,1417,5.375,1418,6.959,1419,5.375,1420,5.375,1421,2.834,1422,4.763,1423,5.375,1424,3.818,1425,4.059,1426,3.163,1427,5.375,1428,3.446,1429,5.375,1430,8.162,1431,5.375,1432,6.959,1433,5.375,1434,7.717,1435,5.375,1436,5.375,1437,4.763,1438,6.959,1439,5.375,1440,5.375,1441,5.375,1442,4.763,1443,4.763,1444,4.763,1445,4.36,1446,5.375,1447,5.375]],["title/injectables/ConfigurationService.html",[42,2.386,654,1.225]],["body/injectables/ConfigurationService.html",[3,0.1,4,0.089,9,0.089,21,0.287,22,0.68,25,5.785,29,0.968,33,1.43,38,0.727,42,3.95,47,3.207,48,4.821,49,1.049,51,1.126,52,0.008,53,0.709,54,0.434,55,0.93,58,1.101,70,1.083,71,0.974,75,6.59,89,0.156,91,0.432,94,1.415,95,2.894,98,0.111,99,0.262,108,1.496,110,1.345,112,2.277,153,4.446,345,0.005,346,0.006,347,0.005,390,2.655,445,1.601,654,2.028,845,3.044,891,4.617,1032,2.809,1069,2.73,1448,5.35,1449,7.491,1450,4.288,1451,7.491,1452,6.037,1453,7.491,1454,6.037,1455,7.491,1456,6.037,1457,7.491,1458,6.037,1459,7.491,1460,6.037,1461,6.037,1462,6.037,1463,6.037]],["title/components/ConfigureComponent.html",[0,0.234,239,0.9]],["body/components/ConfigureComponent.html",[0,0.36,1,0.875,2,1.162,3,0.073,4,0.065,5,0.97,6,0.97,7,0.95,8,0.97,9,0.065,11,1.025,12,1.538,13,0.875,14,1.962,15,1.96,16,4.596,17,1.288,19,1.288,21,0.209,29,0.787,32,1.659,33,0.84,38,0.84,49,0.716,52,0.008,53,0.61,58,0.569,59,0.725,89,0.112,91,0.315,98,0.081,99,0.191,122,2.079,166,4.323,169,1.621,172,1.446,175,1.547,177,2.843,179,2.411,189,2.491,190,2.94,194,2.981,196,1.99,199,1.884,202,2.296,206,2.397,211,2.873,212,2.402,213,2.473,217,3.678,221,0.71,222,1.211,223,1.236,224,0.858,225,1.659,226,0.97,227,0.97,228,0.858,229,0.97,230,0.875,231,0.97,232,0.875,233,0.97,234,0.875,235,1.437,236,1.934,237,0.894,238,1.341,239,1.498,240,0.97,241,0.875,242,1.476,243,1.341,244,0.875,245,0.95,246,0.97,247,0.894,248,1.538,249,0.894,250,0.875,251,0.894,252,0.97,253,0.875,254,0.894,255,1.288,256,0.894,257,0.875,258,0.97,259,0.875,260,0.875,261,0.858,262,0.97,263,0.875,264,0.97,265,0.894,266,0.97,267,0.97,268,0.84,269,0.97,270,0.875,271,0.97,272,0.875,273,0.97,274,0.858,275,0.858,276,0.97,277,0.858,278,0.97,279,0.894,280,0.97,281,0.875,282,0.97,283,0.894,284,1.6,285,0.97,286,0.875,287,1.288,288,0.894,289,0.97,290,0.894,291,0.97,292,0.894,293,0.97,294,0.894,295,0.97,296,0.858,297,0.97,298,0.858,299,0.97,300,0.894,301,0.97,302,0.894,303,0.97,304,0.894,305,0.97,306,0.875,307,0.97,308,0.894,309,0.894,310,0.858,311,0.894,312,0.97,313,0.875,314,0.931,315,0.97,316,0.875,317,0.97,318,0.894,319,0.875,320,0.875,321,0.97,322,0.875,323,0.97,324,0.894,325,0.773,326,0.875,327,0.95,328,0.875,329,0.97,330,0.875,331,0.823,332,0.875,333,0.97,334,0.875,335,0.97,336,0.875,337,1.417,338,0.97,339,0.894,340,0.875,341,0.97,342,0.858,343,0.95,344,0.97,345,0.004,346,0.005,347,0.004,365,2.411,510,2.048,518,4.596,526,3.569,532,1.884,534,2.245,538,2.917,543,2.402,546,3.323,553,3.95,558,2.32,564,3.678,566,2.677,577,2.699,612,2.491,619,3.323,627,2.962,629,2.821,633,2.491,1301,4.323,1464,3.899,1465,6.978,1466,6.087,1467,4.401,1468,4.401,1469,3.446,1470,4.596,1471,4.401,1472,3.126,1473,3.126,1474,4.401,1475,3.569,1476,4.937,1477,2.962,1478,4.401,1479,3.899]],["title/components/ConfigureDisplayComponent.html",[0,0.234,241,0.9]],["body/components/ConfigureDisplayComponent.html",[0,0.32,1,0.705,2,0.996,3,0.059,4,0.052,5,0.781,6,0.781,7,0.765,8,0.781,9,0.052,11,0.878,12,1.364,13,0.705,14,1.945,15,1.942,17,1.103,19,1.103,21,0.168,22,0.474,29,0.674,32,1.504,33,1.388,38,0.628,41,3.705,42,3.598,45,3.503,46,3.271,49,1.02,51,0.818,52,0.008,53,0.653,54,0.4,55,0.676,58,1.016,59,1.296,66,0.98,69,0.96,70,0.935,71,1.101,89,0.144,91,0.254,93,1.337,97,1.869,98,0.065,99,0.154,102,0.61,107,1.649,108,1.087,113,1.199,115,2.875,122,1.85,125,2.273,135,1.752,149,3.069,166,2.518,169,1.305,172,1.282,174,1.675,175,1.246,176,2.875,177,2.455,178,2.016,179,1.404,180,2.676,181,2.427,182,1.752,183,1.699,184,2.875,185,1.517,186,3.141,187,2.086,188,2.007,189,2.007,190,1.876,194,1.337,200,1.869,201,2.5,202,1.337,206,1.217,211,3.138,213,2.119,221,0.572,222,1.037,223,1.059,224,0.691,225,1.504,226,0.781,227,0.781,228,0.691,229,0.781,230,0.705,231,0.781,232,0.705,233,0.781,234,0.705,235,0.996,236,1.845,237,0.72,238,1.149,239,0.705,240,0.781,241,1.357,242,1.707,243,1.149,244,0.705,245,0.765,246,0.781,247,0.72,248,1.364,249,0.72,250,0.705,251,0.72,252,0.781,253,0.705,254,0.72,255,1.103,256,0.72,257,0.705,258,0.781,259,0.705,260,0.705,261,0.691,262,0.781,263,0.705,264,0.781,265,0.72,266,0.781,267,0.781,268,0.677,269,0.781,270,0.705,271,0.781,272,0.705,273,0.781,274,0.691,275,0.691,276,0.781,277,0.691,278,0.781,279,0.72,280,1.149,281,0.705,282,0.781,283,0.72,284,0.996,285,0.781,286,0.705,287,1.103,288,0.72,289,0.781,290,0.72,291,0.781,292,0.72,293,0.781,294,0.72,295,0.781,296,0.691,297,0.781,298,0.691,299,0.781,300,0.72,301,0.781,302,0.72,303,0.781,304,0.72,305,0.781,306,0.705,307,0.781,308,0.72,309,0.72,310,0.691,311,0.72,312,0.781,313,0.705,314,0.75,315,0.781,316,0.705,317,0.781,318,0.72,319,0.705,320,0.705,321,0.781,322,0.705,323,0.781,324,0.72,325,0.623,326,0.705,327,0.765,328,0.705,329,0.781,330,0.705,331,0.663,332,0.705,333,0.781,334,0.705,335,0.781,336,0.705,337,0.72,338,0.781,339,0.72,340,0.705,341,0.781,342,0.691,343,0.765,344,0.781,345,0.003,346,0.004,347,0.003,379,1.044,527,2.649,534,2.66,535,2.273,553,2.007,558,2.75,560,3.141,561,1.675,566,1.559,610,2.5,618,2.386,620,1.752,632,2.518,718,1.699,840,1.675,886,4.306,1108,1.809,1126,1.044,1127,2.875,1134,3.344,1207,1.327,1393,2.743,1396,0.765,1469,3.503,1480,7.755,1481,3.141,1482,5.483,1483,4.621,1484,6.188,1485,6.047,1486,6.188,1487,5.216,1488,6.824,1489,5.216,1490,6.169,1491,3.545,1492,5.292,1493,5.216,1494,5.216,1495,3.545,1496,3.545,1497,3.545,1498,3.545,1499,5.216,1500,6.047,1501,3.545,1502,3.545,1503,3.545,1504,3.545,1505,3.545,1506,3.545,1507,3.545,1508,3.545,1509,3.141,1510,3.545,1511,5.216,1512,2.273,1513,3.545,1514,3.545,1515,3.545,1516,4.621,1517,3.545,1518,3.545,1519,5.216,1520,3.938,1521,3.545,1522,5.216,1523,3.545,1524,5.216,1525,3.545,1526,6.188,1527,3.545,1528,3.545,1529,3.545,1530,3.545,1531,6.824,1532,4.621,1533,3.545,1534,3.545,1535,3.51,1536,5.216,1537,3.545,1538,3.545,1539,3.141,1540,2.273,1541,2.518,1542,1.935]],["title/modules/ConfigureModule.html",[348,1.362,1543,3.417]],["body/modules/ConfigureModule.html",[2,1.087,3,0.094,4,0.084,9,0.084,52,0.008,89,0.172,91,0.407,92,1.83,98,0.104,99,0.247,221,0.919,239,1.749,241,1.749,242,1.205,279,1.786,345,0.005,346,0.006,347,0.005,348,2.386,349,6.246,350,2.862,351,3.177,352,3.691,353,2.651,354,2.375,355,2.439,362,3.977,363,3.462,364,2.439,365,2.257,367,3.092,368,3.092,369,3.808,370,2.506,371,3.569,378,3.569,379,1.678,380,3.109,675,3.943,678,4.429,681,4.862,687,4.301,1357,6.246,1365,4.862,1543,7.229,1544,5.048,1545,5.048,1546,5.048,1547,6.246,1548,6.246,1549,6.246,1550,6.246,1551,5.697,1552,4.862,1553,5.859,1554,5.697,1555,5.697,1556,5.697,1557,5.697,1558,5.048,1559,5.048,1560,5.048,1561,5.697,1562,4.621,1563,4.621,1564,5.697,1565,5.697]],["title/modules/ConfigureRoutingModule.html",[348,1.362,1547,3.215]],["body/modules/ConfigureRoutingModule.html",[0,0.487,1,0.795,2,0.763,3,0.094,4,0.059,9,0.059,16,3.017,52,0.008,89,0.16,91,0.286,98,0.073,99,0.173,102,0.687,170,2.352,211,1.404,230,0.795,232,0.795,234,1.132,235,0.763,239,1.132,241,1.132,257,0.795,270,0.795,281,0.795,284,0.763,286,1.132,288,0.811,304,0.811,306,0.795,316,0.795,318,1.155,320,0.795,322,0.795,324,1.155,325,0.999,326,1.132,328,0.795,330,1.132,332,0.795,334,0.795,336,1.132,337,0.811,345,0.003,346,0.005,347,0.003,350,1.583,355,1.711,367,1.711,368,2.435,442,1.128,478,4.857,753,3.241,754,2.999,758,7.705,759,6.429,760,5.985,761,6.34,772,5.001,819,4.515,1026,3.541,1077,2.839,1078,3.017,1123,3.833,1153,3.263,1207,1.836,1252,4.295,1254,2.811,1257,3.241,1470,3.017,1547,4.041,1558,3.541,1559,3.541,1560,3.541,1566,3.996,1567,3.541,1568,6.349,1569,6.349,1570,3.541,1571,3.541,1572,3.996,1573,3.996,1574,3.996,1575,3.996,1576,3.996,1577,3.996,1578,3.996,1579,3.996,1580,3.996,1581,3.996,1582,7.226,1583,8.93,1584,8.865,1585,3.996,1586,3.996,1587,3.996,1588,2.352,1589,3.541,1590,6.624,1591,3.996,1592,3.996,1593,3.017,1594,3.996,1595,3.996,1596,3.996,1597,3.541]],["title/modules/ConfigureSharedModule.html",[348,1.362,1362,3.046]],["body/modules/ConfigureSharedModule.html",[3,0.102,4,0.091,9,0.091,52,0.008,89,0.171,91,0.441,92,1.979,98,0.113,99,0.267,221,0.994,255,1.304,256,1.908,287,1.304,290,1.908,345,0.005,346,0.006,347,0.005,348,1.854,350,2.442,351,2.711,352,3.825,353,2.868,354,2.57,355,3.519,362,4.056,363,3.636,364,2.638,365,2.442,367,3.248,368,3.248,369,4,370,2.711,371,3.749,372,4.864,373,3.364,374,3.364,376,3.87,378,3.749,379,1.815,380,3.364,442,1.74,677,4.464,754,4,1362,6.324,1552,5.106,1598,5.461,1599,5.461,1600,6.163,1601,5.461,1602,6.163,1603,4.377,1604,3.951,1605,3.951,1606,4.653,1607,6.163,1608,4.998,1609,5.461,1610,4.377]],["title/components/ContextMenuComponent.html",[0,0.234,244,0.9]],["body/components/ContextMenuComponent.html",[0,0.311,1,0.672,2,0.96,3,0.056,4,0.05,5,0.744,6,0.744,7,0.729,8,0.744,9,0.05,11,0.847,12,1.325,13,0.672,14,1.94,15,1.937,17,1.064,19,1.064,21,0.16,22,0.457,29,0.65,32,1.469,33,0.644,35,1.616,38,0.606,49,1.074,51,0.446,52,0.008,53,0.577,54,0.298,55,0.369,58,1.069,59,0.991,69,2.095,70,0.606,71,0.545,80,4.194,81,2.398,89,0.122,91,0.242,94,0.791,98,0.062,99,0.146,102,0.581,110,1.4,113,1.056,122,1.28,172,1.604,179,1.338,196,1.527,202,1.274,206,1.16,217,2.341,221,0.545,222,1.001,223,1.022,224,0.658,225,1.469,226,0.744,227,0.744,228,0.658,229,0.744,230,0.672,231,0.744,232,0.672,233,0.744,234,0.672,235,0.96,236,1.824,237,0.686,238,1.109,239,0.672,240,0.744,241,0.672,242,0.714,243,1.109,244,1.326,245,1.755,246,0.744,247,0.686,248,1.325,249,0.686,250,0.672,251,0.686,252,0.744,253,0.672,254,0.686,255,1.064,256,0.686,257,0.672,258,0.744,259,0.672,260,0.672,261,0.658,262,0.744,263,0.672,264,0.744,265,0.686,266,0.744,267,0.744,268,0.644,269,0.744,270,0.672,271,0.744,272,0.672,273,0.744,274,0.658,275,0.658,276,0.744,277,0.658,278,0.744,279,0.686,280,0.744,281,0.672,282,0.744,283,0.686,284,0.644,285,0.744,286,0.672,287,1.064,288,0.686,289,0.744,290,0.686,291,0.744,292,0.686,293,0.744,294,0.686,295,0.744,296,0.658,297,0.744,298,0.658,299,0.744,300,0.686,301,0.744,302,0.686,303,0.744,304,0.686,305,0.744,306,0.672,307,0.744,308,0.686,309,0.686,310,0.658,311,0.686,312,0.744,313,0.672,314,0.714,315,0.744,316,0.672,317,0.744,318,0.686,319,0.672,320,0.672,321,0.744,322,0.672,323,0.744,324,0.686,325,1.17,326,0.672,327,0.729,328,0.672,329,0.744,330,0.672,331,0.631,332,0.672,333,0.744,334,0.672,335,0.744,336,0.672,337,0.686,338,0.744,339,0.686,340,0.672,341,0.744,342,0.658,343,0.729,344,0.744,345,0.003,346,0.004,347,0.003,379,0.994,431,2.044,510,1.571,526,2.738,532,1.445,546,3.799,557,4.273,564,2.341,566,1.485,627,2.272,629,2.165,633,1.911,708,3.171,819,3.416,840,1.628,845,3.036,1060,2.272,1108,1.767,1123,2.443,1126,0.994,1134,4.791,1164,4.047,1393,1.898,1403,2.411,1405,1.987,1407,3.688,1426,4.397,1475,2.738,1542,1.843,1611,8.119,1612,6.918,1613,2.992,1614,6.013,1615,5.031,1616,4.079,1617,6.664,1618,5.905,1619,5.905,1620,4.087,1621,6.621,1622,6.061,1623,5.642,1624,5.905,1625,6.013,1626,6.013,1627,6.013,1628,5.328,1629,6.013,1630,3.376,1631,3.688,1632,4.087,1633,5.328,1634,5.905,1635,3.376,1636,3.376,1637,3.376,1638,3.376,1639,3.376,1640,3.376,1641,3.376,1642,3.376,1643,3.376,1644,3.376,1645,3.376,1646,4.458,1647,3.376,1648,3.376,1649,3.376,1650,3.376,1651,3.376,1652,3.376,1653,3.376,1654,3.376,1655,3.376,1656,2.738,1657,3.376,1658,3.376,1659,3.376,1660,3.376,1661,3.376,1662,3.376,1663,3.376,1664,3.376,1665,3.376,1666,3.376,1667,3.376,1668,3.376,1669,3.376,1670,2.992,1671,2.992,1672,3.376,1673,3.376,1674,3.376,1675,3.376,1676,3.376,1677,3.376,1678,3.376,1679,2.738,1680,4.458,1681,3.376,1682,3.376,1683,3.376,1684,4.458,1685,2.992,1686,5.031,1687,3.376,1688,5.031,1689,3.376,1690,2.398,1691,2.165,1692,3.573,1693,3.386,1694,3.376,1695,2.992,1696,2.272,1697,2.992,1698,2.992,1699,3.376,1700,3.376,1701,3.376,1702,3.376,1703,3.376,1704,3.376,1705,3.376,1706,3.376,1707,5.905,1708,4.458,1709,4.458,1710,3.386,1711,3.386,1712,3.799,1713,4.458,1714,2.992,1715,3.376]],["title/components/DialogComponent.html",[0,0.234,247,0.919]],["body/components/DialogComponent.html",[0,0.338,1,0.78,2,1.071,3,0.065,4,0.058,5,0.864,6,0.864,7,0.846,8,0.864,9,0.058,11,0.945,12,1.444,13,0.78,14,1.953,15,1.951,17,1.187,19,1.187,21,0.311,22,0.51,29,0.725,32,1.576,33,0.748,35,1.802,38,0.472,49,1.053,51,0.742,52,0.008,53,0.638,54,0.325,55,0.613,58,1.018,59,1.367,66,1.977,70,1.006,71,1.221,77,2.182,80,4.209,89,0.12,91,0.28,98,0.072,99,0.17,110,0.619,112,1.478,118,1.231,122,1.925,135,1.936,151,1.457,172,1.358,175,1.377,177,2.357,178,1.515,190,1.41,191,1.772,194,1.478,201,1.878,205,2.638,206,1.927,211,1.971,213,1.592,221,0.632,222,1.116,223,1.452,224,0.764,225,1.576,226,0.864,227,0.864,228,0.764,229,0.864,230,0.78,231,0.864,232,0.78,233,0.864,234,0.78,235,1.071,236,1.888,237,0.796,238,1.236,239,0.78,240,0.864,241,0.78,242,0.829,243,1.236,244,0.78,245,0.846,246,0.864,247,1.452,248,1.444,249,0.796,250,0.78,251,0.796,252,0.864,253,0.78,254,0.796,255,1.187,256,0.796,257,0.78,258,0.864,259,0.78,260,0.78,261,0.764,262,0.864,263,0.78,264,0.864,265,0.796,266,0.864,267,0.864,268,0.748,269,0.864,270,0.78,271,0.864,272,0.78,273,0.864,274,0.764,275,0.764,276,0.864,277,0.764,278,0.864,279,0.796,280,0.864,281,0.78,282,0.864,283,0.796,284,1.071,285,0.864,286,0.78,287,1.187,288,0.796,289,0.864,290,0.796,291,0.864,292,0.796,293,0.864,294,0.796,295,0.864,296,0.764,297,0.864,298,0.764,299,0.864,300,0.796,301,0.864,302,0.796,303,0.864,304,0.796,305,0.864,306,0.78,307,0.864,308,0.796,309,0.796,310,0.764,311,0.796,312,0.864,313,0.78,314,0.829,315,0.864,316,0.78,317,0.864,318,0.796,319,0.78,320,0.78,321,0.864,322,0.78,323,0.864,324,0.796,325,0.688,326,0.78,327,0.846,328,0.78,329,0.864,330,0.78,331,0.733,332,0.78,333,0.864,334,0.78,335,0.864,336,0.78,337,0.796,338,0.864,339,0.796,340,0.78,341,0.864,342,0.764,343,0.846,344,0.864,345,0.003,346,0.005,347,0.003,420,3.985,466,1.553,527,2.401,528,2.403,529,3.176,532,2.401,543,2.139,566,1.724,573,4.55,578,2.066,580,3.178,582,3.178,610,1.878,718,1.878,1105,2.116,1106,2.537,1110,2.116,1112,2.222,1121,1.478,1147,1.824,1165,3.991,1245,2.066,1258,3.178,1261,2.959,1285,2.401,1313,2.882,1542,3.062,1716,3.472,1717,5.314,1718,4.55,1719,5.806,1720,6.338,1721,6.338,1722,6.338,1723,6.338,1724,6.707,1725,5.806,1726,2.861,1727,5.806,1728,3.985,1729,3.472,1730,5.61,1731,5.61,1732,3.919,1733,3.522,1734,3.919,1735,3.472,1736,3.919,1737,3.472,1738,3.919,1739,3.919,1740,3.919,1741,3.919,1742,3.919,1743,3.919,1744,3.919,1745,3.919,1746,3.919,1747,3.919,1748,3.14,1749,3.919,1750,7.153,1751,3.919,1752,6.552,1753,5.61,1754,3.919,1755,3.919,1756,4.55,1757,3.178,1758,5.61,1759,3.919,1760,3.919,1761,3.919,1762,3.919,1763,3.919,1764,4.55,1765,3.472,1766,3.178,1767,3.472,1768,3.472,1769,5.61]],["title/components/DisciplineEditorComponent.html",[0,0.234,249,0.919]],["body/components/DisciplineEditorComponent.html",[0,0.34,1,0.785,2,1.076,3,0.065,4,0.058,5,0.87,6,0.87,7,0.852,8,0.87,9,0.058,11,0.949,12,1.45,13,0.785,14,1.954,15,1.951,17,1.193,19,1.193,21,0.187,22,0.512,29,0.729,32,1.581,33,1.449,38,0.475,43,2.876,44,3.66,49,1.031,51,0.746,52,0.008,53,0.658,54,0.376,55,0.616,58,0.981,59,1.251,66,1.818,70,1.011,71,0.91,73,3.355,77,1.625,89,0.132,91,0.282,92,1.267,94,0.925,98,0.072,99,0.171,102,0.679,112,1.489,113,0.693,116,2.973,120,2.081,151,1.025,172,1.573,218,1.891,221,0.637,222,1.122,223,1.145,224,0.769,225,1.581,226,0.87,227,0.87,228,0.769,229,0.87,230,0.785,231,0.87,232,0.785,233,0.87,234,0.785,235,1.076,236,1.891,237,0.801,238,1.242,239,0.785,240,0.87,241,0.785,242,0.835,243,1.242,244,0.785,245,0.852,246,0.87,247,0.801,248,1.45,249,1.457,250,1.727,251,0.801,252,0.87,253,0.785,254,0.801,255,1.193,256,0.801,257,0.785,258,0.87,259,0.785,260,0.785,261,0.769,262,0.87,263,0.785,264,0.87,265,0.801,266,0.87,267,0.87,268,0.753,269,0.87,270,0.785,271,0.87,272,0.785,273,0.87,274,0.769,275,0.769,276,0.87,277,0.769,278,0.87,279,0.801,280,0.87,281,0.785,282,0.87,283,0.801,284,0.753,285,0.87,286,0.785,287,1.193,288,0.801,289,0.87,290,0.801,291,0.87,292,0.801,293,0.87,294,0.801,295,0.87,296,0.769,297,0.87,298,0.769,299,0.87,300,0.801,301,0.87,302,0.801,303,0.87,304,0.801,305,0.87,306,0.785,307,0.87,308,0.801,309,0.801,310,0.769,311,0.801,312,0.87,313,0.785,314,0.835,315,0.87,316,0.785,317,0.87,318,0.801,319,0.785,320,0.785,321,0.87,322,0.785,323,0.87,324,0.801,325,0.99,326,0.785,327,0.852,328,0.785,329,0.87,330,0.785,331,0.738,332,0.785,333,0.87,334,0.785,335,0.87,336,0.785,337,0.801,338,1.45,339,0.801,340,0.785,341,0.87,342,0.769,343,0.852,344,0.87,345,0.003,346,0.005,347,0.003,840,1.781,845,3.207,1007,3.795,1087,1.733,1105,2.127,1106,2.55,1108,1.902,1110,1.489,1111,1.891,1112,2.234,1121,1.489,1126,1.162,1147,1.836,1148,1.785,1149,1.736,1156,2.234,1157,3.87,1158,3.318,1165,3.783,1171,2.154,1190,2.53,1194,4.005,1197,2.081,1207,1.004,1209,2.154,1235,3.192,1245,2.081,1246,2.98,1254,1.95,1285,2.414,1313,2.893,1726,2.876,1733,3.339,1748,2.702,1770,7.838,1771,7.175,1772,6.578,1773,6.578,1774,4.257,1775,4.427,1776,6.578,1777,2.816,1778,3.497,1779,3.946,1780,3.497,1781,3.946,1782,3.946,1783,3.201,1784,4.573,1785,3.497,1786,3.497,1787,3.201,1788,2.013,1789,3.946,1790,3.201,1791,3.946,1792,3.946,1793,5.638,1794,2.42,1795,3.946,1796,3.946,1797,3.946,1798,3.946,1799,5.638,1800,3.946,1801,2.656,1802,3.946,1803,3.946,1804,3.946,1805,3.946,1806,3.946,1807,4.573,1808,3.615]],["title/components/DisciplinesComponent.html",[0,0.234,251,0.919]],["body/components/DisciplinesComponent.html",[0,0.289,1,0.596,2,0.877,3,0.049,4,0.044,5,0.66,6,0.66,7,0.647,8,0.66,9,0.044,11,0.774,12,1.232,13,0.596,14,1.928,15,1.925,16,3.47,17,0.972,19,0.972,21,0.142,22,0.417,27,3.763,29,0.594,32,1.382,33,0.572,35,1.476,38,0.553,42,3.306,49,1.059,51,0.944,52,0.008,53,0.686,54,0.41,55,0.779,58,1.07,59,1.296,66,1.733,69,1.932,70,1.333,71,1.012,77,1.325,89,0.15,91,0.214,93,1.13,94,0.702,98,0.055,99,0.13,102,1.163,110,1.211,113,0.982,116,1.579,126,3.264,151,1.193,166,3.264,171,3.896,172,1.3,175,1.053,190,1.078,206,1.029,218,1.436,221,0.483,222,0.914,223,0.933,224,0.584,225,1.382,226,0.66,227,0.66,228,0.584,229,0.66,230,0.596,231,0.66,232,0.596,233,0.66,234,0.596,235,0.877,236,1.769,237,0.608,238,1.013,239,0.596,240,0.66,241,0.596,242,0.634,243,1.013,244,0.596,245,0.647,246,0.66,247,0.608,248,1.232,249,0.608,250,1.478,251,1.273,252,0.66,253,0.596,254,0.608,255,0.972,256,0.608,257,0.596,258,0.66,259,0.596,260,0.596,261,0.584,262,0.66,263,0.596,264,0.66,265,0.608,266,0.66,267,0.66,268,0.572,269,0.66,270,0.596,271,0.66,272,0.596,273,0.66,274,0.584,275,0.584,276,0.66,277,0.584,278,0.66,279,0.608,280,0.66,281,0.596,282,0.66,283,0.608,284,0.572,285,0.66,286,0.596,287,0.972,288,0.608,289,0.66,290,0.608,291,0.66,292,0.608,293,0.66,294,0.608,295,0.66,296,0.584,297,0.66,298,0.584,299,0.66,300,0.608,301,0.66,302,0.608,303,0.66,304,0.608,305,0.66,306,0.596,307,0.66,308,0.608,309,0.608,310,1.09,311,0.608,312,0.66,313,0.596,314,0.634,315,0.66,316,0.596,317,0.66,318,0.608,319,0.596,320,0.596,321,0.66,322,0.596,323,0.66,324,0.933,325,0.526,326,0.596,327,0.647,328,0.596,329,0.66,330,0.596,331,0.56,332,0.596,333,0.66,334,0.596,335,0.66,336,0.596,337,0.608,338,0.66,339,0.608,340,0.596,341,0.66,342,0.584,343,0.647,344,0.66,345,0.004,346,0.004,347,0.003,373,1.635,374,3.052,388,2.272,401,2.615,433,2.109,445,0.794,453,1.579,466,1.187,468,2.016,484,2.947,538,1.436,561,0.962,807,5.389,840,1.514,1103,2.459,1105,1.734,1106,2.078,1108,1.663,1110,1.13,1111,1.436,1112,1.821,1121,1.13,1126,0.882,1143,1.528,1144,1.635,1145,1.436,1147,1.394,1148,1.355,1149,2.021,1150,1.837,1153,3.059,1207,1.422,1254,1.48,1285,1.967,1313,2.459,1325,2.128,1371,1.355,1381,1.436,1396,0.992,1469,2.602,1604,1.921,1605,1.921,1726,2.344,1733,2.602,1748,2.203,1774,3.47,1775,3.763,1777,3.629,1784,2.43,1794,3.845,1801,3.093,1807,3.728,1809,2.654,1810,4.222,1811,5.592,1812,4.596,1813,5.592,1814,4.955,1815,5.592,1816,3.641,1817,5.086,1818,6.271,1819,5.086,1820,3.429,1821,4.2,1822,6.271,1823,3.47,1824,6.271,1825,3.264,1826,7.432,1827,5.592,1828,4.535,1829,2.996,1830,3.972,1831,4.596,1832,2.996,1833,2.996,1834,2.996,1835,2.996,1836,2.996,1837,4.596,1838,2.996,1839,3.47,1840,4.735,1841,2.996,1842,2.996,1843,4.596,1844,2.996,1845,2.996,1846,5.086,1847,3.728,1848,4.735,1849,2.996,1850,2.996,1851,2.996,1852,2.996,1853,2.996,1854,4.596,1855,2.996,1856,2.996,1857,2.459,1858,2.996,1859,4.596,1860,2.996,1861,2.996,1862,2.996,1863,2.43,1864,2.996,1865,2.654,1866,2.654,1867,1.921,1868,2.262,1869,2.654,1870,1.696,1871,2.43,1872,2.996,1873,5.592,1874,2.996,1875,2.654,1876,2.996,1877,5.611,1878,2.654,1879,5.592,1880,2.996,1881,2.996,1882,2.262,1883,2.262,1884,2.262,1885,2.996,1886,3.264,1887,2.654,1888,2.996,1889,2.996,1890,2.996,1891,1.635,1892,2.262,1893,2.996,1894,6.271,1895,3.093,1896,2.996,1897,4.596,1898,2.996,1899,2.996,1900,2.654,1901,4.596,1902,2.996,1903,2.996,1904,2.996,1905,2.43,1906,2.654,1907,2.996,1908,2.996,1909,3.585,1910,2.996,1911,2.996,1912,2.996,1913,2.996,1914,2.996,1915,2.43,1916,2.654,1917,2.654,1918,2.996,1919,2.996,1920,2.996,1921,2.128,1922,2.43,1923,2.43,1924,2.654,1925,2.996,1926,2.654,1927,2.654,1928,2.43,1929,2.996,1930,4.596,1931,4.596]],["title/modules/DisciplinesModule.html",[348,1.362,359,3.046]],["body/modules/DisciplinesModule.html",[3,0.1,4,0.089,9,0.089,52,0.008,89,0.171,91,0.432,92,1.939,98,0.111,99,0.262,172,1.251,221,0.974,249,1.903,250,1.201,251,1.903,345,0.005,346,0.006,347,0.005,348,1.817,350,2.392,351,2.655,352,3.79,353,2.809,354,2.517,355,3.487,359,6.353,361,6.006,362,4.035,363,3.59,364,2.585,365,2.392,367,3.207,368,3.207,369,3.95,370,2.655,371,3.702,372,4.803,373,3.295,374,3.295,376,3.821,377,4.089,378,3.702,379,1.778,380,3.295,384,4.064,385,5.35,442,1.704,675,4.089,754,3.95,1371,2.73,1603,4.288,1604,3.871,1605,3.871,1610,4.288,1771,4.897,1932,5.35,1933,5.35,1934,6.037,1935,5.35,1936,6.037,1937,6.037]],["title/components/DisplayComponent.html",[0,0.234,253,0.9]],["body/components/DisplayComponent.html",[0,0.353,1,0.841,2,1.13,3,0.07,4,0.062,5,0.932,6,0.932,7,0.913,8,0.932,9,0.062,11,0.997,12,1.505,13,0.841,14,1.959,15,1.957,17,1.252,19,1.252,21,0.201,22,0.538,29,0.765,32,1.631,33,0.807,38,0.713,49,0.949,51,0.783,52,0.008,53,0.654,54,0.367,55,0.646,58,0.883,59,1.126,70,1.062,71,0.955,89,0.152,91,0.302,93,1.595,94,0.991,98,0.078,99,0.183,110,0.935,113,1.2,172,1.416,175,1.486,179,2.345,191,1.912,193,2.026,196,2.677,197,2.845,202,2.233,205,3.984,206,1.452,211,2.913,213,2.405,221,0.682,222,1.177,223,1.202,224,0.824,225,1.631,226,0.932,227,0.932,228,0.824,229,0.932,230,0.841,231,0.932,232,0.841,233,0.932,234,0.841,235,1.13,236,1.918,237,0.858,238,1.304,239,0.841,240,0.932,241,0.841,242,0.894,243,1.304,244,0.841,245,0.913,246,0.932,247,0.858,248,1.505,249,0.858,250,0.841,251,0.858,252,0.932,253,1.472,254,0.858,255,1.252,256,0.858,257,0.841,258,0.932,259,0.841,260,0.841,261,1.518,262,0.932,263,0.841,264,0.932,265,0.858,266,0.932,267,0.932,268,0.807,269,0.932,270,0.841,271,0.932,272,0.841,273,0.932,274,0.824,275,0.824,276,0.932,277,0.824,278,0.932,279,0.858,280,0.932,281,0.841,282,0.932,283,0.858,284,0.807,285,0.932,286,0.841,287,1.252,288,0.858,289,0.932,290,0.858,291,0.932,292,0.858,293,0.932,294,0.858,295,0.932,296,0.824,297,0.932,298,0.824,299,0.932,300,0.858,301,0.932,302,0.858,303,0.932,304,0.858,305,0.932,306,0.841,307,0.932,308,0.858,309,0.858,310,0.824,311,0.858,312,0.932,313,0.841,314,0.894,315,0.932,316,0.841,317,0.932,318,0.858,319,0.841,320,0.841,321,0.932,322,0.841,323,0.932,324,0.858,325,0.742,326,0.841,327,0.913,328,0.841,329,0.932,330,0.841,331,0.79,332,0.841,333,0.932,334,0.841,335,0.932,336,0.841,337,0.858,338,0.932,339,0.858,340,0.841,341,0.932,342,0.824,343,0.913,344,0.932,345,0.004,346,0.005,347,0.004,388,2.775,401,3.085,433,2.576,445,1.121,510,1.967,538,2.026,633,3.351,840,1.849,1007,3.984,1087,2.1,1103,3.004,1108,1.962,1126,1.245,1143,2.156,1145,2.026,1356,1.859,1393,1.595,1408,1.763,1482,6.052,1483,5.245,1492,5.578,1532,3.746,1728,4.204,1757,4.801,1938,3.746,1939,5.919,1940,3.192,1941,5.919,1942,3.63,1943,4.227,1944,4.227,1945,5.919,1946,4.227,1947,4.469,1948,4.227,1949,2.845,1950,3.192,1951,4.227,1952,4.227,1953,4.227,1954,4.227,1955,4.227,1956,4.227,1957,5.245,1958,5.245,1959,5.919,1960,3.429,1961,3.429,1962,2.845,1963,3.192,1964,5.245]],["title/injectables/DisplayService.html",[654,1.225,1492,3.046]],["body/injectables/DisplayService.html",[3,0.101,4,0.09,9,0.09,21,0.289,29,0.973,38,0.733,47,3.224,48,4.836,49,1.004,51,1.081,52,0.008,53,0.662,54,0.405,55,0.893,58,1.056,59,1.004,89,0.157,91,0.436,95,2.918,98,0.112,99,0.264,110,1.189,112,2.297,113,1.069,147,5.395,199,2.606,345,0.005,346,0.006,347,0.005,390,2.678,445,1.614,654,2.038,891,4.628,912,4.938,916,5.014,1032,2.833,1069,2.753,1396,2.026,1408,2.539,1450,4.325,1492,5.068,1816,3.841,1965,5.395,1966,7.53,1967,7.53,1968,8.542,1969,6.067,1970,6.088,1971,7.53,1972,5.483,1973,6.088,1974,7.53,1975,7.244,1976,6.088,1977,6.088,1978,5.395,1979,6.088,1980,8.542,1981,6.088,1982,6.088]],["title/components/DivisionEditorComponent.html",[0,0.234,254,0.919]],["body/components/DivisionEditorComponent.html",[0,0.334,1,0.762,2,1.054,3,0.063,4,0.056,5,0.845,6,0.845,7,0.828,8,0.845,9,0.056,11,0.93,12,1.426,13,0.762,14,1.951,15,1.949,17,1.168,19,1.168,21,0.182,22,0.501,29,0.713,32,1.56,33,1.432,38,0.462,43,2.816,44,3.611,49,1.025,51,0.507,52,0.008,53,0.69,54,0.387,55,0.419,58,0.915,59,1.167,66,1.526,70,1.27,71,1.142,73,3.301,77,1.592,89,0.138,91,0.274,92,1.231,94,0.898,98,0.07,99,0.166,112,1.446,113,0.673,120,2.021,151,0.995,169,1.411,172,1.555,174,1.773,194,1.446,221,0.618,222,1.098,223,1.121,224,0.747,225,1.56,226,0.845,227,0.845,228,0.747,229,0.845,230,0.762,231,0.845,232,0.762,233,0.845,234,0.762,235,1.054,236,1.879,237,0.778,238,1.217,239,0.762,240,0.845,241,0.762,242,0.811,243,1.217,244,0.762,245,0.828,246,0.845,247,0.778,248,1.426,249,0.778,250,0.762,251,0.778,252,0.845,253,0.762,254,1.438,255,1.876,256,0.778,257,1.098,258,0.845,259,0.762,260,0.762,261,0.747,262,0.845,263,0.762,264,0.845,265,0.778,266,0.845,267,0.845,268,0.732,269,0.845,270,0.762,271,0.845,272,0.762,273,0.845,274,0.747,275,0.747,276,0.845,277,0.747,278,0.845,279,0.778,280,0.845,281,0.762,282,0.845,283,0.778,284,0.732,285,0.845,286,0.762,287,1.168,288,0.778,289,0.845,290,0.778,291,0.845,292,0.778,293,0.845,294,0.778,295,0.845,296,0.747,297,0.845,298,0.747,299,0.845,300,0.778,301,0.845,302,0.778,303,0.845,304,0.778,305,0.845,306,0.762,307,0.845,308,0.778,309,0.778,310,0.747,311,0.778,312,0.845,313,0.762,314,0.811,315,0.845,316,0.762,317,0.845,318,0.778,319,0.762,320,0.762,321,0.845,322,0.762,323,0.845,324,0.778,325,0.673,326,0.762,327,0.828,328,0.762,329,0.845,330,0.762,331,0.717,332,0.762,333,0.845,334,0.762,335,0.845,336,0.762,337,0.778,338,1.426,339,0.778,340,0.762,341,0.845,342,0.747,343,0.828,344,0.845,345,0.003,346,0.005,347,0.003,840,1.752,845,3.176,1105,2.082,1106,2.497,1108,1.877,1110,1.446,1111,1.837,1112,2.187,1121,1.446,1126,1.129,1147,1.783,1148,1.733,1149,1.686,1156,2.17,1157,3.808,1158,3.249,1165,2.911,1171,2.092,1190,2.457,1191,2.722,1194,2.722,1197,2.021,1207,1.909,1209,3.864,1245,2.021,1285,2.363,1313,2.846,1620,4.342,1696,2.579,1726,2.816,1733,3.295,1748,2.646,1775,4.355,1778,3.396,1780,3.396,1785,3.396,1787,3.108,1794,2.35,1801,2.579,1816,1.955,1820,3.385,1983,7.798,1984,7.138,1985,6.471,1986,6.471,1987,4.596,1988,6.471,1989,3.412,1990,3.833,1991,3.833,1992,3.833,1993,3.108,1994,4.149,1995,4.892,1996,3.921,1997,4.892,1998,3.54,1999,2.722,2000,3.396,2001,3.833,2002,3.833,2003,3.833,2004,5.521,2005,3.833,2006,3.833,2007,3.833,2008,2.579,2009,3.833,2010,3.833,2011,3.833,2012,3.833,2013,3.396,2014,5.521,2015,3.833,2016,3.833,2017,3.833,2018,3.833,2019,3.833,2020,4.478]],["title/components/DivisionLookupComponent.html",[0,0.234,256,0.919]],["body/components/DivisionLookupComponent.html",[0,0.321,1,0.711,2,1.002,3,0.059,4,0.053,5,0.788,6,0.788,7,0.772,8,0.788,9,0.053,11,0.884,12,1.37,13,0.711,14,1.945,15,1.942,17,1.11,19,1.11,21,0.17,22,0.477,29,0.678,32,1.51,33,0.682,38,0.43,49,1.051,51,0.965,52,0.008,53,0.668,54,0.431,55,0.861,58,0.986,59,1.433,70,1.309,71,1.388,89,0.14,91,0.256,92,1.148,94,0.838,98,0.066,99,0.155,108,0.922,112,1.348,113,1.092,118,1.649,151,1.363,160,3.168,170,3.659,172,1.289,177,1.286,178,1.382,211,1.256,212,1.951,213,1.452,217,1.663,218,1.713,219,2.292,221,0.577,222,1.044,223,1.066,224,0.697,225,1.51,226,0.788,227,0.788,228,0.697,229,0.788,230,0.711,231,0.788,232,0.711,233,0.788,234,0.711,235,1.002,236,1.849,237,0.726,238,1.157,239,0.711,240,0.788,241,0.711,242,0.756,243,1.157,244,0.711,245,0.772,246,0.788,247,0.726,248,1.37,249,0.726,250,0.711,251,0.726,252,0.788,253,0.711,254,0.726,255,1.799,256,1.549,257,0.711,258,0.788,259,0.711,260,0.711,261,0.697,262,0.788,263,0.711,264,0.788,265,0.726,266,0.788,267,0.788,268,0.682,269,0.788,270,0.711,271,0.788,272,0.711,273,0.788,274,0.697,275,0.697,276,0.788,277,0.697,278,0.788,279,0.726,280,0.788,281,0.711,282,0.788,283,0.726,284,0.682,285,0.788,286,0.711,287,1.11,288,0.726,289,0.788,290,0.726,291,0.788,292,0.726,293,0.788,294,0.726,295,0.788,296,0.697,297,0.788,298,0.697,299,0.788,300,0.726,301,0.788,302,0.726,303,0.788,304,0.726,305,0.788,306,0.711,307,0.788,308,0.726,309,0.726,310,0.697,311,0.726,312,0.788,313,0.711,314,0.756,315,0.788,316,0.711,317,0.788,318,0.726,319,0.711,320,0.711,321,0.788,322,0.711,323,0.788,324,0.726,325,0.628,326,0.711,327,0.772,328,0.711,329,0.788,330,0.711,331,0.668,332,0.711,333,0.788,334,0.711,335,0.788,336,0.711,337,0.726,338,0.788,339,0.726,340,0.711,341,0.788,342,0.697,343,0.772,344,0.788,345,0.003,346,0.004,347,0.003,354,2.188,379,1.053,388,2.527,401,2.857,433,2.346,445,0.948,629,3.987,701,3.218,725,3.088,747,3.532,840,1.421,1087,1.912,1103,2.735,1107,2.192,1108,1.817,1126,1.053,1143,1.823,1145,1.713,1186,4.185,1235,3.52,1267,2.899,1268,5.51,1269,4.695,1270,3.962,1271,4.695,1272,4.257,1273,5.51,1274,4.65,1276,5.51,1278,5.51,1280,4.65,1281,4.65,1284,4.257,1285,2.247,1287,3.168,1292,4.65,1294,4.695,1303,4.257,1305,3.168,1306,3.168,1307,3.168,1308,3.168,1312,3.168,1313,3.21,1324,3.168,1325,2.539,1347,3.168,1348,3.168,1349,4.65,1356,1.572,1396,1.133,1500,3.168,1608,7.29,1816,3.172,1989,4.351,1994,2.292,2021,7.964,2022,6.218,2023,6.218,2024,5.248,2025,7.298,2026,5.248,2027,3.575,2028,3.575,2029,3.575,2030,3.575,2031,3.575,2032,3.575,2033,5.248,2034,3.575,2035,3.575,2036,3.575,2037,3.575,2038,3.575,2039,3.575,2040,3.575,2041,3.575,2042,3.575,2043,3.168,2044,3.575,2045,3.575,2046,6.218,2047,3.575,2048,3.575,2049,3.575,2050,3.575,2051,3.168,2052,4.65]],["title/components/DivisionsComponent.html",[0,0.234,257,0.9]],["body/components/DivisionsComponent.html",[0,0.289,1,0.597,2,0.878,3,0.05,4,0.044,5,0.661,6,0.661,7,0.648,8,0.661,9,0.044,11,0.775,12,1.233,13,0.597,14,1.929,15,1.925,17,0.973,19,0.973,21,0.142,22,0.418,27,3.766,29,0.594,32,1.383,33,0.572,35,1.477,38,0.554,42,3.308,49,1.066,51,0.944,52,0.008,53,0.687,54,0.428,55,0.78,58,1.071,59,1.323,66,1.871,69,2.077,70,1.333,71,1.092,77,1.951,83,3.588,89,0.141,91,0.215,93,1.131,94,0.703,98,0.055,99,0.13,102,0.962,107,1.396,108,0.527,110,0.991,113,0.983,118,0.942,126,2.13,151,0.779,169,1.694,170,5.079,172,1.16,189,1.698,190,1.079,193,1.437,194,1.735,221,0.484,222,0.915,223,1.274,224,0.584,225,1.383,226,0.661,227,0.661,228,0.584,229,0.661,230,0.597,231,0.661,232,0.597,233,0.661,234,0.597,235,0.878,236,1.769,237,0.609,238,1.014,239,0.597,240,0.661,241,0.597,242,0.634,243,1.014,244,0.597,245,0.648,246,0.661,247,0.609,248,1.233,249,0.609,250,0.597,251,0.609,252,0.661,253,0.597,254,0.609,255,1.184,256,0.609,257,1.248,258,0.661,259,0.597,260,0.597,261,0.584,262,0.661,263,0.597,264,0.661,265,0.609,266,0.661,267,0.661,268,0.572,269,0.661,270,0.597,271,0.661,272,0.597,273,0.661,274,0.584,275,0.584,276,0.661,277,0.584,278,0.661,279,0.609,280,0.661,281,0.597,282,0.661,283,0.609,284,0.572,285,0.661,286,0.597,287,0.973,288,0.609,289,0.661,290,0.609,291,0.661,292,0.609,293,0.661,294,0.609,295,0.661,296,0.584,297,0.661,298,0.584,299,0.661,300,0.609,301,0.661,302,0.609,303,0.661,304,0.609,305,0.661,306,0.597,307,0.661,308,0.609,309,0.609,310,1.392,311,0.609,312,0.661,313,0.597,314,0.634,315,0.661,316,0.597,317,0.661,318,0.609,319,0.597,320,0.597,321,0.661,322,0.597,323,0.661,324,0.934,325,0.527,326,0.597,327,0.648,328,0.597,329,0.661,330,0.597,331,0.561,332,0.597,333,0.661,334,0.597,335,0.661,336,0.597,337,0.609,338,0.661,339,0.609,340,0.597,341,0.661,342,0.584,343,0.648,344,0.661,345,0.004,346,0.004,347,0.003,373,1.637,374,3.054,388,2.274,401,2.616,433,2.111,445,0.795,468,2.019,538,1.437,561,0.963,566,1.319,807,5.613,840,1.245,962,2.433,1103,2.461,1105,1.735,1106,2.08,1107,1.839,1108,1.664,1110,1.131,1111,1.437,1112,1.822,1121,1.131,1126,0.883,1143,1.53,1144,1.637,1145,1.437,1147,1.396,1148,1.356,1149,2.023,1150,1.839,1153,3.06,1162,4.958,1207,1.423,1220,4.958,1285,1.969,1313,2.461,1325,2.13,1371,1.356,1396,0.993,1604,1.923,1605,1.923,1726,2.346,1733,2.604,1748,2.205,1774,3.473,1775,3.766,1784,2.433,1788,1.53,1794,3.848,1801,3.096,1810,4.225,1816,3.201,1817,5.089,1819,5.089,1821,4.202,1823,3.473,1825,3.267,1828,4.538,1830,3.975,1839,3.473,1840,4.738,1846,3.731,1847,3.731,1848,4.738,1863,2.433,1865,2.658,1866,2.658,1867,1.923,1868,2.264,1871,2.433,1877,5.613,1878,2.658,1882,2.264,1883,2.264,1884,2.264,1886,3.267,1887,2.658,1895,3.096,1905,2.433,1906,2.658,1921,2.13,1922,2.433,1923,2.433,1924,2.658,1926,2.658,1927,2.658,1928,2.433,1989,4.423,1994,1.923,1995,4.076,1996,3.267,1997,4.076,1998,2.949,2008,3.096,2013,2.658,2043,6.588,2052,5.56,2053,2.658,2054,5.596,2055,4.6,2056,5.596,2057,5.596,2058,5.596,2059,5.596,2060,6.275,2061,4.6,2062,6.275,2063,6.275,2064,5.596,2065,4.6,2066,2.999,2067,2.999,2068,2.999,2069,2.999,2070,2.999,2071,2.999,2072,4.6,2073,2.999,2074,2.999,2075,2.999,2076,2.999,2077,2.999,2078,2.999,2079,2.999,2080,2.999,2081,2.999,2082,2.999,2083,2.999,2084,2.999,2085,2.999,2086,2.999,2087,2.999,2088,2.999,2089,2.999,2090,2.999,2091,2.999,2092,2.433,2093,5.596,2094,2.433,2095,2.433,2096,2.658,2097,5.596,2098,2.999,2099,2.999,2100,4.6,2101,2.999,2102,2.999,2103,5.596,2104,5.596,2105,4.6,2106,2.999,2107,2.999,2108,4.6,2109,2.999,2110,2.999,2111,4.6,2112,4.076,2113,2.999,2114,2.999,2115,2.999,2116,1.839,2117,2.999,2118,2.949,2119,2.511,2120,3.096,2121,4.6,2122,2.999,2123,2.433,2124,2.999,2125,2.999,2126,2.658,2127,2.999,2128,2.999,2129,2.999]],["title/modules/DivisionsModule.html",[348,1.362,360,3.046]],["body/modules/DivisionsModule.html",[3,0.101,4,0.09,9,0.09,52,0.008,89,0.17,91,0.437,92,1.96,98,0.112,99,0.265,221,0.985,254,1.906,255,1.291,257,1.867,345,0.005,346,0.006,347,0.005,348,1.836,350,2.418,351,2.684,352,3.809,353,2.84,354,2.545,355,3.504,360,6.316,362,4.046,363,3.614,364,2.613,365,2.418,367,3.228,368,3.228,369,3.976,370,2.684,371,3.727,372,4.835,373,3.331,374,3.331,376,3.847,377,4.116,378,3.727,379,1.797,380,3.331,442,1.723,675,4.116,678,4.625,754,3.976,1368,6.117,1371,2.76,1552,5.076,1603,4.335,1604,3.913,1605,3.913,1610,4.335,1984,4.95,2000,5.408,2130,5.408,2131,5.408,2132,6.103,2133,5.408,2134,6.103]],["title/components/ErrorDialogComponent.html",[0,0.234,259,0.9]],["body/components/ErrorDialogComponent.html",[0,0.346,1,0.812,2,1.102,3,0.067,4,0.06,5,0.899,6,0.899,7,0.881,8,0.899,9,0.06,11,0.972,12,1.476,13,0.812,14,1.956,15,1.954,17,1.221,19,1.221,21,0.194,22,0.524,29,0.746,32,1.605,33,0.779,38,0.695,49,1.016,51,0.54,52,0.008,53,0.622,54,0.381,55,0.446,58,0.866,59,1.104,66,1.128,70,1.035,71,0.932,81,2.898,89,0.106,91,0.292,98,0.075,99,0.177,102,0.702,122,1.704,128,2.31,172,1.389,174,2.339,178,2.589,179,1.617,180,3.081,188,2.31,190,2.077,194,1.539,196,1.845,202,2.178,203,2.898,206,1.402,217,1.899,221,0.658,222,1.148,223,1.172,224,0.795,225,1.605,226,0.899,227,0.899,228,0.795,229,0.899,230,0.812,231,0.899,232,0.812,233,0.899,234,0.812,235,1.102,236,1.904,237,0.829,238,1.272,239,0.812,240,0.899,241,0.812,242,0.863,243,1.272,244,0.812,245,0.881,246,0.899,247,0.829,248,1.476,249,0.829,250,0.812,251,0.829,252,0.899,253,0.812,254,0.829,255,1.221,256,0.829,257,0.812,258,0.899,259,1.449,260,1.719,261,0.795,262,0.899,263,0.812,264,0.899,265,0.829,266,0.899,267,0.899,268,0.779,269,0.899,270,0.812,271,0.899,272,0.812,273,0.899,274,0.795,275,0.795,276,0.899,277,0.795,278,0.899,279,0.829,280,0.899,281,0.812,282,0.899,283,0.829,284,0.779,285,0.899,286,0.812,287,1.221,288,0.829,289,0.899,290,0.829,291,0.899,292,0.829,293,0.899,294,0.829,295,0.899,296,0.795,297,0.899,298,0.795,299,0.899,300,0.829,301,0.899,302,0.829,303,0.899,304,0.829,305,0.899,306,0.812,307,0.899,308,0.829,309,0.829,310,0.795,311,0.829,312,0.899,313,0.812,314,0.863,315,0.899,316,0.812,317,0.899,318,0.829,319,0.812,320,0.812,321,0.899,322,0.812,323,0.899,324,0.829,325,0.717,326,0.812,327,0.881,328,0.812,329,0.899,330,0.812,331,0.763,332,0.812,333,0.899,334,0.812,335,0.899,336,0.812,337,0.829,338,0.899,339,0.829,340,0.812,341,0.899,342,0.795,343,0.881,344,0.899,345,0.003,346,0.005,347,0.003,379,1.202,510,1.899,534,2.081,578,3.044,618,2.746,819,3.684,1060,2.746,1105,2.178,1110,1.539,1121,1.539,1231,5.937,1396,1.247,1477,2.746,1542,3.657,1616,4.356,1620,4.467,1631,4.467,1632,4.714,1646,5.116,1670,3.616,1691,2.616,1717,5.434,1718,4.683,1728,4.759,1764,4.683,1963,3.081,2135,7.745,2136,6.599,2137,3.31,2138,5.937,2139,6.7,2140,6.7,2141,7.284,2142,4.08,2143,5.116,2144,4.08,2145,4.08,2146,4.08,2147,4.08,2148,4.08,2149,4.08,2150,4.08,2151,4.08,2152,4.08,2153,5.773,2154,5.773,2155,4.08,2156,4.08,2157,5.773,2158,4.08,2159,5.773,2160,5.773,2161,5.773,2162,5.937,2163,3.701,2164,3.081]],["title/injectables/ErrorHandlerService.html",[654,1.225,804,2.663]],["body/injectables/ErrorHandlerService.html",[3,0.094,4,0.084,9,0.084,21,0.269,22,0.655,29,0.931,35,2.315,38,0.684,49,1.033,51,0.953,52,0.008,53,0.584,54,0.413,55,0.787,58,0.931,59,1.188,69,1.537,71,1.344,89,0.145,91,0.406,98,0.104,99,0.246,102,0.976,107,3.354,108,1.633,110,0.897,112,2.142,113,1.543,193,4.121,259,1.129,260,1.776,345,0.005,346,0.006,347,0.005,379,1.672,390,2.497,530,3.214,654,1.951,691,5.442,804,4.241,807,4.287,819,2.721,861,6.387,884,7.017,966,5.031,1032,2.642,1034,3.482,1050,4.033,1069,2.567,1408,3.005,1542,3.934,1563,4.605,1631,4.856,1632,4.856,1690,5.12,1691,3.64,2136,4.287,2165,7.909,2166,5.031,2167,7.208,2168,6.387,2169,7.919,2170,8.33,2171,7.208,2172,5.031,2173,5.917,2174,7.208,2175,5.678,2176,7.208,2177,8.598,2178,5.678,2179,5.678,2180,5.678,2181,5.678,2182,5.678,2183,8.598,2184,5.678,2185,5.678,2186,7.208,2187,5.678,2188,7.208,2189,5.678,2190,5.678]],["title/components/EventComponent.html",[0,0.234,261,0.882]],["body/components/EventComponent.html",[0,0.335,1,0.765,2,1.057,3,0.064,4,0.057,5,0.848,6,0.848,7,0.831,8,0.848,9,0.057,11,0.932,12,1.429,13,0.765,14,1.952,15,1.949,17,1.171,19,1.171,21,0.263,22,0.503,29,0.715,32,1.563,33,0.734,38,0.463,40,3.399,45,3.671,46,3.399,49,0.948,51,0.509,52,0.008,53,0.653,54,0.351,55,0.42,56,2.932,58,0.715,59,0.913,66,1.53,70,0.993,71,0.893,89,0.151,91,0.275,96,2.359,97,2.028,98,0.071,99,0.167,102,0.662,112,1.451,113,1.139,166,3.932,169,1.417,172,1.344,174,2.278,175,1.352,177,1.384,179,2.193,190,1.384,193,1.844,196,2.503,197,2.589,202,1.451,203,2.733,206,1.901,211,2.75,213,1.563,217,1.79,221,0.621,222,1.101,223,1.124,224,0.75,225,1.563,226,0.848,227,0.848,228,0.75,229,0.848,230,0.765,231,0.848,232,0.765,233,0.848,234,0.765,235,1.057,236,1.88,237,0.781,238,1.22,239,0.765,240,0.848,241,0.765,242,0.814,243,1.22,244,0.765,245,0.831,246,0.848,247,0.781,248,1.429,249,0.781,250,0.765,251,0.781,252,0.848,253,0.765,254,0.781,255,1.171,256,0.781,257,0.765,258,0.848,259,0.765,260,0.765,261,1.382,262,0.848,263,0.765,264,0.848,265,0.781,266,0.848,267,0.848,268,0.734,269,0.848,270,0.765,271,0.848,272,0.765,273,0.848,274,0.75,275,0.75,276,0.848,277,0.75,278,0.848,279,0.781,280,0.848,281,0.765,282,0.848,283,0.781,284,1.057,285,0.848,286,0.765,287,1.171,288,0.781,289,0.848,290,0.781,291,0.848,292,0.781,293,0.848,294,0.781,295,0.848,296,0.75,297,0.848,298,0.75,299,0.848,300,0.781,301,0.848,302,0.781,303,0.848,304,0.781,305,0.848,306,0.765,307,0.848,308,0.781,309,0.781,310,0.75,311,0.781,312,0.848,313,0.765,314,1.372,315,0.848,316,0.765,317,0.848,318,0.781,319,0.765,320,0.765,321,0.848,322,0.765,323,0.848,324,0.781,325,1.246,326,0.765,327,0.831,328,0.765,329,0.848,330,0.765,331,0.719,332,0.765,333,0.848,334,0.765,335,0.848,336,0.765,337,0.781,338,0.848,339,0.781,340,0.765,341,0.848,342,0.75,343,0.831,344,0.848,345,0.003,346,0.005,347,0.005,388,2.635,401,2.957,433,2.446,442,1.086,445,1.02,510,1.79,527,1.647,529,2.178,534,1.962,535,2.467,536,3.12,537,2.905,538,1.844,543,3.022,549,3.549,551,3.12,553,2.178,558,2.919,559,2.733,561,1.236,577,2.359,629,2.467,632,2.733,633,3.134,718,1.844,801,2.37,802,3.207,836,3.816,840,1.755,965,2.467,1103,2.852,1108,1.88,1126,1.133,1143,1.962,1145,1.844,1207,1.65,1259,4.905,1393,2.446,1396,1.195,1409,3.409,1421,4.126,1424,3.932,1425,5.355,1472,2.733,1473,2.733,1535,3.726,1588,3.257,1816,3.308,1877,2.905,1891,3.022,1961,3.12,1962,2.589,1963,2.905,1964,4.905,2191,3.409,2192,6.485,2193,5.536,2194,3.847,2195,5.536,2196,3.847,2197,3.847,2198,3.726,2199,3.726,2200,3.726,2201,3.847,2202,3.847,2203,3.847,2204,3.409,2205,2.733,2206,3.847,2207,2.733,2208,3.409,2209,3.847,2210,3.409,2211,7.092,2212,4.49,2213,3.847,2214,4.49,2215,3.847]],["title/modules/EventModule.html",[348,1.362,2216,3.417]],["body/modules/EventModule.html",[2,1.048,3,0.091,4,0.081,9,0.081,52,0.008,66,1.518,89,0.172,91,0.393,92,1.764,98,0.101,99,0.238,221,0.886,222,1.093,244,1.785,253,1.733,261,1.697,263,1.733,272,1.733,300,1.769,308,1.769,313,1.733,314,1.162,345,0.005,346,0.006,347,0.005,348,2.346,350,2.176,351,3.104,352,3.628,353,2.556,354,2.29,355,2.351,362,3.939,363,3.382,364,2.351,365,2.176,367,3.021,368,3.021,369,3.72,370,2.416,371,3.487,376,3.599,378,3.487,379,1.617,380,2.998,647,4.147,648,4.455,670,5.328,671,3.901,672,2.896,675,3.852,678,4.327,679,4.524,680,5.012,681,4.749,687,4.147,1365,4.749,1371,2.484,1552,4.749,1553,5.723,1612,4.147,1949,3.697,2216,7.211,2217,4.867,2218,4.867,2219,4.867,2220,6.187,2221,5.492,2222,5.723,2223,6.253,2224,7.057,2225,4.867,2226,4.867,2227,4.867,2228,4.867,2229,4.147,2230,4.867,2231,5.492,2232,5.492,2233,5.492,2234,4.867,2235,5.492,2236,3.901]],["title/modules/EventRoutingModule.html",[348,1.362,2220,3.215]],["body/modules/EventRoutingModule.html",[0,0.462,3,0.101,4,0.09,9,0.09,52,0.008,89,0.17,91,0.437,94,1.43,98,0.112,99,0.265,102,1.05,211,2.876,253,1.5,261,1.47,263,1.5,272,1.5,300,1.531,313,1.5,314,1.595,345,0.005,346,0.006,347,0.006,350,2.418,355,2.613,367,2.613,368,3.228,442,1.723,478,5.754,518,4.608,564,3.509,753,4.95,754,3.976,758,7.43,759,4.95,760,4.608,761,4.108,772,5.694,819,2.925,1077,4.335,1123,3.064,1207,1.552,1568,5.076,1569,5.076,1570,5.408,1582,5.408,1597,5.408,1949,4.108,2051,5.408,2220,5.357,2225,5.408,2226,5.408,2227,5.408,2228,5.408,2229,4.608,2230,5.408,2237,6.103,2238,6.103,2239,7.541,2240,5.408,2241,6.103,2242,6.103,2243,5.408,2244,6.103,2245,6.103,2246,6.103,2247,6.103]],["title/interfaces/ExpansionRow.html",[2248,0.778,2249,3.417]],["body/interfaces/ExpansionRow.html",[3,0.098,4,0.109,9,0.087,21,0.281,22,0.672,52,0.008,54,0.367,69,1.602,77,2.133,89,0.155,98,0.136,99,0.257,102,1.018,110,1.335,113,1.299,118,2.324,151,1.537,223,1.717,345,0.005,346,0.006,347,0.005,379,1.743,445,1.569,712,2.924,860,3.794,891,3.9,983,5.586,1087,2.73,1118,3.9,1124,4.038,1125,3.629,1396,1.597,2248,1.018,2249,5.586,2250,2.032,2251,4.799,2252,4.468,2253,7.713,2254,7.713,2255,7.386,2256,4.799,2257,4.799,2258,6.094,2259,4.468,2260,5.243,2261,5.243,2262,5.243,2263,5.243,2264,4.799,2265,4.203,2266,5.243,2267,5.243,2268,3.983,2269,5.243,2270,5.243,2271,5.243,2272,4.799,2273,5.243,2274,5.243,2275,6.384,2276,5.243,2277,4.799,2278,6,2279,7.152,2280,5.243,2281,4.799,2282,5.243,2283,5.243,2284,6.555,2285,5.243,2286,5.243,2287,4.799,2288,5.243,2289,5.243,2290,5.243,2291,5.243,2292,4.799]],["title/classes/ExpansionSource.html",[99,0.196,2259,3.417]],["body/classes/ExpansionSource.html",[3,0.075,4,0.092,9,0.067,21,0.217,22,0.567,29,0.806,35,2.004,38,0.55,49,1.096,51,1.139,52,0.008,53,0.698,54,0.442,55,0.941,58,1.162,59,1.363,66,1.725,69,1.235,70,1.276,71,1.148,77,1.799,89,0.14,98,0.114,99,0.198,102,0.785,110,1.207,113,1.343,118,1.961,151,1.847,223,1.774,345,0.004,346,0.005,347,0.004,379,1.344,445,1.21,712,3.084,860,5.3,891,4.031,983,4.712,1087,1.919,1118,4.358,1124,4.825,1125,2.799,1153,3.458,1396,1.785,1408,2.965,1616,4.173,1825,4.433,2248,0.785,2249,3.446,2251,7.389,2252,3.446,2253,5.53,2254,5.53,2255,7.541,2256,3.701,2257,3.701,2258,6.505,2259,4.712,2260,6.302,2261,5.53,2262,6.302,2263,4.044,2264,5.768,2265,3.242,2266,4.044,2267,4.044,2268,3.072,2269,4.044,2270,4.044,2271,4.044,2272,6.863,2273,4.044,2274,6.302,2275,6.241,2276,4.044,2277,5.768,2278,6.704,2279,6.302,2280,4.044,2281,5.768,2282,4.044,2283,5.53,2284,5.53,2285,4.044,2286,4.044,2287,5.768,2288,6.775,2289,4.044,2290,4.044,2291,4.044,2292,6.863,2293,2.491,2294,5.53,2295,6.775,2296,6.775,2297,4.044,2298,6.241,2299,4.564,2300,4.564,2301,4.044,2302,4.044,2303,7.498,2304,4.564,2305,4.564,2306,4.564,2307,4.564,2308,4.564,2309,4.564,2310,4.044,2311,4.564,2312,4.564,2313,4.564,2314,4.564,2315,4.564,2316,4.564,2317,4.564,2318,4.564,2319,4.044]],["title/components/FullscreenComponent.html",[0,0.234,263,0.9]],["body/components/FullscreenComponent.html",[0,0.345,1,0.807,2,1.098,3,0.067,4,0.06,5,0.894,6,0.894,7,0.876,8,0.894,9,0.06,11,0.968,12,1.472,13,0.807,14,1.956,15,1.954,17,1.216,19,1.216,21,0.273,22,0.522,29,0.743,32,1.601,33,0.775,38,0.692,49,0.984,51,0.76,52,0.008,53,0.645,54,0.36,55,0.628,58,0.863,59,1.101,66,1.589,70,0.728,71,0.655,80,4.276,89,0.146,91,0.29,93,1.53,98,0.074,99,0.176,102,0.698,113,1.399,122,1.848,125,2.601,172,1.384,178,1.568,185,1.737,191,1.835,196,1.835,201,1.945,206,1.394,221,0.655,222,1.144,223,1.168,224,0.791,225,1.601,226,0.894,227,0.894,228,0.791,229,0.894,230,0.807,231,0.894,232,0.807,233,0.894,234,0.807,235,1.098,236,1.902,237,0.824,238,1.267,239,0.807,240,0.894,241,0.807,242,0.858,243,1.267,244,0.807,245,0.876,246,0.894,247,0.824,248,1.472,249,0.824,250,0.807,251,0.824,252,0.894,253,0.807,254,0.824,255,1.216,256,0.824,257,0.807,258,0.894,259,0.807,260,0.807,261,1.495,262,0.894,263,1.445,264,0.894,265,0.824,266,0.894,267,0.894,268,0.775,269,0.894,270,0.807,271,0.894,272,0.807,273,0.894,274,0.791,275,0.791,276,0.894,277,0.791,278,0.894,279,0.824,280,0.894,281,0.807,282,0.894,283,0.824,284,0.775,285,0.894,286,0.807,287,1.216,288,0.824,289,0.894,290,0.824,291,0.894,292,0.824,293,0.894,294,0.824,295,0.894,296,0.791,297,0.894,298,0.791,299,0.894,300,0.824,301,0.894,302,0.824,303,0.894,304,0.824,305,0.894,306,0.807,307,0.894,308,0.824,309,0.824,310,0.791,311,0.824,312,0.894,313,0.807,314,0.858,315,0.894,316,0.807,317,0.894,318,0.824,319,0.807,320,0.807,321,0.894,322,0.807,323,0.894,324,0.824,325,0.713,326,0.807,327,0.876,328,0.807,329,0.894,330,0.807,331,0.759,332,0.807,333,0.894,334,0.807,335,0.894,336,0.807,337,0.824,338,0.894,339,0.824,340,0.807,341,0.894,342,0.791,343,0.876,344,0.894,345,0.003,346,0.005,347,0.003,388,2.714,401,3.029,410,3.245,433,2.519,442,1.145,445,1.076,510,1.888,527,1.737,528,2.488,529,2.297,532,1.737,566,1.785,578,2.139,701,2.488,801,2.859,802,3.286,840,1.808,1007,2.731,1012,2.215,1087,1.768,1103,2.938,1105,2.169,1108,1.926,1110,1.53,1112,2.278,1121,1.53,1126,1.195,1141,2.005,1142,2.005,1143,2.07,1145,1.945,1149,1.785,1245,2.139,1356,1.785,1396,1.242,1408,1.692,1472,2.882,1473,2.882,1492,5.513,1942,4.096,1947,3.064,1949,2.731,1950,3.064,1957,5.918,1975,5.918,2204,3.595,2320,3.595,2321,6.679,2322,5.75,2323,6.679,2324,5.75,2325,5.095,2326,4.057,2327,5.75,2328,5.75,2329,4.057,2330,4.057,2331,4.057,2332,4.057,2333,4.057,2334,4.057,2335,4.057,2336,4.057,2337,4.057,2338,4.057,2339,3.595,2340,4.057,2341,4.057,2342,3.595,2343,4.057,2344,5.75,2345,5.75,2346,5.75,2347,5.75,2348,4.057,2349,3.595,2350,4.057,2351,4.057,2352,2.882]],["title/modules/GraphQLModule.html",[348,1.362,641,3.046]],["body/modules/GraphQLModule.html",[3,0.093,4,0.083,9,0.083,47,3.381,52,0.008,54,0.28,77,1.628,89,0.167,91,0.404,98,0.132,99,0.245,102,1.509,110,1.247,118,1.774,151,1.865,162,3.62,345,0.005,346,0.006,347,0.005,350,2.237,354,2.354,355,2.417,367,2.417,368,3.075,433,2.709,641,4.834,725,3.322,726,4.579,728,4.579,827,4.263,836,4.648,844,4.579,916,4.844,948,3.92,1103,2.483,1342,6.364,1788,3.663,2353,4.263,2354,7.182,2355,7.182,2356,7.319,2357,5.61,2358,7.182,2359,6.364,2360,7.23,2361,5.646,2362,7.898,2363,7.182,2364,6.999,2365,7.182,2366,5.646,2367,5.003,2368,7.182,2369,5.003,2370,5.646,2371,5.646,2372,5.646,2373,4.263,2374,5.003,2375,5.964,2376,5.646,2377,5.646,2378,5.646,2379,5.646,2380,5.646,2381,5.646,2382,5.646,2383,7.182,2384,5.646,2385,5.646,2386,7.182,2387,5.646,2388,5.646,2389,5.003,2390,4.579,2391,5.646,2392,3.8,2393,5.646,2394,5.646,2395,3.8,2396,4.834,2397,7.182,2398,5.646,2399,5.646,2400,5.646,2401,3.8,2402,5.646,2403,5.646,2404,5.646,2405,5.825,2406,7.898,2407,5.646,2408,5.646,2409,4.579]],["title/injectables/GraphService.html",[654,1.225,1108,1.2]],["body/injectables/GraphService.html",[3,0.064,4,0.057,9,0.057,21,0.184,29,0.72,33,0.741,38,0.468,47,2.386,48,4.032,49,1.017,51,1.144,52,0.008,53,0.701,54,0.429,55,0.945,58,1.105,69,1.508,70,0.696,71,1.052,89,0.157,91,0.278,95,1.861,98,0.071,99,0.168,102,1.35,107,2.593,108,1.658,110,1.46,112,1.465,113,1.42,149,2.285,345,0.003,346,0.005,347,0.003,390,1.708,433,1.465,445,1.029,453,2.938,536,4.52,654,1.508,785,2.381,813,2.932,819,3.124,827,4.921,831,3.417,836,5.23,837,3.44,843,2.932,844,5.777,845,2.648,891,4.717,908,2.285,909,2.671,916,3.417,948,3.042,986,3.44,990,3.44,1032,1.807,1050,2.758,1069,1.756,1108,1.477,1144,3.558,1207,2.057,1235,2.198,1315,2.613,1381,1.861,1391,6.71,1396,1.407,1401,2.613,1408,2.718,1414,3.44,1415,6.71,1416,5.694,1421,2.047,1450,2.758,1870,2.198,2356,6.833,2357,2.758,2392,5.937,2410,3.44,2411,5.573,2412,4.938,2413,5.573,2414,4.207,2415,5.573,2416,5.573,2417,5.573,2418,3.883,2419,5.573,2420,3.883,2421,5.573,2422,3.883,2423,5.573,2424,7.122,2425,3.883,2426,5.573,2427,3.883,2428,6.683,2429,5.573,2430,3.883,2431,5.573,2432,7.122,2433,3.883,2434,3.883,2435,5.573,2436,3.883,2437,3.883,2438,5.573,2439,3.883,2440,5.573,2441,5.573,2442,7.122,2443,3.883,2444,5.573,2445,7.122,2446,3.883,2447,5.287,2448,3.44,2449,3.883,2450,3.883,2451,6.518,2452,3.883,2453,3.883,2454,3.883,2455,3.883,2456,3.883,2457,3.883,2458,3.883,2459,5.573,2460,3.883,2461,3.883,2462,3.883,2463,5.573,2464,3.883,2465,6.518,2466,3.883,2467,5.573,2468,5.573,2469,5.573,2470,5.573,2471,4.938,2472,5.573,2473,5.573,2474,3.883,2475,3.883,2476,3.883,2477,3.883,2478,3.883,2479,3.883,2480,3.883,2481,3.883,2482,3.883,2483,3.883,2484,3.883,2485,4.52,2486,3.883,2487,3.883,2488,3.883,2489,5.573,2490,3.883,2491,3.883,2492,3.883,2493,3.883,2494,3.883,2495,3.883,2496,3.883,2497,3.883,2498,3.883,2499,5.573,2500,3.883,2501,3.883,2502,3.883,2503,3.883,2504,3.883]],["title/components/HelpBlockComponent.html",[0,0.234,265,0.919]],["body/components/HelpBlockComponent.html",[0,0.363,1,0.888,2,1.173,3,0.074,4,0.066,5,0.984,6,0.984,7,0.964,8,0.984,9,0.066,11,1.035,12,1.549,13,0.888,14,1.963,15,1.961,17,1.3,19,1.3,21,0.292,29,0.794,32,1.669,33,0.852,38,0.846,49,0.723,52,0.008,53,0.613,58,0.577,59,0.736,89,0.113,91,0.319,98,0.082,99,0.193,122,2.088,169,1.644,172,1.457,175,1.568,177,2.528,178,1.725,179,1.768,181,3.271,182,3.037,183,2.139,185,2.631,190,2.211,191,2.018,196,2.018,200,2.353,201,3.369,202,2.651,206,2.414,211,2.792,212,2.436,213,3.336,221,0.72,222,1.223,223,1.248,224,0.87,225,1.669,226,0.984,227,0.984,228,0.87,229,0.984,230,0.888,231,0.984,232,0.888,233,0.984,234,0.888,235,1.173,236,1.94,237,0.906,238,1.354,239,0.888,240,0.984,241,0.888,242,0.944,243,1.354,244,0.888,245,0.964,246,0.984,247,0.906,248,1.549,249,0.906,250,0.888,251,0.906,252,0.984,253,0.888,254,0.906,255,1.3,256,0.906,257,0.888,258,0.984,259,0.888,260,0.888,261,0.87,262,0.984,263,0.888,264,0.984,265,1.538,266,1.94,267,0.984,268,0.852,269,0.984,270,0.888,271,0.984,272,0.888,273,0.984,274,0.87,275,0.87,276,0.984,277,0.87,278,0.984,279,0.906,280,0.984,281,0.888,282,0.984,283,0.906,284,0.852,285,0.984,286,0.888,287,1.3,288,0.906,289,0.984,290,0.906,291,0.984,292,0.906,293,0.984,294,0.906,295,0.984,296,0.87,297,0.984,298,0.87,299,0.984,300,0.906,301,0.984,302,0.906,303,0.984,304,0.906,305,0.984,306,0.888,307,0.984,308,0.906,309,0.906,310,0.87,311,0.906,312,0.984,313,0.888,314,0.944,315,0.984,316,0.888,317,0.984,318,0.906,319,0.888,320,0.888,321,0.984,322,0.888,323,0.984,324,0.906,325,0.784,326,0.888,327,0.964,328,0.888,329,0.984,330,0.888,331,0.834,332,0.888,333,0.984,334,0.888,335,0.984,336,0.888,337,0.906,338,0.984,339,0.906,340,0.888,341,0.984,342,0.87,343,0.964,344,0.984,345,0.004,346,0.005,347,0.004,510,2.077,527,3.009,529,2.526,530,2.526,532,1.91,533,2.861,534,2.276,539,3.954,543,2.436,552,3.954,554,4.64,565,2.861,566,1.963,569,3.37,571,3.62,574,2.737,586,4.136,612,3.98,620,3.474,631,3.62,1356,1.963,1540,2.861,1541,3.17,2505,6.229,2506,5.701,2507,3.954,2508,7.029,2509,6.146,2510,4.463,2511,4.463,2512,6.146,2513,6.146,2514,6.146,2515,4.365,2516,4.463,2517,3.37,2518,3.954,2519,4.463,2520,4.463,2521,2.861,2522,3.954,2523,3.17]],["title/components/HomeComponent.html",[0,0.234,268,0.864]],["body/components/HomeComponent.html",[0,0.292,1,0.606,2,0.889,3,0.05,4,0.045,5,0.672,6,0.672,7,0.658,8,0.672,9,0.045,11,0.784,12,1.246,13,0.606,14,1.93,15,1.927,17,0.985,19,0.985,21,0.145,22,0.423,26,3.624,29,0.602,32,1.395,33,0.582,35,1.496,38,0.561,45,3.2,46,3.033,49,1.009,51,0.837,52,0.008,53,0.673,54,0.356,55,0.691,56,1.378,58,0.881,59,0.768,70,1.135,71,1.021,89,0.145,91,0.218,94,0.714,97,1.607,98,0.056,99,0.132,102,0.972,108,0.535,110,1.077,113,1.416,116,1.607,118,1.463,122,2.184,151,0.792,169,2.647,172,1.171,174,2.401,175,1.071,177,2.9,178,2.184,179,1.208,181,2.63,182,1.506,183,1.461,185,2.918,187,2.741,190,2.585,191,2.556,192,2.165,193,1.461,194,2.132,199,2.42,200,1.607,201,3.033,202,2.387,206,1.941,209,2.165,211,1.637,217,2.167,221,0.492,222,0.926,223,0.946,224,0.594,225,1.395,226,0.672,227,0.672,228,0.594,229,0.672,230,0.606,231,0.672,232,0.606,233,0.672,234,0.606,235,0.889,236,1.777,237,0.619,238,1.026,239,0.606,240,0.672,241,0.606,242,0.645,243,1.026,244,0.606,245,0.658,246,0.672,247,0.619,248,1.246,249,0.619,250,0.606,251,0.619,252,0.672,253,0.606,254,0.619,255,0.985,256,0.619,257,0.606,258,0.672,259,0.606,260,0.606,261,0.594,262,0.672,263,0.606,264,0.672,265,0.619,266,0.672,267,0.672,268,1.208,269,0.672,270,0.606,271,0.672,272,0.606,273,0.672,274,0.594,275,0.594,276,0.672,277,0.594,278,0.672,279,0.619,280,0.672,281,0.606,282,0.672,283,0.619,284,1.372,285,0.672,286,0.606,287,0.985,288,0.619,289,0.672,290,0.619,291,0.672,292,0.619,293,0.672,294,0.619,295,0.672,296,0.594,297,0.672,298,0.594,299,0.672,300,0.619,301,0.672,302,0.619,303,0.672,304,0.619,305,0.672,306,0.606,307,0.672,308,0.619,309,0.619,310,0.594,311,0.619,312,0.672,313,0.606,314,0.645,315,0.672,316,0.606,317,0.672,318,0.619,319,0.926,320,0.606,321,0.672,322,0.606,323,0.672,324,0.619,325,1.313,326,0.606,327,0.658,328,0.606,329,0.672,330,0.606,331,0.57,332,0.606,333,0.672,334,0.606,335,0.672,336,0.606,337,0.619,338,0.672,339,0.619,340,0.606,341,0.672,342,0.594,343,0.658,344,0.672,345,0.003,346,0.004,347,0.005,365,1.845,388,2.297,401,2.357,409,2.945,446,1.271,447,1.271,516,3.516,532,1.994,534,2.883,538,1.461,541,2.472,553,3.582,556,3.135,557,1.954,558,4.167,559,2.165,561,2.189,564,1.418,578,2.456,585,2.165,590,2.051,602,4.268,606,3.516,609,2.301,612,1.726,627,3.135,652,1.954,819,1.461,836,3.326,840,1.53,900,2.472,909,2.232,958,5.529,1007,4.259,1108,1.678,1126,0.898,1139,3.135,1207,1.185,1381,1.461,1393,2.908,1421,2.456,1424,3.308,1428,1.954,1469,3.859,1476,2.472,1477,2.051,1535,4.259,1808,4.057,1870,1.726,1960,2.472,1972,3.466,1987,4.015,2020,3.777,2164,4.778,2198,3.135,2199,3.135,2200,3.135,2248,0.524,2352,4.495,2395,2.051,2524,2.472,2525,5.008,2526,4.127,2527,5.008,2528,4.657,2529,4.127,2530,4.657,2531,5.008,2532,5.008,2533,5.008,2534,6.41,2535,3.048,2536,5.607,2537,3.048,2538,4.127,2539,3.048,2540,3.048,2541,5.652,2542,3.048,2543,3.048,2544,3.048,2545,3.048,2546,3.048,2547,5.147,2548,3.048,2549,3.048,2550,3.048,2551,3.777,2552,3.308,2553,3.777,2554,4.127,2555,3.048,2556,3.048,2557,3.048,2558,3.048,2559,3.048,2560,3.048,2561,3.048,2562,3.048,2563,3.048,2564,3.048,2565,3.048,2566,2.165,2567,2.701,2568,1.794,2569,2.472,2570,2.701,2571,2.701,2572,2.701,2573,5.008,2574,5.008,2575,2.701,2576,2.701,2577,6.04,2578,2.701,2579,2.701,2580,2.701,2581,2.701,2582,2.165,2583,2.701,2584,2.701,2585,2.472,2586,2.701,2587,2.701,2588,1.954,2589,2.701,2590,2.701,2591,1.869,2592,1.954,2593,2.472,2594,2.165,2595,2.701,2596,2.701,2597,2.701,2598,2.701,2599,2.701,2600,2.701,2601,4.127,2602,2.701,2603,2.701,2604,2.701,2605,4.657,2606,4.657,2607,4.657,2608,6.328,2609,6.328,2610,4.657,2611,4.657,2612,4.657,2613,3.048,2614,3.777,2615,2.301,2616,1.954,2617,1.954,2618,3.048,2619,3.048,2620,2.701,2621,3.048,2622,3.048,2623,3.048,2624,2.472,2625,2.701,2626,3.048,2627,3.048]],["title/interfaces/HttpAction.html",[2248,0.778,2628,3.215]],["body/interfaces/HttpAction.html",[3,0.113,4,0.1,9,0.1,21,0.324,22,0.733,47,2.92,52,0.008,54,0.449,55,1.003,89,0.125,98,0.125,103,6.304,108,1.508,153,4.845,345,0.006,346,0.007,347,0.006,897,6.096,1087,2.823,2248,1.173,2250,2.343,2628,5.729,2629,4.591,2630,6.044,2631,7.865,2632,7.865,2633,6.702]],["title/interceptors/HttpCacheInterceptor.html",[643,3.046,745,3.046]],["body/interceptors/HttpCacheInterceptor.html",[3,0.096,4,0.085,9,0.085,11,0.977,21,0.275,29,0.944,38,0.699,47,3.594,49,0.859,51,0.966,52,0.008,53,0.592,54,0.362,55,0.798,58,0.75,89,0.159,91,0.415,95,2.781,98,0.106,99,0.252,102,0.998,110,1.367,112,2.188,122,1.476,193,3.502,345,0.007,346,0.006,347,0.005,445,1.538,466,2.895,521,3.905,561,2.347,643,4.918,654,1.978,785,3.558,789,4.705,796,5.926,812,6.339,828,6.475,831,4.905,836,3.414,845,2.969,854,4.38,885,5.926,886,4.528,887,6.81,889,5.926,891,4.217,898,6.475,904,5.141,908,3.414,916,5.5,930,5.141,932,5.141,1034,3.558,1509,6.475,1947,4.38,1969,5.964,1978,5.141,2594,4.121,2629,5.383,2634,5.141,2635,7.307,2636,7.307,2637,7.307,2638,5.681,2639,7.307,2640,5.802,2641,5.802,2642,5.802,2643,5.802,2644,5.802,2645,5.802,2646,6.487,2647,5.802,2648,6.475,2649,7.307,2650,5.802,2651,5.802,2652,5.802,2653,5.802,2654,5.802,2655,5.802,2656,5.802,2657,5.802,2658,5.802,2659,5.141]],["title/injectables/HttpCacheService.html",[654,1.225,1969,3.215]],["body/injectables/HttpCacheService.html",[3,0.097,4,0.086,9,0.086,21,0.278,22,0.668,29,0.95,38,0.967,49,1.057,51,1.148,52,0.008,53,0.703,54,0.445,55,0.948,58,1.121,59,1.324,70,1.05,71,0.945,89,0.107,91,0.419,98,0.107,99,0.254,108,1.662,110,1.161,153,4.737,345,0.005,346,0.006,347,0.005,390,2.575,561,1.881,654,1.989,843,5.549,845,2.379,916,4.926,1032,2.725,1069,2.648,1153,3.324,1401,5.67,1408,2.441,1969,5.22,2120,3.941,2629,6.117,2660,5.188,2661,8.032,2662,7.349,2663,7.349,2664,7.349,2665,5.855,2666,7.349,2667,5.855,2668,7.349,2669,5.855,2670,7.349,2671,5.855,2672,7.349,2673,5.855,2674,7.349,2675,4.421,2676,5.855,2677,8.032,2678,4.749,2679,5.855,2680,5.855,2681,5.855,2682,5.855,2683,5.855]],["title/injectables/HttpStateService.html",[654,1.225,806,3.215]],["body/injectables/HttpStateService.html",[3,0.089,4,0.08,9,0.08,21,0.257,22,0.635,29,0.903,33,1.478,38,0.932,47,2.992,49,0.91,51,0.715,52,0.008,53,0.438,54,0.346,55,0.591,58,0.699,69,1.464,70,0.97,71,0.873,89,0.164,91,0.387,95,3.349,98,0.099,99,0.235,102,1.331,103,4.964,108,0.95,110,0.854,125,5.66,151,1.815,153,3.814,345,0.005,346,0.006,347,0.005,390,2.379,445,1.434,561,2.244,654,1.892,806,4.964,812,6.396,813,6.396,831,3.317,845,3.145,854,5.276,860,5.431,864,4.794,897,6.214,948,5.01,952,5.276,971,4.794,982,4.388,1032,2.517,1069,2.446,1087,2.148,1328,4.388,1381,2.593,1401,3.641,1408,2.256,1616,4.225,2116,3.317,2118,5.66,2119,4.818,2373,5.276,2392,3.641,2628,5.811,2629,5.507,2631,6.192,2632,6.192,2633,5.276,2638,3.843,2648,4.794,2684,4.388,2685,6.988,2686,6.988,2687,6.988,2688,5.41,2689,4.794,2690,5.41,2691,5.41,2692,5.41,2693,5.41,2694,4.964,2695,4.794,2696,4.794,2697,5.41,2698,4.388,2699,5.41,2700,5.41,2701,5.41,2702,5.41,2703,5.41,2704,5.41,2705,5.41,2706,5.41,2707,5.41,2708,5.41]],["title/interfaces/IBelongsToClub.html",[2248,0.778,2709,2.776]],["body/interfaces/IBelongsToClub.html",[3,0.118,4,0.105,9,0.105,21,0.338,22,0.752,52,0.008,54,0.41,89,0.131,94,1.67,98,0.131,235,1.718,345,0.006,346,0.007,347,0.006,1122,4.449,1396,1.889,2248,1.226,2250,2.449,2709,5.076,2710,6.317,2711,6.797]],["title/interfaces/IClub.html",[1122,2.237,2248,0.778]],["body/interfaces/IClub.html",[3,0.112,4,0.1,9,0.1,21,0.322,22,0.73,52,0.008,53,0.717,54,0.448,89,0.157,98,0.124,108,1.504,345,0.006,346,0.007,347,0.006,431,3.674,1122,3.97,1207,2.253,1254,4.376,1396,1.849,1470,6.687,2248,1.165,2250,2.327,2712,6.003,2713,6.291,2714,5.119,2715,4.935]],["title/interfaces/IConfiguration.html",[75,3.215,2248,0.778]],["body/interfaces/IConfiguration.html",[3,0.119,4,0.106,9,0.106,21,0.342,22,0.757,52,0.008,53,0.732,54,0.413,71,1.458,75,5.918,98,0.132,108,1.543,345,0.006,346,0.007,347,0.006,2248,1.24,2250,2.477,2716,6.389]],["title/interfaces/ICreatedBy.html",[2248,0.778,2717,3.046]],["body/interfaces/ICreatedBy.html",[3,0.118,4,0.105,9,0.105,21,0.338,22,0.752,52,0.008,54,0.41,89,0.131,98,0.131,345,0.006,346,0.007,347,0.006,431,3.723,1396,1.889,2248,1.226,2250,2.449,2717,5.571,2718,6.317,2719,7.302,2720,7.977]],["title/interfaces/IDiscipline.html",[1777,1.938,2248,0.778]],["body/interfaces/IDiscipline.html",[3,0.105,4,0.093,9,0.093,21,0.301,22,0.702,52,0.008,53,0.702,54,0.46,55,0.946,89,0.163,98,0.116,108,1.463,325,1.522,345,0.005,346,0.006,347,0.005,1207,2.204,1254,4.282,1393,3.35,1396,2.007,1777,3.307,1794,5.314,1816,4.42,1820,5.314,1857,3.907,1900,7.679,1909,5.556,2248,1.092,2250,2.181,2715,4.848,2721,5.626,2722,5.695,2723,5.227]],["title/interfaces/IDivision.html",[1989,2.386,2248,0.778]],["body/interfaces/IDivision.html",[3,0.105,4,0.094,9,0.094,21,0.302,22,0.702,52,0.008,53,0.702,54,0.47,55,0.947,89,0.153,98,0.117,108,1.464,169,3.193,194,3.27,325,1.523,345,0.005,346,0.006,347,0.005,1087,2.562,1207,2.205,1254,4.284,1393,3.352,1396,2.055,1794,5.317,1816,4.422,1989,4.077,1994,5.697,2008,5.835,2248,1.093,2250,2.183,2715,4.85,2724,5.633]],["title/interfaces/IGymnast.html",[2248,0.778,2714,2.562]],["body/interfaces/IGymnast.html",[3,0.094,4,0.084,9,0.084,21,0.271,22,0.657,52,0.008,53,0.676,54,0.468,55,1.04,89,0.161,98,0.105,108,1.675,319,1.661,327,1.803,345,0.005,346,0.006,347,0.005,712,3.577,1122,3.577,1207,2.124,1396,2.032,1421,4.188,1994,4.641,1998,5.854,2248,0.983,2250,1.963,2709,5.121,2714,4.098,2715,4.703,2725,5.065,2726,6.305,2727,7.4,2728,6.305,2729,4.728,2730,7.4,2731,7.4,2732,7.4,2733,7.4,2734,7.4,2735,7.4,2736,5.932,2737,5.283]],["title/interfaces/IJudge.html",[2248,0.778,2723,2.663]],["body/interfaces/IJudge.html",[3,0.107,4,0.096,9,0.096,11,1.094,21,0.308,22,0.712,38,0.782,52,0.008,53,0.724,54,0.45,69,2.458,89,0.144,98,0.144,99,0.282,108,1.661,345,0.005,346,0.007,347,0.005,1207,2.274,1396,1.816,1857,3.446,1891,3.546,1909,5.731,2248,1.117,2250,2.231,2722,5.731,2723,4.95,2726,6.749,2729,5.061,2736,6.349,2738,5.269]],["title/interfaces/IJudgeInScoreGroup.html",[2248,0.778,2722,2.902]],["body/interfaces/IJudgeInScoreGroup.html",[3,0.109,4,0.097,9,0.097,21,0.312,22,0.717,33,1.507,52,0.008,54,0.435,89,0.145,98,0.145,345,0.006,346,0.007,347,0.006,1034,4.035,1396,1.967,1820,4.842,1857,3.946,1891,4.972,2248,1.132,2250,2.26,2646,6.404,2722,5.062,2723,5.279,2739,5.831,2740,7.895,2741,6.623,2742,7.895,2743,6.404,2744,5.695,2745,5.608,2746,7.895,2747,7.895,2748,6.23,2749,5.624]],["title/interfaces/IMedia.html",[2248,0.778,2750,2.562]],["body/interfaces/IMedia.html",[3,0.102,4,0.091,9,0.091,21,0.293,22,0.69,52,0.008,54,0.467,89,0.151,98,0.113,108,1.651,250,1.708,319,1.708,325,1.508,345,0.005,346,0.006,347,0.005,1087,2.53,1207,2.184,1393,3.325,1396,2.049,1777,3.773,1816,4.379,2248,1.062,2250,2.122,2711,6.482,2715,4.811,2750,4.302,2751,5.474,2752,4.86,2753,5.052,2754,7.607,2755,7.607,2756,8.585,2757,7.607,2758,6.098]],["title/interfaces/IScore.html",[2248,0.778,2759,2.776]],["body/interfaces/IScore.html",[3,0.109,4,0.097,9,0.097,21,0.312,22,0.717,52,0.008,54,0.46,71,1.415,89,0.145,98,0.121,345,0.006,346,0.007,347,0.006,1207,2.231,1396,2.062,1403,4.3,1407,5.379,1421,4.46,1857,3.946,2248,1.132,2250,2.26,2744,5.379,2748,6.23,2759,4.842,2760,5.831,2761,7.114,2762,7.773,2763,8.772]],["title/interfaces/IScoreContainer.html",[2248,0.778,2764,3.417]],["body/interfaces/IScoreContainer.html",[3,0.107,4,0.095,9,0.095,11,1.088,21,0.307,22,0.709,52,0.008,54,0.442,55,0.952,89,0.119,94,1.514,98,0.143,99,0.28,110,1.233,122,1.644,310,1.259,345,0.005,346,0.007,347,0.005,988,4.59,1396,2.041,1616,4.263,1710,6.008,1857,3.989,2248,1.111,2250,2.22,2265,4.59,2744,5.474,2748,6.34,2759,5.474,2764,6.337,2765,5.242,2766,7.24,2767,5.474,2768,4.59,2769,5.727,2770,4.59,2771,5.727,2772,5.727,2773,5.727]],["title/interfaces/IScoreGroup.html",[1857,1.991,2248,0.778]],["body/interfaces/IScoreGroup.html",[3,0.103,4,0.092,9,0.092,21,0.296,22,0.694,52,0.008,53,0.697,54,0.471,55,0.982,89,0.158,98,0.114,108,1.579,169,3.171,194,3.248,250,1.713,345,0.005,346,0.006,347,0.005,948,5.058,1207,2.19,1396,2.064,1777,3.782,1794,5.28,1820,5.28,1857,3.36,2248,1.072,2250,2.14,2722,5.665,2723,4.495,2752,4.875,2774,5.522,2775,6.984]],["title/interfaces/ITeam.html",[2248,0.778,2715,2.47]],["body/interfaces/ITeam.html",[3,0.11,4,0.098,9,0.098,21,0.316,22,0.722,52,0.008,54,0.446,89,0.165,98,0.122,99,0.382,108,1.492,170,5.18,171,4.805,325,1.546,345,0.006,346,0.007,347,0.006,712,3.926,1393,3.393,1777,3.851,1989,4.743,2248,1.144,2250,2.284,2293,4.911,2715,4.337,2737,5.398,2776,5.892,2777,5.643]],["title/interfaces/ITeamInDiscipline.html",[1403,2.169,2248,0.778]],["body/interfaces/ITeamInDiscipline.html",[3,0.087,4,0.077,9,0.077,21,0.249,22,0.622,52,0.008,54,0.474,55,0.748,89,0.163,98,0.126,108,1.614,170,4.758,250,1.609,284,1.544,310,1.022,319,1.609,325,1.42,345,0.004,346,0.006,347,0.004,606,3.962,909,4.021,1087,2.645,1207,2.057,1393,3.164,1396,2.048,1403,3.283,1405,4.937,1421,4.739,1710,5.443,1777,3.591,1816,4.125,1857,3.355,1989,4.423,2008,5.443,2248,1.178,2250,1.802,2401,3.531,2594,3.727,2715,4.579,2749,5.185,2752,4.578,2753,4.758,2758,5.744,2759,5.145,2767,5.145,2777,5.185,2778,4.256,2779,7.166,2780,6.559,2781,7.166,2782,5.744,2783,6.106,2784,6.106,2785,5.443,2786,5.443,2787,6.711]],["title/interfaces/ITournament.html",[1393,1.707,2248,0.778]],["body/interfaces/ITournament.html",[3,0.087,4,0.078,9,0.078,21,0.251,22,0.626,52,0.008,53,0.657,54,0.471,89,0.163,94,1.24,98,0.126,108,1.607,168,3.392,170,4.774,171,4.428,284,1.549,337,1.647,345,0.004,346,0.006,347,0.004,712,3.404,1087,2.767,1207,2.064,1393,2.598,1396,2.059,1403,4.032,1588,4.774,1777,3.601,1989,4.435,2198,5.46,2199,5.46,2200,5.46,2248,1.185,2250,1.817,2552,5.762,2709,4.975,2714,5.141,2717,5.155,2750,4.762,2788,4.291,2789,7.189,2790,7.189,2791,7.454,2792,7.189,2793,7.189,2794,7.189,2795,7.189,2796,7.189,2797,7.189,2798,7.189,2799,7.189,2800,7.189,2801,6.125,2802,5.393,2803,4.291,2804,4.291,2805,4.291,2806,4.688]],["title/interfaces/ITournamentTimes.html",[2248,0.778,2801,3.417]],["body/interfaces/ITournamentTimes.html",[3,0.103,4,0.092,9,0.092,21,0.295,22,0.693,52,0.008,53,0.503,54,0.409,89,0.169,94,1.457,98,0.14,108,1.627,168,5.516,170,3.658,171,3.393,284,1.187,337,1.262,345,0.005,346,0.006,347,0.005,712,3.072,1087,2.537,1207,1.581,1393,2.345,1396,2.022,1403,3.955,1588,3.658,1777,3.532,1989,4.35,2198,4.184,2199,4.184,2200,4.184,2248,1.312,2250,2.135,2552,4.415,2709,5.06,2714,4.871,2717,5.554,2750,4.671,2788,5.042,2789,5.508,2790,5.508,2791,6.758,2792,5.508,2793,5.508,2794,5.508,2795,5.508,2796,5.508,2797,5.508,2798,5.508,2799,5.508,2800,5.508,2801,6.23,2802,5.29,2803,6.978,2804,6.978,2805,5.042,2806,5.508]],["title/interfaces/ITroop.html",[2248,0.778,2737,2.776]],["body/interfaces/ITroop.html",[3,0.112,4,0.1,9,0.1,21,0.322,22,0.73,52,0.008,53,0.717,54,0.439,89,0.162,98,0.124,108,1.504,284,1.691,345,0.006,346,0.007,347,0.006,712,3.97,1122,3.97,1207,2.253,1396,1.849,2248,1.165,2250,2.327,2709,5.431,2713,6.291,2714,5.119,2737,4.926,2750,5.119,2807,6.003]],["title/interfaces/IUser.html",[431,1.839,2248,0.778]],["body/interfaces/IUser.html",[3,0.101,4,0.09,9,0.09,21,0.29,22,0.685,52,0.008,53,0.748,54,0.454,55,0.934,89,0.112,98,0.15,102,1.051,108,1.649,235,1.441,331,1.411,345,0.005,346,0.006,347,0.005,431,3.067,530,3.459,712,3.729,924,6.937,1087,2.518,1123,3.723,1132,3.335,1137,5.698,1207,2.349,1396,1.932,1540,3.918,1693,4.113,2248,1.051,2250,2.099,2588,4.839,2709,5.245,2729,4.842,2808,4.614,2809,7.578,2810,8.552,2811,5.483,2812,5.415,2813,4.956,2814,5.698,2815,4.956,2816,4.956,2817,4.34,2818,4.956,2819,4.956,2820,4.956]],["title/interfaces/IVenue.html",[2248,0.778,2802,2.902]],["body/interfaces/IVenue.html",[3,0.103,4,0.092,9,0.092,21,0.297,22,0.695,52,0.008,53,0.698,54,0.466,89,0.14,98,0.115,108,1.687,345,0.005,346,0.006,347,0.005,712,3.783,1207,2.193,1393,3.336,1396,2.033,1469,4.881,1816,4.398,2248,1.076,2250,2.148,2717,5.803,2802,4.908,2821,5.542,2822,6.124,2823,7.64,2824,6.124,2825,7.64,2826,7.64,2827,7.64,2828,7.64,2829,6.993]],["title/directives/IfAuthDirective.html",[224,0.882,340,0.9]],["body/directives/IfAuthDirective.html",[3,0.092,4,0.082,9,0.082,11,1.196,13,1.103,14,1.442,21,0.263,22,0.645,29,0.918,35,2.281,38,0.668,49,1.068,51,0.939,52,0.008,53,0.575,54,0.352,55,0.775,58,1.067,59,1.361,69,1.922,70,1.274,71,1.409,77,2.258,89,0.151,91,0.397,93,2.092,94,1.3,98,0.102,99,0.24,102,1.347,107,2.581,108,0.974,113,1.247,118,1.743,224,1.384,331,1.465,339,1.126,340,1.413,345,0.005,346,0.006,347,0.005,388,3.183,396,6.353,401,3.443,408,3.702,433,2.955,445,1.471,466,2.197,479,6.353,489,6.353,498,6.292,614,6.698,868,7.318,1123,3.469,1130,3.94,1164,5.272,1216,4.915,1285,3.04,1313,3.123,2830,8.111,2831,4.915,2832,8.733,2833,5.547,2834,7.318,2835,7.833,2836,7.318,2837,5.547,2838,7.101,2839,5.547,2840,5.547,2841,5.547,2842,5.547,2843,5.547,2844,5.547,2845,5.547,2846,5.547,2847,7.833,2848,7.101,2849,5.547,2850,7.833,2851,5.547]],["title/components/InfoComponent.html",[0,0.234,270,0.9]],["body/components/InfoComponent.html",[0,0.293,1,0.61,2,0.893,3,0.094,4,0.045,5,0.675,6,0.675,7,0.662,8,0.675,9,0.045,11,0.787,12,1.25,13,0.61,14,1.931,15,1.927,17,0.989,19,0.989,21,0.222,22,0.425,29,0.604,32,1.398,33,1.304,38,0.563,49,1.026,51,0.839,52,0.008,53,0.625,54,0.371,55,0.693,58,1.043,59,1.235,66,1.293,70,0.839,71,0.915,77,1.83,81,2.177,83,2.998,89,0.132,90,2.486,91,0.219,94,0.718,98,0.056,99,0.133,102,1.49,108,1.265,110,0.896,113,1.39,122,1.614,128,1.735,135,1.514,140,2.716,169,1.722,172,1.175,174,1.821,175,1.077,176,2.486,177,1.682,178,1.184,179,1.214,181,2.639,182,3.136,183,2.241,185,2.002,187,1.803,189,1.735,190,1.682,191,1.386,196,2.115,198,4.507,199,2.717,201,2.718,202,2.139,206,1.606,217,1.426,221,0.495,222,0.93,223,0.95,224,0.597,225,1.398,226,0.675,227,0.675,228,0.597,229,0.675,230,0.61,231,0.675,232,0.61,233,0.675,234,0.61,235,0.893,236,1.779,237,0.622,238,1.031,239,0.61,240,0.675,241,0.61,242,0.648,243,1.031,244,0.61,245,0.662,246,0.675,247,0.622,248,1.25,249,0.622,250,0.61,251,0.622,252,0.675,253,0.61,254,0.622,255,0.989,256,0.622,257,0.61,258,0.675,259,0.61,260,0.61,261,0.597,262,0.675,263,0.61,264,0.675,265,0.622,266,0.675,267,0.675,268,0.585,269,0.675,270,1.262,271,0.675,272,0.61,273,0.675,274,0.597,275,0.597,276,0.675,277,0.597,278,0.675,279,0.622,280,0.675,281,0.61,282,0.675,283,0.622,284,0.585,285,0.675,286,0.61,287,0.989,288,0.622,289,0.675,290,0.622,291,0.675,292,0.622,293,0.675,294,0.622,295,0.675,296,0.597,297,0.675,298,0.597,299,0.675,300,0.622,301,0.675,302,0.622,303,0.675,304,0.622,305,0.675,306,0.61,307,0.675,308,0.622,309,0.622,310,0.597,311,0.622,312,0.675,313,0.61,314,0.648,315,0.675,316,0.61,317,0.675,318,0.622,319,0.61,320,0.61,321,0.675,322,0.61,323,0.675,324,1.388,325,1.316,326,0.61,327,0.662,328,0.61,329,0.675,330,0.61,331,0.573,332,0.61,333,0.675,334,0.61,335,0.675,336,0.61,337,0.622,338,0.675,339,0.622,340,0.61,341,0.675,342,0.597,343,0.662,344,0.675,345,0.003,346,0.004,347,0.003,409,2.953,446,1.278,447,1.278,459,3.793,467,2.716,510,1.426,527,2.002,529,1.735,538,3.041,550,2.716,555,2.063,561,2.195,566,2.057,581,3.531,590,2.063,610,1.469,612,1.735,620,1.514,627,3.148,632,2.177,633,3.211,840,1.535,851,2.716,1034,1.879,1087,0.942,1105,1.764,1108,1.682,1110,1.156,1112,1.853,1121,1.156,1126,0.903,1134,2.998,1144,1.673,1371,1.386,1393,2.139,1396,1.37,1426,4.545,1428,5.264,1485,6.382,1756,2.486,1867,1.965,1940,2.314,1942,2.868,1972,2.868,2116,1.879,2118,4.068,2119,3.464,2207,4.028,2210,5.623,2352,2.177,2375,3.531,2568,1.803,2591,1.879,2659,5.025,2675,3.531,2698,2.486,2852,2.716,2853,5.671,2854,4.677,2855,5.671,2856,7.491,2857,6.346,2858,6.346,2859,5.147,2860,4.677,2861,4.677,2862,4.677,2863,6.346,2864,4.677,2865,4.677,2866,3.065,2867,3.065,2868,3.065,2869,3.065,2870,7.202,2871,7.202,2872,3.065,2873,3.065,2874,3.065,2875,4.677,2876,3.065,2877,3.065,2878,4.677,2879,3.065,2880,4.677,2881,6.659,2882,3.065,2883,4.677,2884,4.677,2885,3.065,2886,4.677,2887,3.065,2888,3.065,2889,3.065,2890,3.065,2891,3.065,2892,5.671,2893,5.671,2894,7.491,2895,3.065,2896,3.065,2897,3.065,2898,4.677,2899,7.915,2900,6.638,2901,2.716,2902,2.314,2903,4.677,2904,3.065,2905,3.065,2906,5.671,2907,3.065,2908,4.677,2909,3.065,2910,3.065,2911,3.065,2912,3.065,2913,3.065,2914,3.065,2915,3.065,2916,3.065,2917,4.677,2918,3.065,2919,3.065,2920,5.671,2921,5.671,2922,3.065,2923,4.677,2924,3.065,2925,3.065,2926,3.065,2927,3.065,2928,3.065,2929,3.065,2930,3.065,2931,3.065,2932,3.065,2933,3.065,2934,2.716,2935,5.147,2936,3.065,2937,3.065,2938,3.065,2939,3.065,2940,4.144,2941,3.065,2942,2.716,2943,3.065,2944,2.486,2945,3.065]],["title/classes/Judge.html",[99,0.196,1891,2.47]],["body/classes/Judge.html",[3,0.103,4,0.092,9,0.092,11,1.289,21,0.297,22,0.695,38,0.996,49,1.072,52,0.008,53,0.698,54,0.446,69,2.588,70,1.614,71,1.452,89,0.14,98,0.14,99,0.271,108,1.514,345,0.005,346,0.006,347,0.005,1207,2.193,1396,1.35,1857,3.367,1891,4.179,1909,5.528,2248,1.076,2293,3.414,2722,5.305,2723,4.869,2726,6.51,2729,4.881,2736,6.124,2738,5.073,2946,7.656,2947,6.254,2948,6.254,2949,6.254,2950,6.254,2951,6.254]],["title/injectables/LoadIndicatorService.html",[654,1.225,2952,3.417]],["body/injectables/LoadIndicatorService.html",[3,0.055,4,0.049,9,0.049,21,0.158,22,0.452,26,3.822,29,0.643,33,1.471,38,0.401,47,2.13,49,1.072,51,1.047,52,0.008,53,0.641,54,0.466,55,0.865,58,0.996,59,0.82,66,0.92,68,3.535,70,1.565,71,1.408,77,0.959,89,0.121,91,0.238,98,0.091,99,0.144,108,1.641,110,1.174,112,1.255,113,1.655,118,1.045,128,1.884,151,2.174,153,4.944,274,0.648,345,0.003,346,0.004,347,0.003,379,0.98,390,1.463,445,0.882,564,3.079,577,3.656,654,1.347,831,4.057,841,2.239,845,3.351,853,2.699,860,3.822,891,2.624,897,5.002,918,2.699,1032,1.548,1050,2.363,1069,1.505,1087,1.023,1091,4.835,1118,1.754,1153,1.505,1230,4.995,1235,2.817,1351,3.656,1542,2.716,1616,4.628,1631,3.656,1632,3.656,1690,4.699,1691,2.133,1733,2.774,1788,1.697,2116,3.656,2118,5.367,2119,4.42,2172,2.948,2173,4.699,2248,0.572,2395,3.349,2405,5.745,2414,2.512,2447,5.745,2485,4.835,2638,4.699,2678,5.745,2694,5.279,2902,2.512,2952,3.757,2953,6.907,2954,6.498,2955,2.699,2956,5.282,2957,5.282,2958,5.282,2959,5.282,2960,5.282,2961,5.282,2962,4.835,2963,5.282,2964,5.282,2965,5.282,2966,5.282,2967,5.282,2968,5.348,2969,5.282,2970,4.976,2971,5.857,2972,4.976,2973,4.976,2974,4.976,2975,4.976,2976,4.976,2977,4.976,2978,4.976,2979,4.41,2980,3.327,2981,4.41,2982,3.327,2983,5.366,2984,5.862,2985,4.41,2986,3.327,2987,4.41,2988,4.41,2989,4.41,2990,4.41,2991,4.41,2992,4.41,2993,3.327,2994,4.41,2995,3.327,2996,4.41,2997,3.327,2998,4.41,2999,3.327,3000,3.327,3001,3.327,3002,3.327,3003,4.976,3004,7.019,3005,3.327,3006,3.327,3007,3.327,3008,4.976,3009,3.327,3010,4.976,3011,3.327,3012,3.327,3013,2.699,3014,4.41,3015,4.41,3016,2.512,3017,4.835,3018,2.699,3019,2.948,3020,2.948,3021,2.948,3022,2.948,3023,2.699,3024,2.699,3025,2.948,3026,2.948,3027,2.948,3028,2.948,3029,4.41,3030,4.41,3031,2.948,3032,2.948,3033,2.948,3034,4.41,3035,2.948,3036,2.948,3037,5.282,3038,4.41,3039,4.41,3040,2.512,3041,2.948,3042,5.282,3043,2.948,3044,2.948,3045,2.948,3046,2.948]],["title/components/LoadSpinnerComponent.html",[0,0.234,274,0.882]],["body/components/LoadSpinnerComponent.html",[0,0.369,1,0.914,2,1.196,3,0.076,4,0.068,5,1.012,6,1.012,7,0.992,8,1.012,9,0.068,13,0.914,14,1.964,15,1.962,17,1.326,19,1.326,33,0.877,38,0.859,49,0.54,52,0.008,53,0.621,89,0.115,91,0.329,98,0.084,99,0.199,122,1.594,172,1.479,175,1.614,177,2.255,178,1.775,179,2.483,181,3.567,183,2.201,185,1.966,187,2.703,190,1.652,209,3.262,211,2.203,212,2.507,213,2.547,217,2.137,221,0.741,222,1.247,223,1.273,224,0.895,225,1.689,226,1.012,227,1.012,228,0.895,229,1.012,230,0.914,231,1.012,232,0.914,233,1.012,234,0.914,235,1.196,236,1.95,237,0.933,238,1.381,239,0.914,240,1.012,241,0.914,242,0.972,243,1.381,244,0.914,245,0.992,246,1.012,247,0.933,248,1.573,249,0.933,250,0.914,251,0.933,252,1.012,253,0.914,254,0.933,255,1.326,256,0.933,257,0.914,258,1.012,259,0.914,260,0.914,261,0.895,262,1.012,263,0.914,264,1.012,265,0.933,266,1.012,267,1.012,268,0.877,269,1.012,270,0.914,271,1.012,272,0.914,273,1.012,274,1.494,275,0.895,276,1.012,277,0.895,278,1.012,279,0.933,280,1.012,281,0.914,282,1.012,283,0.933,284,0.877,285,1.012,286,0.914,287,1.326,288,0.933,289,1.012,290,0.933,291,1.012,292,0.933,293,1.012,294,0.933,295,1.012,296,0.895,297,1.012,298,0.895,299,1.012,300,0.933,301,1.012,302,0.933,303,1.012,304,0.933,305,1.012,306,0.914,307,1.012,308,0.933,309,0.933,310,0.895,311,0.933,312,1.012,313,0.914,314,0.972,315,1.012,316,0.914,317,1.012,318,0.933,319,0.914,320,0.914,321,1.012,322,0.914,323,1.012,324,0.933,325,0.807,326,0.914,327,0.992,328,0.914,329,1.012,330,0.914,331,0.859,332,0.914,333,1.012,334,0.914,335,1.012,336,0.914,337,0.933,338,1.012,339,0.933,340,0.914,341,1.012,342,0.895,343,0.992,344,1.012,345,0.004,346,0.005,347,0.004,527,2.683,532,1.966,543,2.507,555,5.16,556,3.091,557,2.945,561,1.475,574,3.844,584,4.376,610,2.201,620,2.269,1540,2.945,1542,2.507,2517,4.733,2694,5.699,2953,4.733,2954,4.452,3024,3.725,3047,4.07,3048,6.268,3049,6.268,3050,7.135,3051,6.268,3052,4.593,3053,4.593,3054,7.135,3055,7.135,3056,6.268,3057,4.593,3058,6.268,3059,6.268,3060,7.666,3061,4.593,3062,4.07,3063,4.593,3064,3.725,3065,4.593,3066,5.787,3067,4.593,3068,7.135,3069,4.593,3070,4.593,3071,4.593,3072,4.593,3073,4.593,3074,4.593,3075,4.593,3076,4.593]],["title/classes/Logger.html",[99,0.196,453,2.386]],["body/classes/Logger.html",[3,0.105,4,0.093,9,0.093,21,0.301,29,0.998,49,1.018,51,1.145,52,0.008,53,0.701,54,0.44,55,0.946,58,1.119,59,1.428,83,6.046,89,0.116,98,0.116,99,0.275,107,2.951,108,1.462,113,1.462,158,4.268,260,1.536,345,0.005,346,0.006,347,0.005,449,3.888,450,4.788,453,4.07,461,4.788,518,5.829,1048,5.619,2293,3.461,3077,5.619,3078,7.72,3079,6.841,3080,7.72,3081,7.483,3082,6.341,3083,7.72,3084,6.341,3085,7.72,3086,6.341,3087,7.72,3088,6.341,3089,6.341,3090,6.341,3091,6.341,3092,6.341,3093,6.341]],["title/components/LoginComponent.html",[0,0.234,275,0.882]],["body/components/LoginComponent.html",[0,0.312,1,0.678,2,0.968,3,0.056,4,0.05,5,0.752,6,0.752,7,0.736,8,0.752,9,0.05,11,0.854,12,1.333,13,0.678,14,1.941,15,1.938,17,1.072,19,1.072,21,0.162,22,0.549,29,0.655,32,1.476,33,0.651,35,1.628,38,0.61,43,2.586,44,3.416,46,3.21,49,0.958,51,0.67,52,0.008,53,0.607,54,0.332,55,0.554,58,0.865,59,1.104,70,0.612,71,1.155,73,3.086,89,0.154,91,0.244,92,1.095,93,1.286,94,0.799,97,1.798,98,0.063,99,0.148,102,0.587,108,0.599,110,0.539,113,1.364,116,3.19,122,2.03,135,3.537,169,1.867,172,1.254,175,1.199,177,2.574,178,1.318,181,1.587,185,2.59,188,3.425,190,2.932,191,3.237,192,3.6,193,1.635,194,1.286,199,2.59,200,2.673,201,3.595,202,2.929,205,2.295,206,2.078,211,1.781,212,1.862,213,2.06,215,2.295,218,1.635,221,0.55,222,1.008,223,1.029,224,0.665,225,1.476,226,0.752,227,0.752,228,0.665,229,0.752,230,0.678,231,0.752,232,0.678,233,0.752,234,0.678,235,1.432,236,1.828,237,0.693,238,1.117,239,0.678,240,0.752,241,0.678,242,0.721,243,1.117,244,0.678,245,0.736,246,0.752,247,0.693,248,1.333,249,0.693,250,0.678,251,0.693,252,0.752,253,0.678,254,0.693,255,1.072,256,0.693,257,0.678,258,0.752,259,0.678,260,1.008,261,0.665,262,0.752,263,0.678,264,0.752,265,0.693,266,0.752,267,0.752,268,0.651,269,0.752,270,0.678,271,0.752,272,0.678,273,0.752,274,0.665,275,1.305,276,0.752,277,0.665,278,0.752,279,0.693,280,0.752,281,0.678,282,0.752,283,0.693,284,1.155,285,0.752,286,0.678,287,1.072,288,0.693,289,0.752,290,0.693,291,0.752,292,0.693,293,0.752,294,0.693,295,0.752,296,0.665,297,0.752,298,0.665,299,0.752,300,0.693,301,0.752,302,0.693,303,0.752,304,0.693,305,0.752,306,0.678,307,0.752,308,0.693,309,0.693,310,0.665,311,0.693,312,0.752,313,0.678,314,0.721,315,0.752,316,0.678,317,0.752,318,0.693,319,0.678,320,0.678,321,0.752,322,0.678,323,0.752,324,0.693,325,0.599,326,0.678,327,0.736,328,0.678,329,0.752,330,0.678,331,0.638,332,0.678,333,0.752,334,0.678,335,0.752,336,0.678,337,0.693,338,0.752,339,0.693,340,0.678,341,0.752,342,0.665,343,0.736,344,0.752,345,0.004,346,0.004,347,0.003,388,2.458,401,2.792,408,3.238,410,3.077,411,4.907,431,2.06,433,2.282,442,0.963,445,0.904,466,1.351,517,5.692,519,5.516,527,2.867,528,2.091,530,1.931,532,1.46,533,2.187,534,3.086,538,1.635,553,2.87,556,3.412,559,2.422,566,2.661,574,3.108,578,1.798,584,3.108,585,3.6,589,4.111,610,2.429,612,2.87,618,3.412,620,2.505,627,3.412,669,5.084,718,1.635,772,4.568,801,2.59,802,3.029,804,3.941,910,2.295,911,2.295,952,2.575,1153,2.292,1171,1.862,1197,1.798,1209,2.767,1254,2.505,1258,2.766,1261,2.575,1356,1.5,1469,2.87,1477,3.412,1808,2.187,2352,3.6,2521,3.25,2582,4.297,2616,2.187,2617,2.187,2745,3.6,2811,4.294,3094,3.022,3095,6.049,3096,5.069,3097,6.049,3098,6.049,3099,6.049,3100,4.568,3101,5.069,3102,3.41,3103,3.41,3104,3.41,3105,3.41,3106,3.41,3107,3.41,3108,3.41,3109,3.41,3110,3.41,3111,5.069,3112,3.41,3113,3.41,3114,3.022,3115,2.766,3116,3.41,3117,3.41,3118,4.111,3119,3.41,3120,3.41,3121,3.41,3122,3.41,3123,3.41,3124,3.41,3125,3.41,3126,3.022,3127,3.022,3128,2.766,3129,3.41,3130,3.41,3131,3.41,3132,5.069,3133,4.492,3134,2.766,3135,3.022,3136,4.492,3137,4.907,3138,3.41,3139,3.41,3140,2.295,3141,2.575,3142,3.41,3143,3.41,3144,3.022,3145,3.41]],["title/components/LogoutComponent.html",[0,0.234,277,0.882]],["body/components/LogoutComponent.html",[0,0.366,1,0.9,2,1.185,3,0.075,4,0.067,5,0.998,6,0.998,7,0.977,8,0.998,9,0.067,13,0.9,14,1.964,15,1.962,17,1.313,19,1.313,21,0.215,22,0.411,29,0.802,33,0.864,38,0.747,40,3.652,45,4.009,46,3.652,49,0.73,51,0.821,52,0.008,53,0.668,54,0.307,55,0.678,56,3.203,58,0.585,59,0.746,69,1.225,71,0.73,89,0.151,91,0.324,93,1.708,96,2.776,97,2.387,98,0.083,99,0.196,108,1.244,113,1.402,172,1.468,215,3.047,221,0.73,222,1.235,223,1.26,224,0.882,225,1.679,226,0.998,227,0.998,228,0.882,229,0.998,230,0.9,231,0.998,232,0.9,233,0.998,234,0.9,235,1.185,236,1.945,237,0.919,238,1.368,239,0.9,240,0.998,241,0.9,242,0.958,243,1.368,244,0.9,245,0.977,246,0.998,247,0.919,248,1.561,249,0.919,250,0.9,251,0.919,252,0.998,253,0.9,254,0.919,255,1.313,256,0.919,257,0.9,258,0.998,259,0.9,260,0.9,261,0.882,262,0.998,263,0.9,264,0.998,265,0.919,266,0.998,267,0.998,268,0.864,269,0.998,270,0.9,271,0.998,272,0.9,273,0.998,274,0.882,275,0.882,276,0.998,277,1.485,278,0.998,279,0.919,280,0.998,281,0.9,282,0.998,283,0.919,284,0.864,285,0.998,286,0.9,287,1.313,288,0.919,289,0.998,290,0.919,291,0.998,292,0.919,293,0.998,294,0.919,295,0.998,296,0.882,297,0.998,298,0.882,299,0.998,300,0.919,301,0.998,302,0.919,303,0.998,304,0.919,305,0.998,306,0.9,307,0.998,308,0.919,309,0.919,310,0.882,311,0.919,312,0.998,313,0.9,314,0.958,315,0.998,316,0.9,317,0.998,318,0.919,319,0.9,320,0.9,321,0.998,322,0.9,323,0.998,324,0.919,325,0.795,326,0.9,327,0.977,328,0.9,329,0.998,330,0.9,331,0.846,332,0.9,333,0.998,334,0.9,335,0.998,336,0.9,337,0.919,338,0.998,339,0.919,340,0.9,341,0.998,342,0.882,343,0.977,344,0.998,345,0.004,346,0.005,347,0.004,365,2.806,408,3.521,410,3.267,411,5.744,442,1.278,515,3.418,669,5.671,762,6.18,800,3.215,938,5.03,952,3.418,1012,2.471,1408,1.887,3126,4.011,3127,4.011,3128,3.672,3146,4.011,3147,7.082,3148,6.206,3149,6.206,3150,4.527,3151,6.206,3152,4.527,3153,4.527,3154,5.347,3155,3.672,3156,4.527,3157,4.527,3158,4.527,3159,4.527,3160,4.527]],["title/components/MacroDialogComponent.html",[0,0.234,279,0.919]],["body/components/MacroDialogComponent.html",[0,0.299,1,0.63,2,0.915,3,0.052,4,0.047,5,0.697,6,0.697,7,0.683,8,0.697,9,0.047,11,0.807,12,1.275,13,0.63,14,1.934,15,1.932,17,1.014,19,1.014,21,0.15,22,0.662,29,0.619,32,1.669,33,0.604,38,0.381,49,1.024,51,0.634,52,0.008,53,0.739,54,0.343,55,0.523,58,0.979,59,1.249,66,1.325,70,1.037,71,1.118,77,1.382,80,3.796,89,0.127,91,0.226,98,0.058,99,0.137,102,0.544,110,1.416,113,0.556,122,1.219,167,2.804,168,2.029,169,1.165,172,1.437,174,2.433,175,1.112,177,2.32,178,1.223,179,1.254,193,3.495,194,1.194,196,2.616,199,1.355,202,1.808,206,1.646,210,2.13,211,1.684,212,1.727,213,1.286,216,2.029,221,0.511,222,0.953,223,1.174,224,0.617,225,1.422,226,0.697,227,0.697,228,0.617,229,0.697,230,0.63,231,0.697,232,0.63,233,0.697,234,0.63,235,0.915,236,1.794,237,0.643,238,1.056,239,0.63,240,0.697,241,0.63,242,0.669,243,1.056,244,0.63,245,0.683,246,0.697,247,1.769,248,1.275,249,0.643,250,1.151,251,0.643,252,0.697,253,0.63,254,0.643,255,1.365,256,0.643,257,0.63,258,0.697,259,0.63,260,0.63,261,0.617,262,0.697,263,0.63,264,0.697,265,0.643,266,0.697,267,0.697,268,0.604,269,0.697,270,0.63,271,0.697,272,0.63,273,0.697,274,0.617,275,0.617,276,0.697,277,0.617,278,0.697,279,1.31,280,1.76,281,0.63,282,0.697,283,0.643,284,0.915,285,0.697,286,0.63,287,1.014,288,0.643,289,0.697,290,0.643,291,0.697,292,0.643,293,0.697,294,0.643,295,0.697,296,0.617,297,0.697,298,0.617,299,0.697,300,0.643,301,0.697,302,0.643,303,0.697,304,0.643,305,0.697,306,0.63,307,0.697,308,0.643,309,0.643,310,0.617,311,0.643,312,0.697,313,0.63,314,0.669,315,0.697,316,0.63,317,0.697,318,0.643,319,1.507,320,0.63,321,0.697,322,0.63,323,0.697,324,0.643,325,1.016,326,0.63,327,0.683,328,0.63,329,0.697,330,0.63,331,0.592,332,0.63,333,0.697,334,0.63,335,0.697,336,0.63,337,0.643,338,0.697,339,0.643,340,0.63,341,0.697,342,0.617,343,0.683,344,0.697,345,0.003,346,0.004,347,0.003,409,3.002,420,2.248,446,1.319,447,1.319,453,1.669,510,2.691,528,1.941,532,1.355,538,1.517,548,2.029,549,2.029,563,2.804,564,3.225,565,2.029,576,2.804,712,2.368,718,1.517,871,2.804,886,1.792,965,3.072,1105,1.808,1106,2.167,1110,1.808,1112,1.254,1165,2.527,1285,2.051,1301,3.404,1351,1.941,1356,1.392,1396,1.249,1407,2.939,1421,2.527,1424,2.248,1425,2.389,1426,3.403,1428,2.029,1469,3.274,1472,2.248,1473,2.248,1535,2.13,1542,3.157,1562,5.622,1571,2.804,1588,1.862,1712,3.618,1717,4.691,1718,3.887,1719,4.246,1720,5.125,1721,5.125,1722,5.125,1723,5.125,1724,4.246,1725,4.246,1726,2.444,1727,4.246,1728,3.404,1729,4.246,1733,2.23,1735,2.804,1737,2.804,1765,2.804,1767,2.804,1972,1.941,2137,2.567,2143,4.246,2303,7.431,2566,2.248,2616,2.029,2741,2.389,2743,2.567,2753,1.862,2767,2.939,2785,2.13,2786,3.225,2815,2.567,2859,2.567,3161,6.142,3162,5.784,3163,6.451,3164,3.165,3165,3.165,3166,3.165,3167,3.165,3168,3.165,3169,3.165,3170,4.792,3171,3.165,3172,3.165,3173,3.165,3174,3.165,3175,3.165,3176,3.165,3177,3.165,3178,3.165,3179,2.389,3180,3.165,3181,3.165,3182,3.165,3183,3.165,3184,3.165,3185,4.246,3186,7.774,3187,3.165,3188,3.165,3189,3.165,3190,3.165,3191,3.165,3192,3.165,3193,3.165,3194,3.165,3195,3.165,3196,3.165,3197,3.165,3198,3.165,3199,3.165,3200,3.165,3201,8.142,3202,3.165,3203,2.567,3204,3.165,3205,4.792,3206,4.792,3207,3.887,3208,3.165,3209,3.165,3210,3.165,3211,3.165,3212,3.165,3213,2.567,3214,2.804,3215,2.804,3216,4.792,3217,3.165,3218,3.165,3219,3.165,3220,4.792,3221,4.792,3222,4.792,3223,3.165,3224,3.165,3225,3.165,3226,3.165,3227,3.165,3228,3.165,3229,3.165]],["title/components/MediaComponent.html",[0,0.234,281,0.9]],["body/components/MediaComponent.html",[0,0.331,1,0.749,2,1.04,3,0.09,4,0.055,5,0.83,6,0.83,7,0.813,8,0.83,9,0.08,11,0.918,12,1.412,13,0.749,14,1.95,15,1.947,17,1.153,19,1.153,21,0.259,22,0.495,29,0.704,32,1.547,33,0.718,38,0.656,42,3.702,49,0.913,51,0.721,52,0.008,53,0.649,54,0.369,55,0.595,58,0.704,59,0.62,70,1.393,71,0.879,89,0.15,91,0.269,93,1.42,98,0.069,99,0.163,102,0.647,107,1.752,108,0.661,113,0.957,122,1.976,171,3.496,172,1.328,175,1.323,177,1.96,178,2.106,179,1.491,181,2.536,182,1.86,183,1.804,185,1.611,187,2.215,190,2.525,191,2.464,194,1.42,199,1.611,202,2.416,205,3.668,206,1.293,221,0.607,222,1.084,223,1.106,224,0.733,225,1.547,226,0.83,227,0.83,228,0.733,229,0.83,230,0.749,231,0.83,232,0.749,233,0.83,234,1.482,235,1.7,236,1.871,237,0.764,238,1.201,239,0.749,240,0.83,241,0.749,242,1.355,243,1.201,244,0.749,245,0.813,246,0.83,247,0.764,248,1.412,249,0.764,250,1.594,251,0.764,252,0.83,253,0.749,254,0.764,255,1.153,256,0.764,257,0.749,258,0.83,259,0.749,260,0.749,261,0.733,262,0.83,263,0.749,264,0.83,265,0.764,266,0.83,267,0.83,268,0.718,269,0.83,270,0.749,271,0.83,272,0.749,273,0.83,274,0.733,275,0.733,276,0.83,277,0.733,278,0.83,279,0.764,280,0.83,281,1.397,282,0.83,283,0.764,284,1.621,285,0.83,286,0.749,287,1.153,288,0.764,289,0.83,290,0.764,291,0.83,292,0.764,293,0.83,294,0.764,295,0.83,296,0.733,297,0.83,298,0.733,299,0.83,300,0.764,301,0.83,302,0.764,303,0.83,304,0.764,305,0.83,306,0.749,307,0.83,308,0.764,309,0.764,310,0.733,311,0.764,312,0.83,313,0.749,314,0.796,315,0.83,316,0.749,317,0.83,318,0.764,319,0.749,320,0.749,321,0.83,322,0.749,323,0.83,324,0.764,325,1.309,326,0.749,327,0.813,328,0.749,329,0.83,330,0.749,331,0.704,332,0.749,333,0.83,334,0.749,335,0.83,336,0.749,337,0.764,338,0.83,339,0.764,340,0.749,341,0.83,342,0.733,343,0.813,344,0.83,345,0.003,346,0.005,347,0.003,453,1.985,468,2.533,527,2.333,529,2.131,532,1.611,533,2.413,543,2.974,548,2.413,549,2.413,566,1.655,578,2.873,584,2.308,586,2.533,590,2.533,610,1.804,612,2.131,620,1.86,1122,3.165,1155,2.413,1227,2.533,1262,2.842,1351,4.305,1371,1.702,1593,5.301,1777,2.742,1807,4.42,1821,3.769,1830,3.871,1895,2.533,1942,3.928,1947,2.842,2092,3.053,2094,3.053,2095,3.053,2163,2.413,2515,2.674,2523,2.674,2566,3.871,2616,3.494,2617,2.413,2750,3.975,2881,4.42,2944,3.053,3017,6.3,3137,3.053,3141,2.842,3179,2.842,3230,3.335,3231,6.405,3232,5.449,3233,5.449,3234,3.335,3235,5.449,3236,3.764,3237,5.449,3238,3.764,3239,3.764,3240,3.764,3241,3.764,3242,3.335,3243,3.764,3244,4.114,3245,3.764,3246,3.764,3247,3.764,3248,3.764,3249,3.053,3250,6.764,3251,6.043,3252,5.449,3253,5.449,3254,5.449,3255,5.449,3256,4.42,3257,5.449,3258,5.449,3259,7.768,3260,5.449,3261,5.449,3262,4.829,3263,5.449,3264,4.42,3265,4.829,3266,5.449,3267,3.764,3268,2.674,3269,3.335,3270,3.335,3271,3.335,3272,3.335,3273,3.764]],["title/components/MediaControlComponent.html",[0,0.234,283,0.919]],["body/components/MediaControlComponent.html",[0,0.283,1,0.576,2,0.855,3,0.048,4,0.043,5,0.639,6,0.639,7,0.626,8,0.639,9,0.066,11,0.754,12,1.207,13,0.576,14,1.925,15,1.921,17,0.948,19,0.948,21,0.213,22,0.407,29,0.579,32,1.358,33,0.553,35,1.439,38,0.349,49,1.062,51,0.881,52,0.008,53,0.63,54,0.394,55,0.727,58,1.076,59,1.211,66,0.801,69,1.482,70,1.317,71,0.723,77,1.579,89,0.129,91,0.207,98,0.053,99,0.126,102,0.942,108,0.962,110,1.198,112,1.093,113,0.509,115,3.633,118,1.721,122,1.792,128,1.64,151,0.752,171,2.445,172,1.135,174,1.759,175,1.018,177,1.611,178,1.731,179,1.148,185,2.638,190,1.042,194,1.093,199,1.918,200,1.528,202,1.69,206,0.995,211,1.018,215,1.95,216,1.858,221,0.468,222,0.891,223,0.91,224,0.565,225,1.358,226,0.639,227,0.639,228,0.565,229,0.639,230,0.576,231,0.639,232,0.576,233,0.639,234,0.576,235,1.344,236,1.753,237,0.588,238,0.987,239,0.576,240,0.639,241,0.576,242,0.613,243,0.987,244,0.576,245,0.626,246,0.639,247,0.588,248,1.207,249,0.588,250,0.891,251,0.588,252,0.639,253,0.576,254,0.588,255,0.948,256,0.588,257,0.576,258,0.639,259,0.576,260,0.576,261,0.565,262,0.639,263,0.576,264,0.639,265,0.588,266,0.639,267,0.639,268,0.553,269,0.639,270,0.576,271,0.639,272,0.576,273,0.639,274,0.565,275,0.565,276,0.639,277,0.565,278,0.639,279,0.588,280,0.639,281,0.576,282,0.639,283,1.251,284,1.637,285,0.639,286,0.576,287,0.948,288,0.588,289,0.639,290,0.588,291,0.639,292,0.588,293,0.639,294,0.588,295,0.639,296,0.565,297,0.639,298,0.565,299,0.639,300,0.588,301,0.639,302,0.588,303,0.639,304,0.588,305,0.639,306,0.576,307,0.639,308,0.588,309,0.588,310,0.565,311,0.588,312,0.639,313,0.576,314,0.613,315,0.639,316,0.576,317,0.639,318,0.588,319,1.325,320,0.576,321,0.639,322,0.576,323,0.639,324,0.588,325,0.962,326,0.576,327,0.626,328,0.576,329,0.639,330,0.576,331,0.542,332,0.576,333,0.639,334,0.576,335,0.639,336,0.576,337,0.588,338,0.639,339,0.588,340,0.576,341,0.639,342,0.565,343,0.626,344,0.639,345,0.005,346,0.004,347,0.002,409,2.867,446,1.208,447,1.208,453,1.528,466,1.775,527,1.918,529,1.64,533,1.858,537,3.382,548,1.858,549,1.858,558,1.528,566,1.274,578,1.528,610,1.389,620,1.432,628,3.633,819,2.147,1087,2.258,1225,4.442,1285,1.918,1313,3.337,1351,2.747,1356,1.274,1396,1.521,1520,5.318,1623,4.652,1726,2.285,1733,2.548,1748,2.147,1810,4.135,1821,4.145,1823,3.382,1848,4.652,1869,2.568,1895,3.015,2120,3.686,2123,4.998,2163,1.858,2515,2.058,2616,2.872,2617,1.858,2711,5.03,2750,3.488,2752,3.1,2753,3.222,2755,5.46,2758,4.732,3064,2.35,3141,2.188,3185,2.568,3242,2.568,3249,2.35,3250,5.318,3251,4.998,3268,2.058,3269,2.568,3270,2.568,3271,2.568,3274,8.028,3275,7.348,3276,2.568,3277,3.969,3278,5.476,3279,4.48,3280,5.476,3281,5.476,3282,4.48,3283,6.162,3284,6.162,3285,6.162,3286,5.46,3287,4.998,3288,6.662,3289,5.476,3290,2.898,3291,5.003,3292,4.48,3293,4.48,3294,5.476,3295,5.476,3296,6.567,3297,5.476,3298,5.476,3299,5.476,3300,2.898,3301,4.48,3302,2.898,3303,6.162,3304,4.48,3305,4.48,3306,3.633,3307,2.898,3308,4.48,3309,4.48,3310,4.48,3311,4.48,3312,2.898,3313,2.898,3314,4.48,3315,4.48,3316,4.48,3317,4.48,3318,2.898,3319,2.898,3320,2.898,3321,2.898,3322,2.898,3323,2.898,3324,4.48,3325,2.898,3326,2.898,3327,2.898,3328,2.898,3329,2.898,3330,2.898,3331,2.898,3332,2.568,3333,2.898,3334,2.898,3335,2.898,3336,2.898,3337,2.898,3338,2.568,3339,2.898,3340,7.043,3341,2.898,3342,5.476,3343,7.043,3344,7.344,3345,2.898,3346,2.898,3347,2.898,3348,2.898,3349,2.898,3350,2.898,3351,3.969,3352,4.48,3353,2.898,3354,2.898,3355,2.898,3356,2.898,3357,7.043,3358,2.898,3359,2.898,3360,2.898,3361,2.898,3362,2.898,3363,4.48,3364,4.48,3365,4.48,3366,6.162,3367,4.48,3368,3.969,3369,2.898,3370,2.898,3371,2.898,3372,2.898,3373,2.898,3374,2.568,3375,2.898,3376,2.898,3377,2.898,3378,4.48,3379,2.898]],["title/injectables/MediaService.html",[654,1.225,3291,3.215]],["body/injectables/MediaService.html",[3,0.076,4,0.067,9,0.122,21,0.217,22,0.568,29,0.807,35,2.007,38,0.551,47,2.675,48,4.332,49,1.077,51,1.059,52,0.008,53,0.649,54,0.41,55,0.875,58,1.114,59,1.321,70,1.121,71,1.008,77,2.052,89,0.147,91,0.327,94,1.071,95,2.191,98,0.084,99,0.198,102,1.224,108,1.453,110,1.306,112,1.725,113,1.553,151,1.849,158,4.791,284,1.461,345,0.004,346,0.005,347,0.004,365,2.476,390,2.011,445,1.212,561,1.468,654,1.691,840,1.927,891,3.753,1032,2.128,1069,2.068,1108,2.029,1396,2.002,1408,1.906,1450,3.247,1623,5.777,1777,1.957,1846,6.206,2123,5.068,2428,4.051,2711,6.6,2750,4.949,2752,5.054,2753,5.253,2754,4.051,2757,4.051,2758,6.341,3250,4.718,3251,5.068,3287,6.206,3291,4.438,3332,5.537,3380,4.051,3381,7.119,3382,7.119,3383,7.119,3384,7.119,3385,7.119,3386,7.119,3387,8.011,3388,7.119,3389,7.119,3390,6.249,3391,6.249,3392,4.572,3393,4.572,3394,6.249,3395,4.572,3396,6.249,3397,4.572,3398,4.572,3399,4.572,3400,6.249,3401,6.249,3402,4.572,3403,6.249,3404,4.572,3405,4.572,3406,4.572,3407,4.572,3408,4.572,3409,4.572,3410,4.572,3411,4.572,3412,4.572,3413,4.572,3414,4.572,3415,6.249,3416,6.249,3417,7.119,3418,4.572,3419,4.572,3420,4.572,3421,4.572,3422,4.572,3423,4.572,3424,4.572,3425,4.572,3426,4.572,3427,4.572,3428,4.572,3429,4.572,3430,4.572,3431,4.572,3432,4.572,3433,4.572,3434,6.249,3435,4.572,3436,4.572,3437,4.572,3438,7.119,3439,4.572,3440,4.572,3441,3.708]],["title/components/MemberEditorComponent.html",[0,0.234,286,0.9]],["body/components/MemberEditorComponent.html",[0,0.277,1,0.557,2,0.832,3,0.046,4,0.041,5,0.617,6,0.617,7,0.604,8,0.617,9,0.041,11,0.734,12,1.18,13,0.557,14,1.921,15,1.918,17,0.922,19,0.922,21,0.133,22,0.396,29,0.563,32,1.333,33,1.251,38,0.525,43,2.224,44,3.085,49,1.024,51,0.867,52,0.008,53,0.66,54,0.372,55,0.716,58,0.969,59,1.195,66,1.481,69,2.325,70,1.3,71,1.17,73,2.732,89,0.144,91,0.2,92,0.899,94,0.656,98,0.051,99,0.121,102,1.29,110,0.689,113,1.151,120,1.475,122,0.712,135,1.383,151,1.57,169,1.03,172,1.11,174,2.618,175,0.983,177,1.006,185,1.866,189,1.584,199,1.198,202,1.055,211,1.882,213,1.137,217,3.231,218,1.341,221,0.451,222,0.867,223,0.885,224,0.545,225,1.333,226,0.617,227,0.617,228,0.545,229,0.617,230,0.557,231,0.617,232,1.203,233,0.617,234,1.304,235,1.431,236,1.736,237,0.568,238,0.961,239,0.557,240,0.617,241,0.557,242,0.592,243,0.961,244,0.557,245,0.604,246,0.617,247,0.568,248,1.18,249,0.568,250,0.557,251,0.568,252,0.617,253,0.557,254,0.568,255,0.922,256,0.568,257,0.557,258,0.617,259,0.557,260,0.557,261,0.545,262,0.617,263,0.557,264,0.617,265,0.568,266,0.617,267,0.617,268,0.534,269,0.617,270,0.557,271,0.617,272,0.557,273,0.617,274,0.545,275,0.545,276,0.617,277,0.545,278,0.617,279,0.568,280,0.617,281,0.557,282,0.617,283,0.568,284,0.534,285,0.617,286,1.203,287,1.83,288,0.568,289,0.617,290,0.568,291,0.617,292,0.568,293,0.617,294,0.568,295,0.617,296,0.545,297,0.617,298,0.545,299,0.617,300,0.568,301,0.617,302,0.568,303,0.617,304,0.568,305,0.617,306,0.557,307,0.617,308,0.568,309,0.568,310,0.545,311,0.568,312,0.617,313,0.557,314,0.592,315,0.617,316,0.557,317,0.617,318,0.568,319,0.557,320,0.557,321,0.617,322,0.557,323,0.617,324,0.568,325,0.491,326,0.557,327,1.565,328,0.557,329,0.617,330,0.557,331,0.523,332,0.557,333,0.617,334,0.557,335,0.617,336,0.557,337,0.568,338,1.18,339,0.568,340,0.557,341,0.617,342,0.545,343,0.604,344,0.617,345,0.002,346,0.004,347,0.002,379,0.824,410,2.872,442,0.79,465,2.479,466,1.109,468,1.883,532,1.866,534,1.427,542,2.479,543,1.527,547,4.344,558,3.456,561,1.72,564,1.302,566,1.231,586,1.883,599,2.113,743,1.883,801,2.293,802,2.735,819,1.341,840,1.45,845,2.821,909,2.089,1012,1.527,1095,2.269,1105,1.644,1106,1.972,1108,1.603,1110,1.055,1111,1.341,1112,1.727,1121,1.055,1122,2.647,1123,1.137,1126,0.824,1141,1.383,1142,1.383,1147,1.302,1148,1.265,1149,1.231,1155,1.794,1156,1.584,1157,3.152,1158,2.565,1159,2.479,1165,2.299,1171,1.527,1174,2.269,1175,2.479,1179,2.269,1180,2.113,1181,2.269,1185,1.987,1186,3.605,1197,1.475,1207,1.362,1208,2.269,1209,2.38,1215,2.113,1227,1.883,1245,1.475,1254,2.647,1285,1.866,1301,1.987,1313,1.917,1352,2.479,1371,1.265,1374,7.105,1381,1.341,1401,1.883,1416,2.113,1472,1.987,1473,1.987,1593,2.113,1620,3.708,1696,3.605,1733,1.302,1748,1.341,1783,2.269,1788,1.427,1870,1.584,1993,2.269,1998,5.144,1999,1.987,2164,3.292,2205,1.987,2395,1.883,2615,2.113,2714,3.711,2726,4.949,2727,4.746,2728,4.044,2729,3.711,2730,4.746,2731,4.746,2732,4.746,2733,4.746,2734,4.746,2735,4.746,2736,4.656,2737,3.708,3264,2.269,3442,7.105,3443,5.356,3444,5.356,3445,5.356,3446,5.356,3447,5.356,3448,5.356,3449,4.36,3450,4.36,3451,4.36,3452,4.36,3453,4.36,3454,2.798,3455,4.36,3456,4.905,3457,2.798,3458,2.798,3459,2.798,3460,2.798,3461,2.798,3462,4.36,3463,4.36,3464,4.36,3465,6.047,3466,2.798,3467,3.536,3468,4.36,3469,4.36,3470,2.479,3471,2.798,3472,2.269,3473,2.798,3474,2.798,3475,2.798,3476,2.798,3477,2.798,3478,2.798,3479,2.798,3480,2.798,3481,2.798,3482,2.798,3483,2.798,3484,2.269,3485,2.798,3486,2.798,3487,2.798,3488,2.798,3489,2.798,3490,2.798,3491,2.798,3492,2.798,3493,2.798,3494,2.798,3495,2.798,3496,2.798,3497,2.798,3498,2.798,3499,2.798,3500,2.798,3501,2.798,3502,2.479,3503,2.798,3504,2.798,3505,2.798,3506,2.798,3507,2.798,3508,4.36,3509,3.536,3510,2.798,3511,2.798,3512,4.36,3513,2.798,3514,2.798,3515,2.798,3516,2.798,3517,2.798,3518,6.943,3519,2.479,3520,2.798,3521,2.798,3522,4.36,3523,2.798,3524,2.798,3525,2.479,3526,2.798,3527,4.36,3528,3.536,3529,3.536,3530,6.047,3531,5.808,3532,2.269,3533,2.798,3534,2.479,3535,4.36,3536,3.536,3537,2.798,3538,3.863,3539,2.798,3540,2.479,3541,2.798]],["title/components/MemberSelectorComponent.html",[0,0.234,290,0.919]],["body/components/MemberSelectorComponent.html",[0,0.273,1,0.544,2,0.817,3,0.045,4,0.04,5,0.603,6,0.603,7,0.59,8,0.603,9,0.04,11,0.721,12,1.163,13,0.544,14,1.921,15,1.914,17,0.906,19,0.906,21,0.13,22,0.389,29,0.553,32,1.316,33,0.522,35,1.375,38,0.516,49,1.061,51,0.909,52,0.008,53,0.656,54,0.412,55,0.751,58,1.011,59,1.227,62,4.047,66,0.756,70,1.372,71,1.234,77,1.522,89,0.136,91,0.196,94,0.641,98,0.079,99,0.119,102,0.47,108,1.049,110,1.135,113,1.401,118,1.658,122,1.649,149,1.609,151,0.71,169,1.944,172,1.094,174,1.695,175,0.961,178,1.057,179,2.725,181,1.272,182,1.351,183,1.311,188,1.548,189,1.548,190,1.54,191,1.936,192,1.942,193,2.052,194,1.615,201,1.311,202,2.253,210,2.882,211,1.855,213,1.111,221,0.441,222,0.852,223,0.869,224,0.533,225,1.316,226,0.603,227,0.603,228,0.533,229,0.603,230,0.544,231,0.603,232,0.544,233,0.603,234,0.544,235,1.46,236,1.725,237,0.555,238,0.944,239,0.544,240,0.603,241,0.544,242,0.578,243,0.944,244,0.544,245,0.59,246,0.603,247,0.555,248,1.163,249,0.555,250,0.544,251,0.555,252,0.603,253,0.544,254,0.555,255,0.906,256,0.555,257,0.544,258,0.603,259,0.544,260,0.544,261,0.533,262,0.603,263,0.544,264,0.603,265,0.555,266,0.603,267,0.603,268,0.522,269,0.603,270,0.544,271,0.603,272,0.544,273,0.603,274,0.533,275,0.533,276,0.603,277,0.533,278,0.603,279,0.555,280,0.603,281,0.544,282,0.603,283,0.555,284,0.522,285,0.603,286,0.544,287,1.618,288,0.555,289,0.603,290,1.213,291,0.603,292,0.555,293,0.603,294,0.555,295,0.603,296,0.533,297,0.603,298,0.533,299,0.603,300,0.555,301,0.603,302,0.555,303,0.603,304,0.555,305,0.603,306,0.544,307,0.603,308,0.555,309,0.555,310,0.533,311,0.555,312,0.603,313,0.544,314,0.578,315,0.603,316,0.544,317,0.603,318,0.555,319,1.05,320,0.544,321,0.603,322,0.544,323,0.603,324,0.555,325,0.48,326,0.544,327,0.59,328,0.544,329,0.603,330,0.544,331,0.511,332,0.544,333,0.603,334,0.544,335,0.603,336,0.544,337,0.555,338,0.603,339,0.555,340,0.544,341,0.603,342,0.533,343,0.59,344,0.603,345,0.002,346,0.004,347,0.002,365,1.083,373,1.492,374,3.539,388,2.144,401,2.49,409,2.779,433,2.594,445,0.725,446,1.14,447,1.14,466,1.696,484,4.771,485,3.041,519,3.041,532,1.833,538,1.311,558,3.79,561,2.082,564,1.272,566,1.883,569,2.065,571,2.218,578,1.442,584,1.677,599,2.065,616,2.423,629,2.745,631,2.218,633,1.548,718,1.311,834,3.233,836,1.609,840,1.159,909,2.052,1007,2.882,1087,0.841,1107,1.677,1108,1.583,1122,2.608,1126,0.805,1129,3.233,1145,1.311,1227,1.84,1252,6.459,1254,2.116,1285,1.833,1294,4.509,1313,3.025,1356,1.203,1396,1.14,1475,3.473,1606,6.835,1726,2.184,1733,2.456,1748,2.052,1808,2.745,1839,3.233,1840,4.509,1868,2.065,1882,2.065,1883,3.233,1884,3.233,1958,3.794,1961,2.218,1962,1.84,1996,3.041,1998,3.384,2126,3.794,2163,1.753,2212,2.218,2243,3.794,2568,1.609,2569,2.218,2616,2.745,2617,2.745,2675,2.065,2713,5.434,2714,4.212,2728,2.065,2834,4.677,3140,1.84,3144,2.423,3262,3.794,3264,3.473,3268,1.942,3528,2.218,3529,2.218,3542,7.342,3543,2.218,3544,5.278,3545,4.282,3546,5.278,3547,5.278,3548,5.278,3549,5.278,3550,6.593,3551,5.278,3552,5.278,3553,4.282,3554,5.972,3555,5.972,3556,5.972,3557,4.677,3558,5.278,3559,5.278,3560,5.278,3561,5.278,3562,2.734,3563,4.282,3564,4.282,3565,2.734,3566,2.734,3567,2.734,3568,2.734,3569,4.282,3570,2.734,3571,4.282,3572,2.734,3573,2.734,3574,2.734,3575,2.734,3576,2.734,3577,2.734,3578,2.734,3579,2.734,3580,2.734,3581,2.734,3582,2.734,3583,2.734,3584,2.734,3585,2.734,3586,2.734,3587,2.218,3588,2.734,3589,2.734,3590,4.282,3591,2.734,3592,2.734,3593,2.734,3594,2.734,3595,2.734,3596,4.282,3597,2.734,3598,4.282,3599,5.278,3600,2.734,3601,4.282,3602,5.278,3603,2.734,3604,2.734,3605,2.734,3606,2.734,3607,2.734,3608,2.734,3609,2.734,3610,2.734,3611,5.278,3612,2.734,3613,2.734,3614,2.734,3615,4.282,3616,4.282,3617,4.282,3618,2.734,3619,2.734,3620,2.734,3621,2.734,3622,2.734,3623,2.734,3624,2.218,3625,4.282,3626,2.734,3627,2.734,3628,2.734,3629,4.282,3630,4.282,3631,2.734,3632,2.734,3633,2.734,3634,2.423,3635,2.423,3636,5.972,3637,5.972,3638,4.282,3639,6.877,3640,4.282,3641,4.282,3642,2.218,3643,2.423,3644,2.218,3645,2.734,3646,2.734,3647,2.423,3648,2.734,3649,4.282,3650,2.734]],["title/injectables/MemberStateService.html",[654,1.225,1363,3.215]],["body/injectables/MemberStateService.html",[3,0.116,4,0.103,9,0.103,21,0.332,22,0.744,38,1.045,49,0.963,52,0.008,54,0.347,69,2.217,70,1.256,71,1.13,89,0.15,91,0.501,98,0.128,99,0.303,345,0.006,346,0.007,347,0.006,379,2.062,654,2.217,1032,3.258,1363,5.817,2258,6.555,2684,5.678,3442,7.042,3651,8.19,3652,8.682]],["title/components/MultirangeComponent.html",[0,0.234,292,0.919]],["body/components/MultirangeComponent.html",[0,0.293,1,0.609,2,0.892,3,0.051,4,0.045,5,0.675,6,0.675,7,0.661,8,0.675,9,0.045,11,0.787,12,1.249,13,0.609,14,1.931,15,1.927,17,0.989,19,0.989,21,0.269,22,0.425,29,0.604,32,1.398,33,0.585,35,1.501,38,0.683,49,1.049,51,0.75,52,0.008,53,0.654,54,0.338,55,0.619,58,0.93,59,1.187,62,4.407,70,1.225,71,1.325,77,1.348,80,4.02,81,3.32,83,4.067,89,0.104,90,2.484,91,0.219,98,0.056,99,0.133,102,1.091,103,3.32,108,1.265,110,1.002,113,1.48,118,2.146,122,2.118,135,1.513,151,0.795,169,2.336,172,1.175,174,0.984,175,1.076,177,2.457,178,2.783,179,2.853,181,2.952,182,2.801,183,1.468,184,2.484,185,2.716,190,1.681,194,2.138,196,2.114,199,2.001,200,2.465,201,2.24,202,2.138,206,1.052,211,2.229,212,1.672,213,1.899,216,1.964,221,0.494,222,0.93,223,0.949,224,0.597,225,1.587,226,0.675,227,0.675,228,0.597,229,0.675,230,0.609,231,0.675,232,0.609,233,0.675,234,0.609,235,0.892,236,1.779,237,0.622,238,1.03,239,0.609,240,0.675,241,0.609,242,0.648,243,1.03,244,0.609,245,0.661,246,0.675,247,0.622,248,1.249,249,0.622,250,0.609,251,0.622,252,0.675,253,0.609,254,0.622,255,0.989,256,0.622,257,0.609,258,0.675,259,0.609,260,0.609,261,0.597,262,0.675,263,0.609,264,0.675,265,0.622,266,0.675,267,0.675,268,0.585,269,0.675,270,0.609,271,0.675,272,0.609,273,0.675,274,0.597,275,0.597,276,0.675,277,0.597,278,0.675,279,0.622,280,0.675,281,0.609,282,0.675,283,0.622,284,0.585,285,0.675,286,0.609,287,0.989,288,0.622,289,0.675,290,0.622,291,0.675,292,1.288,293,0.675,294,0.622,295,0.675,296,0.597,297,0.675,298,0.597,299,0.675,300,0.622,301,0.675,302,0.622,303,0.675,304,0.622,305,0.675,306,0.609,307,0.675,308,0.622,309,0.622,310,0.597,311,0.622,312,0.675,313,0.609,314,0.648,315,0.675,316,0.609,317,0.675,318,0.622,319,0.609,320,0.609,321,0.675,322,0.609,323,0.675,324,0.622,325,0.538,326,0.609,327,0.661,328,0.609,329,0.675,330,0.609,331,0.573,332,0.609,333,0.675,334,0.609,335,0.675,336,0.609,337,0.622,338,0.675,339,0.622,340,0.609,341,0.675,342,0.597,343,0.661,344,0.675,345,0.003,346,0.004,347,0.003,364,1.311,466,2.513,510,2.175,527,2.716,529,2.646,532,3.083,533,2.997,534,2.384,543,1.672,555,3.815,556,2.061,557,1.964,558,2.989,561,2.313,574,3.476,584,1.878,595,2.714,596,2.714,610,2.24,620,1.513,633,2.646,950,2.714,1034,1.878,1225,2.484,1285,2.001,1309,2.714,1313,3.005,1356,1.347,1477,2.061,1541,2.176,1726,2.384,1733,2.638,1748,2.24,1960,2.484,2116,1.878,2138,4.142,2163,1.964,2357,3.32,2517,4.28,2521,1.964,2523,2.176,2624,2.484,2743,2.484,2813,3.791,2816,2.484,3066,2.484,3250,5.437,3277,2.714,3540,4.142,3647,2.714,3653,2.714,3654,4.675,3655,4.675,3656,4.675,3657,5.669,3658,4.675,3659,5.669,3660,5.669,3661,5.669,3662,5.669,3663,6.344,3664,6.344,3665,4.675,3666,6.832,3667,5.669,3668,5.669,3669,6.344,3670,3.063,3671,3.063,3672,3.063,3673,3.063,3674,4.675,3675,3.063,3676,3.063,3677,3.063,3678,3.063,3679,6.344,3680,3.063,3681,7.49,3682,3.063,3683,4.675,3684,3.063,3685,4.675,3686,3.063,3687,3.063,3688,3.063,3689,3.063,3690,3.063,3691,3.063,3692,3.063,3693,3.063,3694,3.063,3695,3.063,3696,3.063,3697,3.063,3698,3.063,3699,3.063,3700,3.063,3701,3.063,3702,3.063,3703,6.344,3704,3.063,3705,6.832,3706,3.063,3707,6.344,3708,3.063,3709,4.675,3710,6.832,3711,6.344,3712,3.063,3713,4.675,3714,6.344,3715,3.063,3716,3.063,3717,3.063,3718,4.675,3719,7.201,3720,3.063,3721,3.063,3722,3.063,3723,3.063,3724,3.063,3725,3.063,3726,2.714,3727,2.484,3728,3.063,3729,3.063,3730,3.063,3731,7.49,3732,4.142,3733,3.063,3734,2.714,3735,4.79,3736,4.675,3737,6.344,3738,3.063,3739,4.675,3740,3.063,3741,2.714,3742,2.714,3743,3.063,3744,3.063,3745,4.675,3746,4.675,3747,3.063,3748,3.063,3749,3.063,3750,4.675,3751,3.063,3752,3.063,3753,3.063,3754,3.063,3755,3.063,3756,2.714]],["title/injectables/MyHammerConfig.html",[654,1.225,711,3.417]],["body/injectables/MyHammerConfig.html",[2,0.897,3,0.078,4,0.069,9,0.069,15,0.954,21,0.223,29,0.823,40,2.252,41,4.522,48,4.088,49,0.552,51,0.621,52,0.008,53,0.381,54,0.233,55,0.513,56,2.125,58,0.607,69,1.272,89,0.174,91,0.336,92,1.509,95,2.252,98,0.142,99,0.276,102,1.095,110,1.14,118,2.541,151,1.653,222,0.935,223,0.954,228,1.407,268,1.215,275,1.241,277,1.241,296,1.241,298,1.241,345,0.004,346,0.005,347,0.004,348,1.916,350,2.522,351,2.067,352,2.187,353,2.187,354,1.959,362,2.879,367,2.726,368,2.726,370,2.067,371,3.146,376,3.248,377,3.475,378,3.146,379,1.384,431,2.587,443,3.548,444,3.548,446,2.655,447,1.959,449,2.882,450,3.548,451,3.812,455,3.812,461,3.548,478,3.163,505,3.812,515,3.548,568,3.013,634,3.163,640,4.285,641,4.285,642,4.285,643,4.285,644,3.548,645,4.164,646,4.164,647,4.807,648,3.812,649,4.164,650,6.398,651,5.642,652,4.082,653,5.642,654,1.723,655,5.642,656,5.856,657,5.642,658,4.164,659,4.164,660,4.164,661,3.548,662,3.548,663,3.812,664,5.642,665,4.164,666,3.812,667,4.807,668,4.164,669,3.338,670,4.807,671,3.338,672,2.478,673,3.812,674,3.548,675,3.475,676,5.642,677,3.746,678,3.904,679,4.082,680,4.522,681,4.285,682,4.164,683,4.164,684,4.164,685,4.164,686,4.164,687,3.548,688,4.164,689,4.164,690,4.164,691,3.548,692,3.812,693,3.812,694,3.812,695,3.812,696,4.164,697,3.812,698,4.164,699,3.812,700,4.164,701,4.428,702,4.164,703,3.812,704,4.164,705,4.164,706,4.164,707,5.452,708,3.357,709,4.164,710,4.164,711,5.452,712,3.146,713,5.642,714,6.398,715,5.642,716,4.164,717,4.164,718,2.252,719,4.164,720,4.164,721,4.164,722,4.164,723,4.164,724,4.164,725,4.759,726,3.812,727,3.548,728,3.812,729,4.164,730,4.164,731,4.164,732,4.164,733,4.164,734,4.164,735,4.164,736,4.164,737,4.164,738,4.164,739,4.164,740,4.164,741,4.164,742,4.164,743,3.163,744,4.164,745,3.163,746,6.398,747,4.285,748,4.164,749,3.548,750,4.164,751,4.164,1032,2.187,3757,6.367,3758,4.7]],["title/pipes/OrderByPipe.html",[672,2.386,3759,3.215]],["body/pipes/OrderByPipe.html",[3,0.109,4,0.097,9,0.097,11,1.114,13,1.316,29,0.855,49,0.778,51,0.875,52,0.008,53,0.686,54,0.328,55,0.722,58,0.855,89,0.121,91,0.473,98,0.121,99,0.287,102,1.362,108,1.489,110,1.388,122,1.683,345,0.006,346,0.007,347,0.006,561,2.822,574,4.057,672,4.176,1408,2.758,2568,3.893,3081,6.876,3643,7.018,3759,5.626,3760,4.995,3761,7.018,3762,5.862,3763,7.92,3764,7.92,3765,6.615,3766,8.478,3767,7.018,3768,6.615,3769,5.862,3770,6.615,3771,6.615,3772,6.615,3773,6.615,3774,6.615]],["title/interfaces/ParticipantCache.html",[2248,0.778,3775,3.671]],["body/interfaces/ParticipantCache.html",[0,0.235,3,0.049,4,0.043,9,0.043,11,0.497,12,1.001,14,0.599,15,0.599,17,0.624,19,0.624,21,0.263,22,0.413,26,1.891,27,1.986,32,0.65,38,0.355,40,2.177,52,0.008,54,0.308,56,1.334,62,2.673,66,1.857,68,2.095,69,2.263,77,2.257,80,1.736,89,0.155,91,0.211,93,1.113,94,0.691,96,1.809,98,0.054,99,0.128,102,1.22,107,1.373,108,1.375,110,1.387,113,1.45,117,5.448,118,2.11,122,1.582,126,4.418,151,1.438,158,1.986,168,3.988,171,1.61,172,1.47,174,0.947,244,0.587,245,1.196,260,0.904,261,0.885,272,0.587,325,0.798,331,1.036,345,0.002,346,0.004,347,0.002,379,0.869,388,1.846,401,1.23,408,2.309,409,2.114,420,3.226,422,6.549,431,1.846,433,1.713,445,0.782,446,1.23,447,1.23,459,2.393,466,1.169,491,6.035,501,4.908,502,4.908,523,2.393,546,2.227,561,2.278,564,1.373,614,4.492,708,1.555,743,1.986,804,2.673,819,2.654,840,0.799,845,1.199,886,1.67,908,1.736,909,2.177,910,1.986,911,1.986,1034,1.809,1087,2.181,1103,1.298,1108,1.204,1121,1.113,1123,1.846,1126,0.869,1131,6.483,1132,3.023,1134,2.912,1140,4.908,1143,1.505,1145,1.414,1164,1.986,1207,0.75,1301,2.095,1315,1.986,1393,1.713,1396,1.196,1403,4.125,1405,3.259,1407,5.126,1421,4.023,1426,1.736,1445,4.492,1490,5.045,1512,1.891,1542,1.61,1588,3.259,1612,2.227,1618,2.614,1619,2.614,1621,2.614,1622,3.684,1623,3.429,1631,1.809,1632,2.785,1679,3.684,1690,5.25,1691,4.739,1693,1.986,1711,3.728,1712,3.429,1714,2.614,1777,1.944,1886,4.418,1942,1.809,1949,1.986,1950,2.227,1987,2.095,2008,1.986,2119,1.61,2173,3.226,2207,3.934,2208,2.614,2234,2.614,2248,0.507,2250,1.013,2268,1.986,2293,3.023,2588,1.891,2591,1.809,2592,1.891,2646,2.393,2749,1.891,2750,1.67,2752,1.67,2753,1.736,2767,1.809,2777,1.891,2780,2.393,2782,2.095,2783,2.227,2784,2.227,2785,1.986,2786,1.986,2818,5.754,2836,4.025,2900,2.614,2935,2.393,3023,2.393,3100,2.227,3244,2.227,3286,2.614,3291,3.934,3338,2.614,3351,2.614,3374,2.614,3509,2.393,3775,4.492,3776,2.614,3777,5.512,3778,2.95,3779,4.542,3780,4.182,3781,2.95,3782,2.95,3783,2.95,3784,2.614,3785,2.95,3786,2.95,3787,2.95,3788,2.614,3789,2.95,3790,2.95,3791,6.221,3792,2.95,3793,2.95,3794,2.95,3795,2.95,3796,2.95,3797,2.95,3798,2.95,3799,2.95,3800,2.95,3801,2.95,3802,2.95,3803,2.95,3804,2.95,3805,2.95,3806,2.95,3807,2.95,3808,6.717,3809,2.95,3810,2.95,3811,2.95,3812,2.95,3813,4.542,3814,2.95,3815,2.95,3816,2.95,3817,2.95,3818,2.95,3819,2.95,3820,2.95,3821,2.95,3822,5.045,3823,2.95,3824,2.95,3825,2.614,3826,4.542,3827,2.95,3828,2.95,3829,2.95,3830,2.95,3831,2.95,3832,2.95,3833,2.95,3834,2.95,3835,2.614,3836,2.95,3837,2.95,3838,2.95,3839,2.95,3840,2.95,3841,2.95,3842,2.95,3843,2.95,3844,2.95,3845,2.95,3846,2.95,3847,2.95,3848,2.95,3849,2.614,3850,6.221,3851,2.95,3852,4.542,3853,2.95,3854,5.538,3855,2.95,3856,2.95,3857,2.95,3858,5.754,3859,2.614,3860,4.542,3861,4.542,3862,4.492,3863,2.95,3864,3.934,3865,2.95,3866,2.95,3867,4.542,3868,2.95,3869,2.95,3870,2.95,3871,2.95,3872,2.95,3873,2.95,3874,2.95,3875,2.95,3876,2.95,3877,2.95,3878,2.95,3879,2.95,3880,2.95,3881,2.95,3882,2.95,3883,4.542,3884,2.95,3885,2.95,3886,2.95,3887,2.95,3888,2.95,3889,2.95,3890,2.95,3891,2.95,3892,2.95,3893,2.95,3894,2.95,3895,2.95,3896,2.393,3897,2.95,3898,6.221,3899,2.95,3900,2.95,3901,2.95,3902,2.95,3903,2.95,3904,2.95,3905,5.538,3906,2.95,3907,2.95,3908,2.95,3909,2.95,3910,2.95,3911,2.95,3912,2.95,3913,2.95,3914,2.95,3915,2.95,3916,2.95,3917,2.95,3918,2.95,3919,2.95,3920,2.95,3921,2.95,3922,2.95]],["title/components/PasswordComponent.html",[0,0.234,294,0.919]],["body/components/PasswordComponent.html",[0,0.332,1,0.752,2,1.044,3,0.062,4,0.056,5,0.833,6,0.833,7,0.816,8,0.833,9,0.056,11,0.921,12,1.415,13,0.752,14,1.95,15,1.947,17,1.157,19,1.157,21,0.179,22,0.497,29,0.706,32,1.55,33,1.425,38,0.455,43,2.789,44,3.589,49,0.966,51,0.5,52,0.008,53,0.604,54,0.37,55,0.413,58,0.909,59,1.059,66,1.511,69,1.738,73,3.275,89,0.129,91,0.27,92,1.214,98,0.069,99,0.164,102,0.65,110,1.014,112,1.426,113,0.664,118,1.188,120,1.993,172,1.331,174,2.729,199,2.34,218,3.372,219,3.505,221,0.61,222,1.087,223,1.11,224,0.737,225,1.55,226,0.833,227,0.833,228,0.737,229,0.833,230,0.752,231,0.833,232,0.752,233,0.833,234,0.752,235,1.044,236,1.873,237,0.768,238,1.205,239,0.752,240,0.833,241,0.752,242,0.8,243,1.205,244,0.752,245,0.816,246,0.833,247,0.768,248,1.415,249,0.768,250,0.752,251,0.768,252,0.833,253,0.752,254,0.768,255,1.157,256,0.768,257,0.752,258,0.833,259,0.752,260,0.752,261,0.737,262,0.833,263,0.752,264,0.833,265,0.768,266,0.833,267,0.833,268,0.722,269,0.833,270,0.752,271,0.833,272,0.752,273,0.833,274,0.737,275,0.737,276,0.833,277,0.737,278,0.833,279,0.768,280,0.833,281,0.752,282,0.833,283,0.768,284,0.722,285,0.833,286,0.752,287,1.157,288,0.768,289,0.833,290,0.768,291,0.833,292,0.768,293,0.833,294,1.429,295,0.833,296,0.737,297,0.833,298,0.737,299,0.833,300,0.768,301,0.833,302,0.768,303,0.833,304,0.768,305,0.833,306,0.752,307,0.833,308,0.768,309,0.768,310,0.737,311,0.768,312,0.833,313,0.752,314,0.8,315,0.833,316,0.752,317,0.833,318,0.768,319,0.752,320,0.752,321,0.833,322,0.752,323,0.833,324,0.768,325,0.664,326,0.752,327,0.816,328,0.752,329,0.833,330,0.752,331,0.707,332,0.752,333,0.833,334,0.752,335,0.833,336,0.752,337,0.768,338,0.833,339,0.768,340,0.752,341,0.833,342,0.737,343,0.816,344,0.833,345,0.003,346,0.005,347,0.003,379,1.113,466,2.166,840,1.738,938,2.686,1087,1.162,1105,2.062,1106,2.472,1108,1.865,1110,1.426,1111,1.812,1112,2.166,1121,1.426,1126,1.113,1147,1.759,1148,1.71,1149,1.663,1165,2.882,1171,2.064,1186,3.679,1197,1.993,1209,3.505,1245,1.993,1616,3.505,1620,4.314,1631,4.577,1632,4.577,1691,2.424,1696,4.322,1764,4.434,1972,3.352,2390,4.434,2591,4.771,2592,4.511,2811,5.748,2902,4.128,3923,3.35,3924,6.421,3925,5.467,3926,6.234,3927,5.467,3928,3.781,3929,3.781,3930,3.781,3931,5.69,3932,3.781,3933,3.781,3934,3.781,3935,4.434,3936,4.844,3937,4.844,3938,3.35,3939,3.781,3940,4.844,3941,3.067,3942,2.855,3943,3.35,3944,3.35,3945,3.35,3946,3.35,3947,3.35,3948,3.35,3949,3.781,3950,3.781,3951,3.35,3952,3.781,3953,3.781,3954,3.781,3955,3.781,3956,3.781,3957,7.036,3958,6.234,3959,5.467,3960,5.467,3961,4.844,3962,5.467,3963,5.467,3964,4.128,3965,4.844,3966,4.844,3967,4.844,3968,4.128,3969,4.844,3970,4.844,3971,5.467,3972,5.467,3973,4.844,3974,4.844,3975,4.844,3976,4.844]],["title/components/RegisterComponent.html",[0,0.234,296,0.882]],["body/components/RegisterComponent.html",[0,0.308,1,0.664,2,0.952,3,0.055,4,0.049,5,0.735,6,0.735,7,0.72,8,0.735,9,0.049,11,0.84,12,1.316,13,0.664,14,1.939,15,1.936,17,1.055,19,1.055,21,0.158,22,0.453,29,0.644,32,1.46,33,0.637,35,1.601,38,0.6,43,3.046,44,3.379,45,2.823,46,3.175,49,0.953,51,0.659,52,0.008,53,0.656,54,0.402,55,0.544,58,0.772,59,0.822,69,1.616,70,0.894,71,0.805,73,3.046,77,0.962,89,0.151,91,0.239,92,1.071,97,1.759,98,0.091,99,0.145,102,0.574,108,0.876,110,1.046,113,1.307,116,1.759,120,1.759,122,1.519,125,3.197,162,3.197,169,1.229,172,1.237,174,1.918,175,1.172,177,2.148,178,1.289,190,2.148,191,1.509,194,1.258,199,2.135,202,1.258,203,2.37,206,1.146,215,2.245,218,1.599,219,3.197,221,0.538,222,0.992,223,1.012,224,0.65,225,1.46,226,0.735,227,0.735,228,0.65,229,0.735,230,0.664,231,0.735,232,0.664,233,0.735,234,0.664,235,1.716,236,1.818,237,0.677,238,1.099,239,0.664,240,0.735,241,0.664,242,0.706,243,1.099,244,0.664,245,0.72,246,0.735,247,0.677,248,1.316,249,0.677,250,0.664,251,0.677,252,0.735,253,0.664,254,0.677,255,1.055,256,0.677,257,0.664,258,0.735,259,0.664,260,0.664,261,0.65,262,0.735,263,0.664,264,0.735,265,0.677,266,0.735,267,0.735,268,0.637,269,0.735,270,0.664,271,0.735,272,0.664,273,0.735,274,0.65,275,0.65,276,0.735,277,0.65,278,0.735,279,0.677,280,0.735,281,0.664,282,0.735,283,0.677,284,0.952,285,0.735,286,0.664,287,1.055,288,0.677,289,0.735,290,0.677,291,0.735,292,0.677,293,0.735,294,0.677,295,0.735,296,1.291,297,0.735,298,0.65,299,0.735,300,0.677,301,0.735,302,0.677,303,0.735,304,0.677,305,0.735,306,0.664,307,0.735,308,0.677,309,0.677,310,0.65,311,0.677,312,0.735,313,0.664,314,0.706,315,0.735,316,0.664,317,0.735,318,0.677,319,0.664,320,0.664,321,0.735,322,0.664,323,0.735,324,0.677,325,1.245,326,0.664,327,0.72,328,0.664,329,0.735,330,0.664,331,1.326,332,0.664,333,0.735,334,0.664,335,0.735,336,0.664,337,0.677,338,0.735,339,0.677,340,0.664,341,0.735,342,0.65,343,0.72,344,0.735,345,0.003,346,0.004,347,0.003,409,3.083,410,3.055,431,2.426,442,0.942,446,1.391,447,1.391,466,2.365,485,3.542,517,3.197,519,6.244,528,2.046,530,1.889,538,1.599,553,1.889,566,1.467,718,1.599,725,3.898,804,3.898,840,1.616,910,2.245,911,2.245,938,2.37,994,2.956,1000,2.37,1096,2.956,1108,1.756,1123,2.692,1126,0.982,1129,2.519,1197,1.759,1207,0.849,1209,4.061,1219,4.044,1254,2.464,1356,1.467,1381,1.599,1469,4.212,1567,2.956,1693,2.245,1788,2.543,1808,3.828,1821,3.513,1870,1.889,1917,2.956,2390,5.373,2396,3.356,2534,4.044,2591,4.562,2592,4.247,2729,3.75,2745,3.542,2811,4.944,2812,2.956,2814,6.23,2819,5.373,2822,3.542,2824,4.705,3016,3.765,3100,4.508,3115,5.373,3133,5.87,3134,2.706,3154,3.765,3306,4.044,3368,2.956,3587,2.706,3935,4.044,3940,5.291,3941,2.706,3942,2.519,3943,2.956,3944,2.956,3958,4.418,3964,5.002,3965,4.418,3966,4.418,3967,5.87,3968,3.765,3969,4.418,3970,4.418,3973,4.418,3974,4.418,3975,4.418,3976,4.418,3977,2.706,3978,5.971,3979,4.986,3980,5.971,3981,4.986,3982,3.336,3983,4.986,3984,3.336,3985,3.336,3986,4.986,3987,3.336,3988,3.336,3989,3.336,3990,3.336,3991,3.336,3992,3.336,3993,3.336,3994,3.336,3995,3.336,3996,3.336,3997,2.519,3998,3.336,3999,3.336,4000,2.956,4001,3.336,4002,3.336,4003,3.336,4004,3.336,4005,3.336,4006,3.336,4007,3.336,4008,3.336,4009,2.956,4010,2.956,4011,3.336,4012,5.002,4013,4.986,4014,4.986,4015,4.986,4016,4.418,4017,4.418,4018,4.044,4019,4.044,4020,3.542,4021,4.044,4022,4.418,4023,4.418,4024,3.336]],["title/components/ResetComponent.html",[0,0.234,298,0.882]],["body/components/ResetComponent.html",[0,0.349,1,0.822,2,1.112,3,0.068,4,0.061,5,0.911,6,0.911,7,0.893,8,0.911,9,0.061,11,0.981,12,1.487,13,0.822,14,1.957,15,1.955,17,1.233,19,1.233,21,0.196,22,0.529,29,0.753,32,1.615,33,0.789,38,0.498,43,2.972,44,3.737,49,0.908,51,0.547,52,0.008,53,0.625,54,0.289,55,0.451,58,0.872,59,0.96,69,2.091,73,3.442,89,0.147,91,0.296,92,1.328,98,0.076,99,0.179,102,0.711,110,1.066,112,1.559,113,1.023,118,1.299,120,2.18,122,1.052,169,1.522,172,1.398,175,1.453,177,2.427,178,1.598,190,2.096,194,1.559,206,1.42,218,3.702,221,0.667,222,1.159,223,1.183,224,0.806,225,1.615,226,0.911,227,0.911,228,0.806,229,0.911,230,0.822,231,0.911,232,0.822,233,0.911,234,0.822,235,1.112,236,1.91,237,0.839,238,1.284,239,0.822,240,0.911,241,0.822,242,0.875,243,1.284,244,0.822,245,0.893,246,0.911,247,0.839,248,1.487,249,0.839,250,0.822,251,0.839,252,0.911,253,0.822,254,0.839,255,1.233,256,0.839,257,0.822,258,0.911,259,0.822,260,0.822,261,0.806,262,0.911,263,0.822,264,0.911,265,0.839,266,0.911,267,0.911,268,0.789,269,0.911,270,0.822,271,0.911,272,0.822,273,0.911,274,0.806,275,0.806,276,0.911,277,0.806,278,0.911,279,0.839,280,0.911,281,0.822,282,0.911,283,0.839,284,1.112,285,0.911,286,0.822,287,1.233,288,0.839,289,0.911,290,0.839,291,0.911,292,0.839,293,0.911,294,0.839,295,0.911,296,0.806,297,0.911,298,1.428,299,0.911,300,0.839,301,0.911,302,0.839,303,0.911,304,0.839,305,0.911,306,0.822,307,0.911,308,0.839,309,0.839,310,0.806,311,0.839,312,0.911,313,0.822,314,0.875,315,0.911,316,0.822,317,0.911,318,0.839,319,0.822,320,0.822,321,0.911,322,0.822,323,0.911,324,0.839,325,0.726,326,0.822,327,0.893,328,0.822,329,0.911,330,0.822,331,0.773,332,0.822,333,0.911,334,0.822,335,0.911,336,0.822,337,0.839,338,0.911,339,0.839,340,0.822,341,0.911,342,0.806,343,0.893,344,0.911,345,0.003,346,0.005,347,0.003,364,3.709,379,1.217,410,3.263,442,1.167,517,3.736,528,2.535,530,2.34,553,2.34,718,1.981,840,1.827,1000,2.936,1087,1.271,1108,1.942,1126,1.217,1171,2.256,1186,3.922,1197,2.18,1235,2.34,1351,3.573,1356,1.818,1808,4.326,2729,2.34,2811,3.736,3118,3.353,3134,3.353,3926,6.492,3931,5.979,3935,4.726,3936,5.163,3937,5.163,3938,3.663,3941,3.353,3942,3.121,3945,3.663,3946,3.663,3947,3.663,3948,3.663,3964,4.399,3997,3.121,4012,4.399,4020,4.139,4025,3.663,4026,6.748,4027,5.827,4028,5.827,4029,4.134,4030,4.134,4031,4.134,4032,5.827,4033,5.827,4034,4.134,4035,4.134,4036,4.134,4037,4.134,4038,4.134,4039,5.827]],["title/interfaces/RoleData.html",[1569,3.046,2248,0.778]],["body/interfaces/RoleData.html",[3,0.108,4,0.096,9,0.096,11,1.099,21,0.31,22,0.714,52,0.008,54,0.324,77,1.883,89,0.16,91,0.467,93,2.463,94,1.53,98,0.144,99,0.283,102,1.352,110,1.241,345,0.005,346,0.007,347,0.005,390,2.872,408,3.515,410,3.34,442,1.843,654,2.127,708,4.143,761,5.289,805,4.638,1000,4.638,1001,4.93,1002,5.296,1069,2.953,1083,5.296,1084,6.374,1085,6.374,1087,2.007,1123,3.845,1132,3.564,1568,4.395,1569,5.289,2248,1.123,2250,2.243,2971,4.638,3155,5.296,4040,5.296,4041,5.296,4042,5.786,4043,5.786,4044,5.786,4045,5.786]],["title/guards/RoleGuard.html",[1077,3.215,1568,3.046]],["body/guards/RoleGuard.html",[3,0.104,4,0.092,9,0.092,11,1.057,21,0.298,29,0.992,38,0.756,49,0.902,51,1.015,52,0.008,53,0.621,54,0.38,55,0.838,58,0.811,77,1.81,89,0.158,91,0.449,93,2.368,94,1.471,98,0.141,99,0.272,102,1.32,110,1.212,345,0.005,346,0.006,347,0.005,390,2.761,408,3.803,410,3.569,442,1.772,654,2.077,708,4.046,761,5.81,800,4.459,801,2.687,805,5.887,1000,4.459,1001,4.74,1002,5.092,1069,2.839,1078,4.74,1083,6.224,1084,7.002,1085,7.002,1087,2.359,1123,3.706,1132,3.427,1568,5.165,1569,4.225,2248,1.08,2971,4.459,3155,5.092,4040,6.722,4041,5.092,4042,5.563,4043,5.563,4044,5.563,4045,5.563,4046,6.278,4047,6.278]],["title/injectables/SEOService.html",[46,2.169,654,1.225]],["body/injectables/SEOService.html",[3,0.096,4,0.085,7,1.724,9,0.085,21,0.274,29,0.942,38,0.696,46,3.494,49,0.939,51,1.056,52,0.008,53,0.647,54,0.396,55,0.872,56,2.615,58,0.942,59,0.953,89,0.146,91,0.414,98,0.106,99,0.251,102,1.442,108,1.607,110,0.913,112,2.181,113,1.281,153,4.818,345,0.005,346,0.006,347,0.005,370,2.543,390,2.543,466,3.164,534,4.503,652,3.707,654,1.974,1032,2.69,1034,4.471,1045,6.801,1060,3.891,1069,2.615,1391,5.914,1408,3.04,1520,6.908,2360,4.689,2582,6.366,3186,7.822,3769,7.822,4048,5.123,4049,7.291,4050,7.291,4051,5.782,4052,5.782,4053,7.291,4054,5.782,4055,7.291,4056,5.782,4057,5.123,4058,5.782,4059,5.782,4060,8.827,4061,5.782,4062,5.123,4063,5.782,4064,4.689,4065,5.782,4066,5.782,4067,5.782,4068,5.782,4069,7.986,4070,5.782,4071,5.782,4072,5.782,4073,5.782,4074,5.782,4075,5.782,4076,5.782,4077,5.782]],["title/components/SaveButtonComponent.html",[0,0.234,302,0.919]],["body/components/SaveButtonComponent.html",[0,0.332,1,0.754,2,1.045,3,0.063,4,0.056,5,0.835,6,0.835,7,0.818,8,0.835,9,0.056,11,0.922,12,1.417,13,0.754,14,1.95,15,1.948,17,1.158,19,1.158,21,0.18,22,0.497,29,0.708,32,1.552,33,1.623,38,0.456,47,1.622,49,1,51,0.501,52,0.008,53,0.605,54,0.319,55,0.414,58,0.831,59,1.06,70,1.396,71,1.256,77,2.414,89,0.147,91,0.271,98,0.069,99,0.164,112,1.429,113,0.666,118,1.191,122,1.393,172,1.333,174,2.065,175,1.332,177,1.97,179,1.501,181,3.476,182,2.706,183,1.816,185,2.752,187,2.23,188,2.145,202,1.429,206,1.881,211,1.924,213,2.225,221,0.611,222,1.089,223,1.112,224,0.738,225,1.552,226,0.835,227,0.835,228,0.738,229,0.835,230,0.754,231,0.835,232,0.754,233,0.835,234,0.754,235,1.045,236,1.874,237,0.769,238,1.207,239,0.754,240,0.835,241,0.754,242,0.802,243,1.207,244,0.754,245,0.818,246,0.835,247,0.769,248,1.417,249,0.769,250,0.754,251,0.769,252,0.835,253,0.754,254,0.769,255,1.158,256,0.769,257,0.754,258,0.835,259,0.754,260,0.754,261,0.738,262,0.835,263,0.754,264,0.835,265,0.769,266,0.835,267,0.835,268,0.723,269,0.835,270,0.754,271,0.835,272,0.754,273,0.835,274,0.738,275,0.738,276,0.835,277,0.738,278,0.835,279,0.769,280,0.835,281,0.754,282,0.835,283,0.769,284,0.723,285,0.835,286,0.754,287,1.158,288,0.769,289,0.835,290,0.769,291,0.835,292,0.769,293,0.835,294,0.769,295,0.835,296,0.738,297,0.835,298,0.738,299,0.835,300,0.769,301,0.835,302,1.43,303,0.835,304,0.769,305,0.835,306,0.754,307,0.835,308,0.769,309,0.769,310,0.738,311,0.769,312,0.835,313,0.754,314,0.802,315,0.835,316,0.754,317,0.835,318,0.769,319,0.754,320,0.754,321,0.835,322,0.754,323,0.835,324,0.769,325,0.666,326,0.754,327,0.818,328,0.754,329,0.835,330,0.754,331,0.709,332,0.754,333,0.835,334,0.754,335,0.835,336,0.754,337,0.769,338,0.835,339,0.769,340,0.754,341,0.835,342,0.738,343,0.818,344,0.835,345,0.003,346,0.005,347,0.003,388,2.612,401,2.936,409,3.277,433,2.425,445,1.005,446,1.58,447,1.58,509,3.358,527,2.752,532,3.015,534,1.933,565,2.43,566,2.408,574,2.324,578,2.887,586,2.55,590,2.55,610,1.816,612,3.1,620,2.706,632,5.702,806,5.003,897,2.55,912,5.215,913,3.073,949,6.511,962,3.073,979,6.241,1044,3.358,1103,2.828,1143,1.933,1144,2.068,1145,2.624,1285,2.344,1313,2.828,1356,1.667,1728,5.003,1748,1.816,2163,2.43,2214,3.073,2414,2.861,2521,4.122,2522,3.358,2523,2.692,2591,2.324,2592,2.43,2593,3.073,2628,3.889,2633,2.861,2689,3.358,2695,3.358,2696,3.358,2962,5.215,3137,3.073,3140,2.55,3268,2.692,3536,5.215,4078,7.63,4079,6.984,4080,3.358,4081,6.43,4082,5.476,4083,6.43,4084,6.43,4085,3.789,4086,5.476,4087,5.476,4088,5.476,4089,3.789,4090,3.789,4091,3.789,4092,3.789,4093,3.789,4094,3.789,4095,3.789,4096,3.789,4097,4.441,4098,3.789,4099,3.789,4100,3.789,4101,3.789,4102,3.789,4103,6.43,4104,5.476,4105,3.789,4106,5.476,4107,3.789]],["title/injectables/ScheduleService.html",[654,1.225,3780,3.417]],["body/injectables/ScheduleService.html",[3,0.079,4,0.07,9,0.07,21,0.226,22,0.584,29,0.831,38,0.574,42,4.106,49,1.006,51,1.03,52,0.008,53,0.631,54,0.431,55,0.85,58,0.94,69,1.291,70,0.856,71,0.77,77,1.375,89,0.154,91,0.341,94,1.118,98,0.087,99,0.207,102,1.558,108,0.838,110,1.393,112,1.799,121,5.901,122,1.981,123,6.447,153,3.971,168,4.993,325,1.368,345,0.004,346,0.005,347,0.004,390,2.098,453,2.515,466,1.89,561,2.337,654,1.741,834,3.602,847,4.227,886,2.701,896,4.856,909,3.083,1032,2.22,1069,2.157,1087,1.977,1381,2.286,1393,3.363,1396,1.808,1403,4.37,1405,2.807,1407,5.338,1421,3.391,1422,6.447,1426,2.807,1437,5.699,1445,5.901,1588,5.037,1679,3.869,1711,3.211,1830,4.568,1886,4.568,2782,4.568,2786,5.637,2803,5.217,2804,3.869,3179,3.602,3234,4.227,3777,5.699,3780,4.856,3825,4.227,3835,5.699,3858,5.217,3859,4.227,3896,3.869,4108,4.227,4109,6.432,4110,6.432,4111,6.432,4112,8.82,4113,4.771,4114,6.432,4115,4.771,4116,6.432,4117,4.771,4118,4.771,4119,6.432,4120,4.771,4121,4.771,4122,4.771,4123,4.771,4124,5.699,4125,6.432,4126,4.771,4127,6.432,4128,6.432,4129,4.771,4130,4.771,4131,4.771,4132,4.771,4133,6.432,4134,7.787,4135,4.771,4136,6.432,4137,4.771,4138,4.771,4139,4.771,4140,7.276,4141,4.771,4142,4.771,4143,4.771,4144,7.276,4145,6.432,4146,6.432,4147,4.771,4148,6.432,4149,4.771,4150,4.771,4151,4.771,4152,4.771,4153,4.771,4154,4.771,4155,4.227,4156,4.771,4157,4.771,4158,4.771,4159,4.771]],["title/classes/ScoreContainer.html",[99,0.196,2768,3.215]],["body/classes/ScoreContainer.html",[3,0.104,4,0.093,9,0.093,11,1.293,21,0.298,22,0.697,35,2.466,38,0.757,49,1.059,51,0.831,52,0.008,53,0.509,54,0.428,55,0.686,89,0.115,94,1.473,98,0.141,99,0.272,110,1.213,122,1.599,310,1.225,345,0.005,346,0.006,347,0.005,988,4.465,1396,2.004,1616,5.028,1710,6.065,1857,4.013,2248,1.081,2265,4.465,2293,3.431,2744,5.526,2748,6.291,2759,5.526,2764,6.261,2765,5.098,2766,7.005,2767,5.296,2768,5.454,2769,5.57,2770,4.465,2771,5.57,2772,5.57,2773,5.57,4160,6.286,4161,6.286,4162,8.292,4163,6.286,4164,6.286,4165,6.286,4166,6.286]],["title/components/ScoreEditorComponent.html",[0,0.234,308,0.919]],["body/components/ScoreEditorComponent.html",[0,0.219,1,0.395,2,0.631,3,0.033,4,0.029,5,0.438,6,0.438,7,1.07,8,0.438,9,0.029,11,0.557,12,0.936,13,0.395,14,1.877,15,1.873,17,0.7,19,0.7,21,0.202,22,0.3,29,0.427,32,1.092,33,1.05,35,1.062,38,0.398,40,0.952,49,0.968,51,0.562,52,0.008,53,0.51,54,0.339,55,0.464,58,0.852,59,1.087,66,1.642,69,0.895,70,0.888,71,0.888,80,2.915,89,0.136,91,0.142,93,0.749,94,0.465,96,1.218,98,0.036,99,0.086,102,1.275,110,0.782,113,0.87,122,2.248,125,1.274,135,3.112,149,1.169,151,0.859,162,1.274,168,1.274,169,1.824,172,1.744,174,1.591,175,0.698,177,2.962,178,1.642,179,2.18,181,2.56,182,1.634,183,1.585,185,2.121,187,1.169,188,1.125,189,1.125,190,2.807,191,2.24,193,0.952,194,2.583,196,2.848,197,2.86,198,3.018,199,2.121,200,2.612,201,3.282,202,3.106,206,1.89,209,1.411,210,2.226,211,2.548,212,2.704,213,2.235,215,2.86,216,1.274,217,2.931,218,0.952,219,1.274,221,0.321,222,0.658,223,0.672,224,0.387,225,1.092,226,0.438,227,0.438,228,0.387,229,0.438,230,0.395,231,0.438,232,0.395,233,0.438,234,0.395,235,0.631,236,1.557,237,0.403,238,0.729,239,0.395,240,0.438,241,0.395,242,0.42,243,0.729,244,0.395,245,0.429,246,0.438,247,0.403,248,0.936,249,0.403,250,0.395,251,0.403,252,0.438,253,0.395,254,0.403,255,0.7,256,0.403,257,0.395,258,0.438,259,0.395,260,0.395,261,0.387,262,0.438,263,0.395,264,0.438,265,0.403,266,0.438,267,0.438,268,0.379,269,0.438,270,0.395,271,0.438,272,0.395,273,0.438,274,0.387,275,0.387,276,0.438,277,0.387,278,0.438,279,0.403,280,0.438,281,0.395,282,0.438,283,0.403,284,1.134,285,0.438,286,0.395,287,0.7,288,0.403,289,0.438,290,0.403,291,0.438,292,0.403,293,0.438,294,0.403,295,0.438,296,0.387,297,0.438,298,0.387,299,0.438,300,0.403,301,0.438,302,0.403,303,0.438,304,0.403,305,0.438,306,0.395,307,0.438,308,1.006,309,0.403,310,1.335,311,0.403,312,0.438,313,0.395,314,0.42,315,0.438,316,0.395,317,0.438,318,0.403,319,0.395,320,0.395,321,0.438,322,0.395,323,0.438,324,0.403,325,0.349,326,0.395,327,0.429,328,0.395,329,0.438,330,0.395,331,0.618,332,0.395,333,0.438,334,0.395,335,0.438,336,0.395,337,0.403,338,0.936,339,0.403,340,0.395,341,0.438,342,0.387,343,0.429,344,0.438,345,0.002,346,0.003,347,0.002,370,0.874,388,1.726,401,1.771,408,2.626,431,1.726,433,1.603,445,0.527,484,1.274,510,1.539,527,2.543,528,1.218,529,1.872,530,1.872,532,2.696,533,1.274,535,2.12,538,0.952,541,1.611,543,2.319,544,1.76,548,3.176,549,1.274,551,1.611,553,2.804,554,2.497,555,2.86,556,2.226,557,2.12,558,2.612,561,2.199,565,1.274,566,2.901,568,1.274,577,1.218,578,2.24,580,1.611,582,4.018,584,2.605,585,1.411,587,2.93,589,2.682,594,1.76,599,2.497,602,2.497,603,1.76,604,1.76,607,1.76,610,1.585,618,2.86,620,2.099,630,1.76,633,1.125,708,2.24,718,1.585,760,2.497,840,1.15,845,2.413,873,1.76,886,2.405,896,1.5,948,1.084,988,1.411,1045,1.611,1060,1.337,1103,1.869,1105,1.247,1108,1.313,1110,0.749,1112,1.31,1121,0.749,1123,1.726,1126,0.585,1134,1.274,1139,2.226,1144,1.805,1145,0.952,1156,1.125,1157,2.5,1158,1.946,1164,2.86,1165,2.24,1172,1.76,1180,1.5,1188,1.5,1190,1.274,1191,1.411,1192,1.5,1193,1.5,1196,1.411,1201,1.5,1245,1.047,1250,4.39,1261,1.5,1262,1.5,1285,1.416,1313,2.42,1351,2.605,1356,0.874,1381,0.952,1396,0.429,1403,2.036,1407,2.605,1408,0.828,1442,4.39,1443,4.39,1444,5.263,1476,1.611,1477,2.226,1490,1.611,1512,1.274,1539,1.76,1540,1.274,1541,1.411,1620,3.374,1622,4.818,1624,1.76,1671,3.765,1680,1.76,1684,3.765,1685,1.76,1692,2.349,1693,2.226,1695,1.76,1697,1.76,1698,1.76,1707,4.39,1708,2.93,1709,3.765,1710,3.998,1711,3.334,1712,3.74,1713,2.93,1726,1.687,1733,2.305,1748,1.585,1756,4.018,1757,1.611,1766,2.682,1788,1.687,1808,1.274,1857,1.869,1870,1.125,1891,1.084,1909,2.724,1962,2.86,1993,1.611,2116,2.028,2118,3.176,2119,2.319,2162,2.93,2163,1.274,2236,5.895,2293,3.242,2325,2.93,2342,2.93,2349,1.76,2517,1.5,2518,1.76,2523,2.349,2566,1.411,2568,1.169,2615,2.497,2616,1.274,2617,1.274,2620,1.76,2744,3.038,2748,1.411,2759,1.218,2761,1.611,2762,1.76,2766,1.611,2767,1.218,2768,3.519,2770,3.908,2901,3.765,2934,3.765,2935,1.611,2940,1.76,2942,1.76,3064,1.611,3066,1.611,3114,1.76,3135,2.93,3136,1.76,3140,3.703,3141,3.208,3256,3.446,3268,1.411,3296,2.682,3441,1.611,3532,1.611,3624,1.611,3732,1.76,3734,2.93,3735,1.5,3741,1.76,3756,1.76,3858,4.018,3864,3.018,3968,1.5,4057,1.76,4155,2.93,4167,7.354,4168,4.249,4169,4.249,4170,4.954,4171,3.307,4172,3.307,4173,6.298,4174,1.986,4175,1.611,4176,1.986,4177,1.986,4178,1.76,4179,1.611,4180,1.986,4181,3.307,4182,1.986,4183,3.307,4184,1.986,4185,1.986,4186,1.76,4187,1.76,4188,3.307,4189,1.76,4190,1.986,4191,1.986,4192,1.986,4193,3.307,4194,3.307,4195,1.986,4196,1.411,4197,3.307,4198,1.986,4199,1.76,4200,1.337,4201,1.986,4202,1.986,4203,1.986,4204,1.76,4205,1.986,4206,1.76,4207,1.986,4208,2.93,4209,1.986,4210,1.986,4211,3.307,4212,1.986,4213,1.986,4214,1.76,4215,1.986,4216,1.611,4217,1.986,4218,1.986,4219,1.986,4220,1.986,4221,1.986,4222,3.307,4223,1.986,4224,1.986,4225,1.986,4226,1.986,4227,1.76,4228,1.986,4229,1.986,4230,1.986,4231,1.986,4232,3.307,4233,1.986,4234,3.446,4235,4.249,4236,3.307,4237,3.307,4238,3.307,4239,3.307,4240,4.249,4241,3.765,4242,3.307,4243,1.986,4244,5.845,4245,3.307,4246,1.76,4247,1.986,4248,1.986,4249,1.986,4250,1.986,4251,1.986,4252,1.986,4253,1.986,4254,1.986,4255,1.986,4256,1.986,4257,1.986,4258,1.986,4259,1.986,4260,1.986,4261,1.986,4262,1.986,4263,1.986,4264,3.307,4265,1.986,4266,1.986,4267,4.954,4268,3.307,4269,2.93,4270,2.93,4271,4.018,4272,3.307,4273,3.307,4274,3.307,4275,2.93,4276,2.93,4277,5.502,4278,4.954,4279,3.307,4280,3.307,4281,3.307,4282,4.954,4283,1.986,4284,4.954,4285,4.954,4286,3.307,4287,1.986,4288,3.307,4289,3.307,4290,1.986,4291,1.986,4292,1.986,4293,1.986,4294,1.986,4295,1.986,4296,1.986,4297,1.986,4298,1.986,4299,1.986,4300,1.986,4301,1.986,4302,3.307,4303,3.307,4304,1.986,4305,1.986,4306,1.986,4307,1.986,4308,1.986,4309,1.986,4310,1.986,4311,1.986,4312,1.986,4313,1.986,4314,4.249,4315,1.986,4316,2.93,4317,1.76,4318,1.986,4319,1.986,4320,1.986,4321,1.986,4322,1.986,4323,1.986,4324,1.986,4325,1.986,4326,1.986,4327,1.986,4328,1.986,4329,1.986,4330,1.986,4331,1.986,4332,1.986,4333,1.986,4334,1.76,4335,3.307,4336,2.93,4337,2.93,4338,1.986,4339,1.986]],["title/components/ScoreGroupEditorComponent.html",[0,0.234,309,0.919]],["body/components/ScoreGroupEditorComponent.html",[0,0.272,1,0.541,2,0.814,3,0.045,4,0.04,5,0.6,6,0.6,7,0.588,8,0.6,9,0.04,11,0.718,12,1.159,13,0.541,14,1.918,15,1.915,17,0.902,19,0.902,21,0.202,22,0.387,29,0.551,32,1.313,33,1.235,35,1.37,38,0.514,43,2.176,44,3.038,49,1.05,51,0.855,52,0.008,53,0.673,54,0.42,55,0.706,58,1.01,59,1.225,62,1.601,66,1.454,69,1.424,70,1.231,71,1.107,73,3.3,77,1.23,89,0.136,91,0.195,92,0.874,94,0.638,98,0.05,99,0.118,102,1.278,108,0.749,110,1.133,113,1.205,120,2.249,151,1.108,169,1.938,172,1.62,174,2.304,190,0.979,194,1.985,206,0.935,211,0.956,218,2.044,221,0.439,222,0.849,223,0.866,224,0.53,225,1.313,226,0.6,227,0.6,228,0.53,229,0.6,230,0.541,231,0.6,232,0.541,233,0.6,234,0.541,235,0.814,236,1.722,237,0.553,238,0.94,239,0.541,240,0.6,241,0.541,242,0.576,243,0.94,244,0.541,245,0.588,246,0.6,247,0.553,248,1.159,249,0.553,250,1.185,251,0.553,252,0.6,253,0.541,254,0.553,255,0.902,256,0.553,257,0.541,258,0.6,259,0.541,260,0.541,261,0.53,262,0.6,263,0.541,264,0.6,265,0.553,266,0.6,267,0.6,268,0.519,269,0.6,270,0.541,271,0.6,272,0.541,273,0.6,274,0.53,275,0.53,276,0.6,277,0.53,278,0.6,279,0.553,280,0.6,281,0.541,282,0.6,283,0.553,284,0.519,285,0.6,286,0.541,287,0.902,288,0.553,289,0.6,290,0.553,291,0.6,292,0.553,293,0.6,294,0.553,295,0.6,296,0.53,297,0.6,298,0.53,299,0.6,300,0.553,301,0.6,302,0.553,303,0.6,304,0.553,305,0.6,306,0.541,307,0.6,308,0.553,309,1.209,310,1.842,311,0.553,312,0.6,313,0.541,314,0.576,315,0.6,316,0.541,317,0.6,318,0.553,319,0.541,320,0.541,321,0.6,322,0.541,323,0.6,324,0.553,325,0.478,326,0.541,327,0.588,328,0.541,329,0.6,330,0.541,331,0.509,332,0.541,333,0.6,334,0.541,335,0.6,336,0.541,337,0.553,338,1.159,339,0.553,340,0.541,341,0.6,342,0.53,343,0.588,344,0.6,345,0.002,346,0.004,347,0.002,379,0.801,384,6.032,409,2.772,433,1.985,445,0.721,446,1.135,447,1.135,547,2.207,558,1.435,561,1.37,819,1.304,840,1.424,845,2.915,846,3.46,908,1.601,948,4.169,1095,2.207,1103,2.314,1105,1.609,1106,1.929,1108,1.579,1110,1.026,1111,1.304,1112,1.69,1121,1.026,1126,0.801,1147,1.266,1148,1.231,1149,1.876,1153,1.929,1156,1.54,1157,3.096,1158,2.51,1165,2.249,1171,1.485,1174,2.207,1179,2.207,1180,2.055,1187,2.207,1190,1.745,1191,1.933,1192,2.055,1193,2.055,1194,1.933,1196,1.933,1197,1.435,1207,1.746,1209,2.872,1235,2.978,1245,1.435,1285,1.826,1313,2.62,1314,2.207,1315,1.831,1396,1.136,1620,3.653,1696,1.831,1726,2.176,1733,2.772,1748,2.044,1768,2.411,1775,3.541,1777,2.252,1787,2.207,1788,1.388,1790,3.46,1801,1.831,1820,4.4,1857,2.845,1891,4.481,1892,3.972,1999,1.933,2236,6.365,2723,4.687,2744,3.226,2749,1.745,2752,2.415,2775,2.207,3456,4.831,3519,2.411,3531,2.411,3951,2.411,4012,2.055,4020,1.933,4175,2.207,4179,2.207,4186,2.411,4189,3.78,4196,3.03,4340,6.766,4341,5.261,4342,5.261,4343,5.261,4344,5.261,4345,5.261,4346,4.266,4347,5.956,4348,5.956,4349,4.266,4350,4.266,4351,4.266,4352,5.261,4353,5.261,4354,5.261,4355,4.266,4356,2.721,4357,2.721,4358,2.721,4359,4.266,4360,2.721,4361,2.721,4362,4.266,4363,2.721,4364,4.266,4365,2.721,4366,2.411,4367,2.721,4368,2.721,4369,2.721,4370,5.261,4371,2.721,4372,2.721,4373,2.721,4374,2.721,4375,2.721,4376,2.721,4377,2.721,4378,2.721,4379,2.721,4380,2.721,4381,2.721,4382,5.278,4383,4.266,4384,2.721,4385,2.721,4386,2.721,4387,2.721,4388,2.721,4389,2.721,4390,2.721,4391,4.266,4392,2.721,4393,2.721,4394,2.721,4395,2.721,4396,2.721,4397,2.721,4398,2.721,4399,4.266,4400,2.721,4401,2.721,4402,2.721,4403,2.721,4404,2.721,4405,2.721,4406,2.721,4407,2.721,4408,2.721,4409,4.266,4410,2.721,4411,2.721,4412,2.721,4413,2.721,4414,2.721,4415,2.721,4416,2.721,4417,2.721,4418,2.721,4419,2.721,4420,2.721,4421,2.721,4422,2.721,4423,2.721,4424,2.721,4425,2.721,4426,4.266,4427,2.721,4428,5.956,4429,2.721,4430,4.266,4431,5.261,4432,2.721,4433,2.721,4434,2.721,4435,2.411,4436,2.721,4437,2.411,4438,2.721,4439,2.721,4440,2.721,4441,2.721,4442,2.721,4443,2.721,4444,2.721,4445,2.721,4446,3.78,4447,3.78,4448,4.266]],["title/components/ScoreSystemComponent.html",[0,0.234,311,0.919]],["body/components/ScoreSystemComponent.html",[0,0.285,1,0.584,2,0.864,3,0.048,4,0.043,5,0.647,6,0.647,7,0.634,8,0.647,9,0.043,11,0.762,12,1.217,13,0.584,14,1.926,15,1.922,17,0.957,19,0.957,21,0.139,22,0.411,27,3.715,29,0.585,32,1.367,33,0.56,35,1.453,38,0.353,41,2.084,42,3.271,49,1.06,51,0.936,52,0.008,53,0.696,54,0.429,55,0.773,58,1.065,59,1.339,66,1.526,69,1.997,70,1.27,71,1.001,77,1.304,89,0.135,91,0.21,93,1.107,94,0.688,98,0.054,99,0.127,102,1.067,103,2.084,107,1.366,108,0.515,110,1.118,112,1.107,113,0.515,116,2.385,122,1.151,126,3.213,128,1.661,151,1.175,169,2.607,172,1.654,194,2.67,221,0.474,222,0.9,223,0.919,224,0.572,225,1.367,226,0.647,227,0.647,228,0.572,229,0.647,230,0.584,231,0.647,232,0.584,233,0.647,234,0.584,235,0.864,236,1.759,237,0.596,238,0.997,239,0.584,240,0.647,241,0.584,242,0.621,243,0.997,244,0.584,245,0.634,246,0.647,247,0.596,248,1.217,249,0.596,250,1.333,251,0.596,252,0.647,253,0.584,254,0.596,255,0.957,256,0.596,257,0.584,258,0.647,259,0.584,260,0.584,261,0.572,262,0.647,263,0.584,264,0.647,265,0.596,266,0.647,267,0.647,268,0.56,269,0.647,270,0.584,271,0.647,272,0.584,273,0.647,274,0.572,275,0.572,276,0.647,277,0.572,278,0.647,279,0.596,280,0.647,281,0.584,282,0.647,283,0.596,284,0.56,285,0.647,286,0.584,287,0.957,288,0.596,289,0.647,290,0.596,291,0.647,292,0.596,293,0.647,294,0.596,295,0.647,296,0.572,297,0.647,298,0.572,299,0.647,300,0.596,301,0.647,302,0.596,303,0.647,304,0.596,305,0.647,306,0.584,307,0.647,308,0.596,309,0.596,310,0.882,311,1.26,312,0.647,313,0.584,314,0.621,315,0.647,316,0.584,317,0.647,318,0.596,319,0.584,320,0.584,321,0.647,322,0.584,323,0.647,324,0.596,325,0.515,326,0.584,327,0.634,328,0.584,329,0.647,330,0.584,331,0.549,332,0.584,333,0.647,334,0.584,335,0.647,336,0.584,337,0.596,338,0.647,339,0.596,340,0.584,341,0.647,342,0.572,343,0.634,344,0.647,345,0.002,346,0.004,347,0.002,373,1.602,374,3.013,384,6.088,388,2.243,401,2.586,433,2.082,445,0.778,466,1.163,561,0.942,564,1.366,840,1.225,948,3.658,965,2.9,1103,2.428,1105,1.706,1106,2.046,1107,1.8,1108,1.645,1110,1.107,1111,1.406,1112,1.792,1121,1.107,1126,0.864,1143,1.497,1144,1.602,1145,1.406,1147,1.366,1148,1.327,1149,1.99,1150,1.8,1153,2.805,1206,2.38,1207,1.404,1285,1.937,1313,2.947,1325,2.084,1381,1.406,1512,1.882,1726,2.307,1733,3.294,1748,2.646,1774,3.416,1775,3.715,1777,2.363,1790,3.669,1794,2.774,1801,3.045,1810,4.168,1814,4.891,1817,5.031,1819,5.031,1820,3.804,1821,3.248,1823,3.416,1825,3.213,1828,4.477,1830,3.921,1839,3.416,1840,4.684,1847,3.669,1848,4.684,1857,3.572,1863,2.38,1868,2.216,1870,1.661,1871,2.38,1875,4.891,1882,2.216,1883,2.216,1884,2.216,1886,3.213,1895,1.975,1905,2.38,1909,3.539,1916,4.008,1921,2.084,1922,2.38,1923,2.38,1928,2.38,2092,2.38,2112,2.6,2120,3.045,2744,4.793,2752,1.661,2775,4.477,3864,2.084,3896,2.38,4196,3.213,4204,2.6,4227,2.6,4340,6.829,4382,5.938,4449,2.6,4450,5.52,4451,4.524,4452,5.52,4453,5.52,4454,6.203,4455,6.203,4456,6.203,4457,7.377,4458,5.52,4459,5.52,4460,4.524,4461,2.935,4462,2.935,4463,2.935,4464,2.935,4465,2.935,4466,2.935,4467,2.935,4468,2.935,4469,2.935,4470,2.935,4471,2.935,4472,2.935,4473,2.935,4474,2.935,4475,2.935,4476,2.935,4477,2.935,4478,4.524,4479,2.935,4480,2.935,4481,2.935,4482,4.524,4483,2.935,4484,2.935,4485,2.935,4486,2.935,4487,2.935,4488,2.935,4489,4.524,4490,2.935,4491,2.935,4492,2.935,4493,2.935,4494,2.935,4495,6.203,4496,2.935,4497,2.935,4498,2.935,4499,2.935,4500,2.935,4501,2.935,4502,2.935,4503,2.935,4504,2.935,4505,2.935,4506,4.524,4507,5.52,4508,2.935,4509,5.52,4510,2.935,4511,2.935,4512,2.935,4513,2.935,4514,2.935,4515,2.935,4516,2.935,4517,2.935,4518,2.935,4519,2.935,4520,2.935,4521,2.935,4522,4.524,4523,4.524,4524,4.524,4525,4.524,4526,4.524]],["title/modules/ScoreSystemModule.html",[348,1.362,361,3.046]],["body/modules/ScoreSystemModule.html",[3,0.101,4,0.09,9,0.09,52,0.008,89,0.169,91,0.438,92,1.965,98,0.112,99,0.265,172,1.565,221,0.987,309,1.906,310,1.472,311,1.906,345,0.005,346,0.006,347,0.005,348,1.841,350,2.424,351,2.691,352,3.813,353,2.847,354,2.551,355,3.507,361,6.318,362,4.048,363,3.62,364,2.619,365,2.424,367,3.233,368,3.233,369,3.982,370,2.691,371,3.732,372,4.842,373,3.339,374,3.339,376,3.853,377,4.123,378,3.732,379,1.802,380,3.339,384,4.118,442,1.727,675,4.123,677,4.444,679,4.842,681,5.083,754,3.982,1365,5.083,1371,2.767,2236,4.346,4340,4.619,4527,5.421,4528,5.421,4529,6.118,4530,5.421,4531,6.118,4532,6.118]],["title/components/ScorecardsComponent.html",[0,0.234,306,0.9]],["body/components/ScorecardsComponent.html",[0,0.275,1,0.551,2,0.826,3,0.046,4,0.041,5,0.954,6,0.611,7,0.598,8,0.611,9,0.041,11,0.729,12,1.173,13,0.551,14,1.92,15,1.916,17,0.916,19,0.916,21,0.132,22,0.393,29,0.559,32,1.326,33,0.529,38,0.521,40,2.884,49,0.924,51,0.704,52,0.008,53,0.667,54,0.413,55,0.581,56,2.408,58,0.843,59,0.878,70,0.955,71,0.859,77,0.799,89,0.132,91,0.198,94,0.65,96,1.7,98,0.051,99,0.12,102,1.122,110,1.031,113,1.313,118,0.871,122,1.838,128,1.569,149,1.631,169,2.216,171,2.906,172,1.549,174,1.39,177,2.879,178,1.071,179,2.74,181,3.362,182,2.973,183,3.128,185,1.187,188,1.569,189,1.569,190,1.915,191,2.721,194,2.462,196,2.408,199,2.279,200,3.172,201,2.552,202,1.046,206,1.487,208,2.456,210,1.866,211,2.431,212,2.362,213,2.163,216,3.414,220,2.248,221,0.447,222,0.861,223,0.879,224,0.54,225,1.693,226,0.611,227,0.611,228,0.54,229,0.611,230,0.551,231,0.611,232,0.551,233,0.611,234,0.551,235,1.246,236,1.731,237,0.563,238,0.954,239,0.551,240,0.611,241,0.551,242,0.586,243,0.954,244,0.551,245,0.598,246,0.611,247,0.563,248,1.173,249,0.563,250,1.298,251,0.563,252,0.611,253,0.551,254,0.563,255,1.381,256,0.563,257,0.551,258,0.611,259,0.551,260,0.551,261,0.54,262,0.611,263,0.551,264,0.611,265,0.563,266,0.611,267,0.611,268,0.529,269,0.611,270,0.551,271,0.611,272,0.551,273,0.611,274,0.54,275,0.54,276,0.611,277,0.54,278,0.611,279,0.563,280,0.611,281,0.551,282,0.611,283,0.563,284,0.826,285,0.611,286,0.551,287,0.916,288,0.563,289,0.611,290,0.563,291,0.611,292,0.563,293,0.611,294,0.563,295,0.611,296,0.54,297,0.611,298,0.54,299,0.611,300,0.563,301,0.611,302,0.563,303,0.611,304,0.563,305,0.611,306,1.197,307,0.611,308,0.563,309,0.563,310,0.54,311,0.563,312,0.611,313,0.551,314,0.586,315,0.611,316,0.551,317,0.611,318,0.563,319,0.551,320,0.551,321,0.611,322,0.551,323,0.611,324,1.325,325,0.76,326,0.551,327,1.15,328,0.551,329,0.611,330,0.551,331,0.518,332,0.551,333,0.611,334,0.551,335,0.611,336,0.551,337,0.563,338,0.611,339,0.563,340,0.551,341,0.611,342,0.54,343,0.598,344,0.611,345,0.002,346,0.004,347,0.002,388,2.163,401,2.509,410,2.74,433,2.008,442,0.782,445,0.735,510,2.8,527,2.576,532,3.571,534,2.208,543,1.513,558,3.647,561,2.707,566,2.342,568,1.777,578,1.461,584,3.265,586,1.866,590,1.866,602,2.093,609,2.093,610,1.328,612,1.569,618,1.866,619,2.093,620,2.631,633,3.014,718,2.074,800,1.969,801,2.279,802,2.721,819,2.074,840,1.441,867,2.248,948,1.513,1012,1.513,1087,0.852,1103,2.342,1108,1.595,1126,0.816,1139,1.866,1141,1.37,1142,1.37,1207,0.705,1356,1.219,1371,1.253,1396,1.409,1403,3.682,1405,1.631,1512,1.777,1541,1.969,1588,3.133,1589,4.718,1777,2.279,1788,2.716,1816,2.716,1820,2.654,1857,2.646,1867,1.777,1877,3.268,1891,2.906,1892,4.02,1915,2.248,1942,3.265,1962,1.866,1963,2.093,1987,3.074,1994,1.777,2020,4.88,2119,1.513,2120,2.913,2164,3.268,2268,1.866,2568,2.547,2588,2.775,2615,4.927,2624,3.51,2625,2.456,2723,3.54,2744,4.002,2749,1.777,2752,1.569,2753,1.631,2761,4.88,2777,1.777,2785,1.866,2944,2.248,3140,1.866,3214,3.835,3215,3.835,3244,2.093,3256,3.51,3735,2.093,3788,2.456,3822,2.248,3864,3.074,4062,6.402,4064,3.51,4196,3.074,4216,2.248,4276,5.331,4316,2.456,4317,2.456,4447,2.456,4533,2.456,4534,5.324,4535,4.328,4536,4.328,4537,5.331,4538,4.328,4539,4.328,4540,6.526,4541,2.772,4542,5.324,4543,4.328,4544,2.772,4545,4.328,4546,2.772,4547,2.772,4548,2.772,4549,2.772,4550,2.772,4551,2.772,4552,2.772,4553,2.772,4554,2.772,4555,2.456,4556,2.772,4557,4.328,4558,4.328,4559,3.835,4560,2.772,4561,2.456,4562,2.456,4563,2.456,4564,2.772,4565,4.328,4566,2.772,4567,2.772,4568,4.328,4569,2.772,4570,2.772,4571,3.835,4572,2.772,4573,2.456,4574,2.772,4575,6.017,4576,4.328,4577,2.772,4578,4.328,4579,2.772,4580,2.772,4581,2.772,4582,2.772,4583,2.772,4584,2.772,4585,2.772,4586,2.772,4587,4.328,4588,4.328,4589,4.328,4590,4.328,4591,4.328,4592,2.772,4593,2.772,4594,4.328,4595,4.328,4596,4.328,4597,4.328,4598,4.328,4599,2.456,4600,2.772,4601,2.772,4602,5.331,4603,2.456,4604,2.456,4605,2.456,4606,2.456,4607,2.772,4608,2.456,4609,2.456,4610,2.456,4611,2.456,4612,2.772,4613,2.772,4614,2.772,4615,2.772,4616,2.772,4617,2.772,4618,2.772,4619,2.772,4620,2.772,4621,2.772,4622,2.772,4623,2.772,4624,4.328,4625,2.772,4626,4.328,4627,4.328,4628,2.772,4629,2.772,4630,2.772,4631,2.772,4632,2.772,4633,2.772,4634,2.772,4635,4.328,4636,2.772,4637,2.772,4638,2.772]],["title/modules/SharedModule.html",[348,1.362,362,2.047]],["body/modules/SharedModule.html",[2,1.22,3,0.078,4,0.07,9,0.07,52,0.008,89,0.172,91,0.338,92,1.518,98,0.133,99,0.205,221,0.763,237,1.837,247,1.837,259,1.821,265,1.837,274,1.763,283,1.837,292,1.837,302,1.837,339,0.96,340,1.8,342,1.763,345,0.004,346,0.005,347,0.004,348,1.422,350,2.532,351,2.079,352,3.37,353,2.199,354,1.97,355,3.1,362,4.344,363,3.063,364,2.023,365,1.872,367,2.023,368,2.736,369,3.818,370,2.079,371,3.158,372,4.097,373,2.58,374,2.58,376,3.26,377,3.488,378,3.158,379,1.392,442,1.334,446,1.97,447,1.97,663,5.873,677,3.761,680,4.539,754,3.37,1037,4.188,1266,3.833,1318,3.181,1319,4.188,1365,4.301,1563,3.833,1603,3.357,1604,3.03,1605,3.03,1609,4.188,1610,3.357,2136,3.568,2222,5.184,2506,3.833,2954,3.357,3013,3.833,3275,3.833,3759,6.426,3760,3.568,4079,3.833,4639,4.188,4640,4.188,4641,4.188,4642,6.426,4643,4.726,4644,7.241,4645,4.726,4646,4.726,4647,4.726,4648,4.726,4649,4.726,4650,4.726,4651,4.726,4652,4.726,4653,4.726,4654,4.726,4655,4.726,4656,4.726,4657,4.726,4658,6.391,4659,4.726,4660,4.726,4661,4.726,4662,4.726,4663,4.726]],["title/components/SignoffReportComponent.html",[0,0.234,313,0.9]],["body/components/SignoffReportComponent.html",[0,0.272,1,0.543,2,0.816,3,0.045,4,0.04,5,0.942,6,0.602,7,0.589,8,0.602,9,0.04,11,0.72,12,1.162,13,0.543,14,1.918,15,1.914,17,0.905,19,0.905,21,0.13,22,0.388,29,0.553,32,1.315,33,0.521,35,1.373,38,0.515,40,2.86,49,1.005,51,0.983,52,0.008,53,0.702,54,0.427,55,0.812,56,2.384,58,0.988,59,0.705,69,0.739,70,0.49,71,0.44,89,0.136,91,0.195,94,0.64,96,1.674,98,0.05,99,0.118,102,1.114,108,1.549,110,1.313,113,1.138,122,1.088,128,1.545,135,2.113,149,1.606,151,1.369,171,2.878,172,1.489,181,2.453,182,1.349,183,2.05,185,1.169,188,1.545,189,1.545,190,1.538,191,2.384,199,1.169,200,1.439,201,1.308,202,1.03,206,0.938,209,1.939,210,1.837,211,0.959,221,0.44,222,0.851,223,0.868,224,0.532,225,1.315,226,0.602,227,0.602,228,0.532,229,0.602,230,0.543,231,0.602,232,0.543,233,0.602,234,0.543,235,0.816,236,1.724,237,0.554,238,0.942,239,0.543,240,0.602,241,0.543,242,0.578,243,0.942,244,0.543,245,0.589,246,0.602,247,0.554,248,1.162,249,0.554,250,1.671,251,0.554,252,0.602,253,0.543,254,0.554,255,1.573,256,0.554,257,0.543,258,0.602,259,0.543,260,0.543,261,1.263,262,0.602,263,0.543,264,0.602,265,0.554,266,0.602,267,0.602,268,0.521,269,0.602,270,0.543,271,0.602,272,0.543,273,0.602,274,0.532,275,0.532,276,0.602,277,0.532,278,0.602,279,0.554,280,0.602,281,0.543,282,0.602,283,0.554,284,0.816,285,0.602,286,0.543,287,0.905,288,0.554,289,0.602,290,0.554,291,0.602,292,0.554,293,0.602,294,0.554,295,0.602,296,0.532,297,0.602,298,0.532,299,0.602,300,0.554,301,0.602,302,0.554,303,0.602,304,0.554,305,0.602,306,0.543,307,0.602,308,0.554,309,0.554,310,1.163,311,0.554,312,0.602,313,1.187,314,1.573,315,0.602,316,0.543,317,0.602,318,0.554,319,0.543,320,0.543,321,0.602,322,0.543,323,0.602,324,0.554,325,1.048,326,0.543,327,0.589,328,0.543,329,0.602,330,0.543,331,0.51,332,0.543,333,0.602,334,0.543,335,0.602,336,0.543,337,0.554,338,0.602,339,0.554,340,0.543,341,0.602,342,0.532,343,0.589,344,0.602,345,0.002,346,0.004,347,0.002,410,2.846,433,1.989,442,0.771,445,0.724,466,2.364,510,1.27,527,1.831,532,1.169,535,1.75,538,1.308,559,1.939,561,2.602,568,1.75,610,1.308,612,1.545,619,2.061,620,1.349,718,2.05,743,1.837,801,2.257,802,2.698,840,1.427,867,2.214,948,1.49,1087,0.839,1108,1.582,1126,0.804,1139,1.837,1141,1.349,1142,1.349,1144,2.334,1207,0.694,1262,3.981,1381,1.308,1384,5.741,1393,1.989,1403,4.065,1405,1.606,1407,2.623,1408,1.783,1512,1.75,1535,2.878,1588,3.102,1777,2.257,1857,2.85,1870,1.545,1891,2.878,1892,3.229,1909,2.742,1921,3.038,1940,2.061,1942,2.623,1949,1.837,1972,2.623,2119,1.49,2207,1.939,2229,6.505,2268,1.837,2352,3.038,2529,2.419,2568,3.812,2749,1.75,2753,1.606,2767,2.623,2770,1.939,2777,1.75,2782,1.939,2783,2.061,2784,2.061,2785,1.837,2786,1.837,3140,1.837,3244,2.061,3272,2.419,3624,2.214,3642,4.84,3735,2.061,3822,4.276,3864,3.038,3942,2.061,4196,1.939,4206,2.419,4208,2.419,4214,4.672,4216,4.84,4241,2.419,4244,2.419,4270,2.419,4271,3.469,4275,2.419,4336,2.419,4337,2.419,4537,5.287,4555,2.419,4559,2.419,4561,2.419,4562,2.419,4563,3.789,4571,3.789,4573,2.419,4599,2.419,4602,5.287,4603,2.419,4604,2.419,4605,2.419,4606,2.419,4608,2.419,4609,2.419,4610,2.419,4611,2.419,4664,7.634,4665,2.419,4666,4.277,4667,5.272,4668,4.277,4669,5.272,4670,4.277,4671,4.277,4672,4.277,4673,4.277,4674,4.277,4675,4.277,4676,4.277,4677,5.272,4678,5.272,4679,2.73,4680,4.277,4681,2.73,4682,2.73,4683,2.73,4684,4.277,4685,6.59,4686,2.73,4687,4.277,4688,2.73,4689,4.277,4690,2.73,4691,5.967,4692,4.277,4693,2.73,4694,2.73,4695,2.73,4696,4.277,4697,2.73,4698,2.73,4699,2.73,4700,2.73,4701,2.73,4702,2.73,4703,2.73,4704,2.73,4705,2.73,4706,2.73,4707,4.277,4708,2.73,4709,2.73,4710,2.73,4711,2.73,4712,2.73,4713,2.73,4714,2.73,4715,2.73,4716,2.73,4717,2.73,4718,2.73,4719,2.73,4720,2.73,4721,2.73,4722,2.73,4723,2.73,4724,2.73,4725,2.73,4726,4.277,4727,4.277,4728,4.277,4729,4.277,4730,4.277,4731,4.277,4732,2.73,4733,4.277,4734,2.73,4735,2.73,4736,4.277,4737,2.73,4738,2.73,4739,2.73,4740,2.73,4741,2.73,4742,2.73,4743,2.73,4744,2.73,4745,2.73,4746,2.73,4747,2.73,4748,2.73,4749,2.73,4750,2.73,4751,2.73,4752,4.277,4753,4.277,4754,4.277,4755,4.277,4756,4.277,4757,2.73,4758,2.73,4759,2.73,4760,2.73]],["title/components/StatisticsComponent.html",[0,0.234,316,0.9]],["body/components/StatisticsComponent.html",[0,0.368,1,0.91,2,1.194,3,0.076,4,0.067,5,1.008,6,1.008,7,0.988,8,1.008,9,0.067,11,1.053,12,1.57,13,0.91,14,1.965,15,1.963,17,1.323,19,1.323,21,0.217,22,0.568,29,0.808,32,1.687,33,0.874,38,0.858,49,0.942,51,0.827,52,0.008,53,0.67,54,0.353,55,0.683,58,0.92,59,1.174,70,0.821,71,0.738,89,0.115,91,0.327,94,1.072,98,0.084,99,0.198,172,1.755,221,0.738,222,1.244,223,1.27,224,0.892,225,1.687,226,1.008,227,1.008,228,0.892,229,1.008,230,0.91,231,1.008,232,0.91,233,1.008,234,0.91,235,1.194,236,1.949,237,0.929,238,1.378,239,0.91,240,1.008,241,0.91,242,0.968,243,1.378,244,0.91,245,0.988,246,1.008,247,0.929,248,1.57,249,0.929,250,0.91,251,0.929,252,1.008,253,0.91,254,0.929,255,1.323,256,0.929,257,0.91,258,1.008,259,0.91,260,0.91,261,0.892,262,1.008,263,0.91,264,1.008,265,0.929,266,1.008,267,1.008,268,0.874,269,1.008,270,0.91,271,1.008,272,0.91,273,1.008,274,0.892,275,0.892,276,1.008,277,0.892,278,1.008,279,0.929,280,1.008,281,0.91,282,1.008,283,0.929,284,0.874,285,1.008,286,0.91,287,1.323,288,0.929,289,1.008,290,0.929,291,1.008,292,0.929,293,1.008,294,0.929,295,1.008,296,0.892,297,1.008,298,0.892,299,1.008,300,0.929,301,1.008,302,0.929,303,1.008,304,0.929,305,1.008,306,0.91,307,1.008,308,0.929,309,0.929,310,0.892,311,0.929,312,1.008,313,0.91,314,0.968,315,1.008,316,1.523,317,1.008,318,0.929,319,1.594,320,0.91,321,1.008,322,0.91,323,1.008,324,0.929,325,1.251,326,0.91,327,0.988,328,0.91,329,1.008,330,0.91,331,0.856,332,0.91,333,1.008,334,0.91,335,1.008,336,0.91,337,0.929,338,1.008,339,0.929,340,0.91,341,1.008,342,0.892,343,0.988,344,1.008,345,0.004,346,0.005,347,0.004,527,3.277,1257,5.071,1403,4.191,4761,4.055,4762,7.122,4763,6.252,4764,7.122,4765,6.252,4766,4.576,4767,7.654,4768,4.576,4769,7.654,4770,4.576,4771,6.252,4772,6.252]],["title/classes/SubjectSource.html",[99,0.196,1124,2.47]],["body/classes/SubjectSource.html",[3,0.088,4,0.078,9,0.078,21,0.252,22,0.628,29,0.893,31,4.713,35,2.22,38,0.64,49,1.076,51,1.114,52,0.008,53,0.682,54,0.417,55,0.92,58,1.116,59,1.266,62,3.13,66,2.122,70,0.954,71,0.858,89,0.141,98,0.098,99,0.231,102,1.398,107,2.475,108,0.934,110,1.331,113,0.934,151,1.795,223,1.559,345,0.004,346,0.006,347,0.004,379,1.566,445,1.41,466,2.107,561,2.22,712,3.415,860,5.212,891,4.048,983,4.016,1118,4.442,1124,3.773,1153,3.126,1294,5.219,1356,3.04,1396,1.148,1408,2.218,1616,3.773,2252,4.016,2255,7.131,2256,6.228,2257,4.314,2258,6.362,2264,6.228,2265,3.778,2268,5.168,2272,6.593,2277,5.606,2278,7.004,2281,4.314,2287,4.314,2292,6.593,2293,2.903,2294,6.804,2295,6.124,2296,6.124,2297,4.713,2301,4.713,2302,6.124,2310,4.713,2319,4.713,2568,4.067,3207,4.314,4773,8.161,4774,6.912,4775,5.319,4776,5.319,4777,5.319,4778,5.319,4779,5.319,4780,5.319,4781,5.319,4782,5.319,4783,6.912,4784,5.319,4785,5.319,4786,5.319,4787,5.319,4788,5.319,4789,6.912,4790,5.319,4791,7.678,4792,5.319,4793,5.319,4794,6.912,4795,5.319,4796,5.319,4797,5.319,4798,6.912,4799,6.912,4800,5.319]],["title/components/TeamsComponent.html",[0,0.234,320,0.9]],["body/components/TeamsComponent.html",[0,0.287,1,0.591,2,0.872,3,0.049,4,0.067,5,0.655,6,0.655,7,0.642,8,0.655,9,0.044,11,0.769,12,1.226,13,0.591,14,1.928,15,1.924,17,0.967,19,0.967,21,0.141,22,0.415,25,3.953,26,3.568,29,0.59,32,1.376,33,0.567,35,1.467,38,0.55,42,3.293,49,1.049,51,0.891,52,0.008,53,0.685,54,0.389,55,0.736,58,1.035,59,1.111,66,1.263,69,0.805,70,1.12,71,1.008,77,1.604,89,0.152,91,0.213,93,1.121,94,0.697,98,0.055,99,0.198,100,2.634,102,0.957,108,0.522,110,1.239,113,1.302,117,4.513,118,1.435,121,4.513,122,1.715,149,2.688,151,1.186,171,3.884,172,1.153,174,2.617,175,1.045,185,1.273,190,1.069,206,1.021,211,1.045,213,1.208,217,1.383,218,1.425,221,0.48,222,0.909,223,0.928,224,0.579,225,1.376,226,0.655,227,0.655,228,0.579,229,0.655,230,0.591,231,0.655,232,0.591,233,0.655,234,0.591,235,1.358,236,1.765,237,0.604,238,1.007,239,0.591,240,0.655,241,0.591,242,0.629,243,1.007,244,0.591,245,0.642,246,0.655,247,0.604,248,1.226,249,0.604,250,0.591,251,0.604,252,0.655,253,0.591,254,0.604,255,1.505,256,0.604,257,0.591,258,0.655,259,0.591,260,0.591,261,0.579,262,0.655,263,0.591,264,0.655,265,0.604,266,0.655,267,0.655,268,0.567,269,0.655,270,0.591,271,0.655,272,0.591,273,0.655,274,0.579,275,0.579,276,0.655,277,0.579,278,0.655,279,0.604,280,0.655,281,0.591,282,0.655,283,0.604,284,1.062,285,0.655,286,0.591,287,0.967,288,0.604,289,0.655,290,0.604,291,0.655,292,0.604,293,0.655,294,0.604,295,0.655,296,0.579,297,0.655,298,0.579,299,0.655,300,0.604,301,0.655,302,0.604,303,0.655,304,0.604,305,0.655,306,0.591,307,0.655,308,0.604,309,0.604,310,0.579,311,0.604,312,0.655,313,0.591,314,0.629,315,0.655,316,0.591,317,0.655,318,0.604,319,1.416,320,1.242,321,0.655,322,0.591,323,0.655,324,1.369,325,1.302,326,0.591,327,0.642,328,0.591,329,0.655,330,0.591,331,0.854,332,0.591,333,0.655,334,0.591,335,0.655,336,0.591,337,0.604,338,0.655,339,0.604,340,0.591,341,0.655,342,0.579,343,0.642,344,0.655,345,0.002,346,0.004,347,0.002,388,2.261,401,2.604,408,3.09,409,2.906,410,2.936,431,2.261,433,2.099,442,0.839,445,0.788,446,1.239,447,1.239,527,1.273,532,1.273,538,1.425,548,1.906,561,0.955,568,1.906,610,1.425,708,2.934,801,2.382,802,2.824,825,4.048,840,1.506,908,1.749,909,2.19,988,3.245,1087,1.711,1098,5.534,1103,2.448,1105,1.723,1106,2.066,1108,1.656,1110,1.121,1111,1.425,1112,1.81,1117,3.075,1118,2.934,1121,1.121,1123,1.208,1124,1.623,1125,1.823,1126,0.875,1130,2.111,1132,2.494,1141,1.469,1142,1.469,1143,1.516,1144,1.623,1145,1.425,1146,2.001,1147,1.383,1148,1.344,1149,2.009,1150,1.823,1153,2.066,1207,0.756,1254,2.75,1315,2.001,1356,1.307,1371,1.344,1393,2.099,1396,0.986,1426,2.688,1428,2.929,1516,2.634,1520,3.45,1628,4.931,1692,3.245,1711,3.075,1867,1.906,1915,2.411,1921,2.111,1940,2.244,1942,2.802,1950,2.244,2207,3.245,2275,2.244,2293,1.623,2339,2.634,2412,2.634,2515,2.111,2715,4.513,2770,3.953,2777,1.906,3213,3.706,3441,2.411,3467,2.411,3538,2.634,3862,3.706,4018,5.066,4019,2.411,4124,4.048,4200,2.001,4246,2.634,4269,2.634,4334,2.634,4801,2.634,4802,5.565,4803,4.569,4804,4.513,4805,4.931,4806,5.534,4807,6.246,4808,4.569,4809,5.534,4810,4.569,4811,6.74,4812,6.74,4813,5.565,4814,2.973,4815,2.973,4816,2.973,4817,2.973,4818,2.973,4819,2.973,4820,4.569,4821,2.973,4822,2.973,4823,2.973,4824,2.973,4825,2.973,4826,4.569,4827,2.973,4828,4.569,4829,2.973,4830,2.973,4831,2.973,4832,2.973,4833,2.973,4834,2.973,4835,2.973,4836,2.973,4837,2.973,4838,2.973,4839,2.973,4840,2.973,4841,2.973,4842,2.973,4843,2.973,4844,4.569,4845,2.973,4846,2.973,4847,2.973,4848,4.569,4849,2.973,4850,2.973,4851,2.973,4852,2.973,4853,2.973,4854,4.048,4855,2.973,4856,2.973,4857,2.973,4858,2.973,4859,2.973,4860,2.634,4861,2.973,4862,2.973,4863,2.973,4864,2.973,4865,2.973,4866,2.973,4867,2.973,4868,2.973,4869,2.634,4870,2.634,4871,4.569,4872,2.973,4873,6.246,4874,4.569,4875,6.246,4876,2.973,4877,4.569]],["title/directives/ToCaseDirective.html",[224,0.882,342,0.882]],["body/directives/ToCaseDirective.html",[3,0.095,4,0.084,9,0.084,13,1.138,14,1.471,21,0.272,29,0.936,38,0.689,49,0.982,51,0.958,52,0.008,53,0.587,54,0.394,55,0.791,58,0.739,59,1.31,66,2.002,70,1.026,71,1.46,77,1.65,80,5.324,89,0.133,91,0.409,92,1.838,98,0.146,99,0.248,102,1.367,107,3.371,108,1.546,110,1.144,118,1.798,224,1.412,339,1.162,342,1.549,343,1.564,345,0.005,346,0.006,347,0.005,354,3.02,701,4.442,712,2.828,725,3.367,747,3.852,886,3.24,1105,2.732,1110,2.159,1121,2.159,1269,5.469,1270,4.321,1271,5.469,1284,5.875,1285,3.101,1303,5.875,1313,3.674,1318,5.801,1633,5.071,1634,7.403,2116,3.509,2118,4.644,2119,3.954,2396,3.852,2521,3.669,4234,4.641,4878,6.507,4879,4.321,4880,6.447,4881,7.948,4882,7.244,4883,7.244,4884,5.723,4885,5.723,4886,5.723,4887,7.244,4888,5.071,4889,5.071,4890,7.043,4891,5.723,4892,6.419,4893,5.723,4894,5.723,4895,5.723,4896,5.723,4897,8.354,4898,7.244,4899,5.723,4900,5.723,4901,5.723,4902,5.723,4903,5.723,4904,5.723,4905,5.723]],["title/interfaces/TotalByScoreGroup.html",[2248,0.778,2787,3.417]],["body/interfaces/TotalByScoreGroup.html",[3,0.104,4,0.093,9,0.093,21,0.299,22,0.699,52,0.008,54,0.411,89,0.169,98,0.141,108,1.518,170,3.708,250,1.253,284,1.203,310,1.684,319,1.253,325,1.107,345,0.005,346,0.006,347,0.005,606,4.758,909,3.979,1087,2.364,1207,1.603,1393,3.131,1396,2.016,1403,3.02,1405,4.885,1421,4.377,1710,4.241,1777,3.554,1816,3.214,1857,3.898,1989,4.377,2008,4.241,2248,1.323,2250,2.164,2401,4.241,2594,4.476,2715,4.531,2749,4.04,2752,3.567,2753,3.708,2758,4.476,2759,5.09,2767,5.436,2777,4.04,2778,5.111,2779,5.584,2780,5.111,2781,5.584,2782,4.476,2783,4.758,2784,4.758,2785,4.241,2786,4.241,2787,6.527]],["title/components/TournamentComponent.html",[0,0.234,322,0.9]],["body/components/TournamentComponent.html",[0,0.329,1,0.74,2,1.032,3,0.062,4,0.08,5,0.82,6,0.82,7,0.804,8,0.82,9,0.055,11,0.91,12,1.403,13,0.74,14,1.949,15,1.946,17,1.144,19,1.144,21,0.177,22,0.491,29,0.699,32,1.539,33,0.711,38,0.651,45,3.603,46,3.348,49,0.872,51,0.492,52,0.008,53,0.702,54,0.268,55,0.406,58,0.481,59,0.614,66,1.494,69,1.008,70,0.969,71,0.872,89,0.153,91,0.266,93,1.404,94,0.872,97,1.963,98,0.068,99,0.161,113,1.303,151,1.404,169,1.371,172,1.319,174,2.786,175,1.308,177,1.339,196,2.444,217,1.732,221,0.601,222,1.075,223,1.098,224,0.725,225,1.539,226,0.82,227,0.82,228,0.725,229,0.82,230,0.74,231,0.82,232,0.74,233,0.82,234,0.74,235,1.215,236,1.866,237,0.756,238,1.191,239,0.74,240,0.82,241,0.74,242,0.787,243,1.191,244,0.74,245,0.804,246,0.82,247,0.756,248,1.403,249,0.756,250,0.74,251,0.756,252,0.82,253,0.74,254,0.756,255,1.144,256,0.756,257,0.74,258,0.82,259,0.74,260,0.74,261,0.725,262,0.82,263,0.74,264,0.82,265,0.756,266,0.82,267,0.82,268,0.711,269,0.82,270,0.74,271,0.82,272,0.74,273,0.82,274,0.725,275,0.725,276,0.82,277,0.725,278,0.82,279,0.756,280,0.82,281,0.74,282,0.82,283,0.756,284,0.711,285,0.82,286,0.74,287,1.144,288,0.756,289,0.82,290,0.756,291,0.82,292,0.756,293,0.82,294,0.756,295,0.82,296,0.725,297,0.82,298,0.725,299,0.82,300,0.756,301,0.82,302,0.756,303,0.82,304,0.756,305,0.82,306,0.74,307,0.82,308,0.756,309,0.756,310,0.725,311,0.756,312,0.82,313,0.74,314,0.787,315,0.82,316,0.74,317,0.82,318,0.756,319,0.74,320,0.74,321,0.82,322,1.389,323,0.82,324,0.756,325,1.303,326,0.74,327,0.804,328,0.74,329,0.82,330,0.74,331,0.696,332,0.74,333,0.82,334,0.74,335,0.82,336,0.74,337,0.756,338,0.82,339,0.756,340,0.74,341,0.82,342,0.725,343,0.804,344,0.82,345,0.003,346,0.005,347,0.003,408,3.329,410,3.066,442,1.051,445,0.987,510,1.732,564,1.732,565,2.387,800,2.644,801,2.725,802,3.159,840,1.723,1105,2.039,1108,1.852,1110,1.404,1112,2.142,1117,3.638,1118,3.356,1121,1.404,1123,1.512,1124,2.032,1125,2.283,1126,1.096,1129,2.811,1132,2.032,1141,1.839,1142,1.839,1146,2.505,1148,1.683,1149,2.377,1150,2.283,1153,2.444,1169,4.79,1170,4.384,1173,3.298,1207,0.947,1244,3.298,1393,1.404,1421,4.573,1424,4.961,1425,5.274,1426,3.181,1428,3.466,1469,3.954,1479,3.298,1512,2.387,1535,3.638,2198,2.505,2199,4.284,2200,4.284,2551,3.019,2552,2.644,2553,3.019,2614,6.634,2720,3.298,2859,3.019,3040,4.081,3203,4.384,3467,3.019,3644,3.019,4804,5.162,4906,3.298,4907,6.365,4908,5.405,4909,6.365,4910,5.405,4911,3.722,4912,3.722,4913,4.79,4914,3.722,4915,3.722,4916,3.298,4917,3.298,4918,3.722,4919,3.298,4920,3.722,4921,3.722,4922,3.722,4923,5.405,4924,6.984,4925,5.405,4926,5.405,4927,3.722]],["title/modules/TournamentModule.html",[348,1.362,1548,3.215]],["body/modules/TournamentModule.html",[3,0.088,4,0.078,9,0.078,52,0.008,89,0.173,91,0.38,92,1.708,98,0.098,99,0.231,221,0.858,222,1.058,230,1.718,270,1.718,304,1.754,306,1.718,318,1.754,320,1.718,322,1.718,324,1.754,325,0.934,345,0.004,346,0.006,347,0.004,348,1.6,350,2.107,351,2.339,352,3.573,353,2.475,354,2.218,355,2.277,359,5.812,360,5.812,362,3.905,363,3.313,364,2.277,365,2.107,367,2.959,368,2.959,369,3.644,370,2.339,371,3.415,372,4.431,373,2.903,374,2.903,375,5.606,376,3.525,377,3.773,378,3.415,379,1.566,380,2.903,442,1.501,670,5.219,671,3.778,672,2.804,675,3.773,677,4.067,678,4.238,679,4.431,754,3.644,1254,2.628,1362,5.812,1365,4.652,1366,5.219,1367,5.219,1368,5.606,1369,4.713,1371,2.405,1548,6.801,1552,4.652,1553,5.606,1603,3.778,1604,3.41,1605,3.41,1610,3.778,1867,3.41,2223,6.124,4928,4.713,4929,4.713,4930,5.319,4931,5.319,4932,6.912,4933,6.912,4934,6.912,4935,5.319,4936,5.319,4937,5.319,4938,5.319,4939,5.319,4940,5.319,4941,5.319]],["title/interfaces/TournamentType.html",[2248,0.778,2547,3.417]],["body/interfaces/TournamentType.html",[0,0.358,3,0.088,4,0.079,9,0.079,11,0.9,12,1.528,14,1.086,15,1.086,17,1.131,19,1.131,21,0.254,22,0.63,26,3.428,32,1.178,38,0.644,45,3.027,46,3.324,52,0.008,53,0.7,54,0.344,56,2.418,89,0.164,91,0.382,94,1.253,97,2.819,98,0.098,99,0.232,102,1.324,108,1.352,110,1.333,113,1.519,116,2.819,118,1.68,122,1.958,151,1.388,174,1.717,268,1.021,319,1.064,345,0.004,346,0.006,347,0.004,388,2.818,409,3.227,446,2.229,447,2.229,516,4.037,561,2.227,652,3.428,819,2.563,836,3.146,840,1.447,900,4.337,909,3.324,958,6.845,1108,1.839,1126,1.575,1139,4.668,1207,1.36,1381,2.563,1393,3.072,1469,4.778,1870,3.027,1972,3.279,1987,3.798,2198,3.599,2199,3.599,2200,3.599,2248,0.92,2250,1.836,2395,3.599,2524,4.337,2525,4.738,2526,4.738,2527,4.738,2531,4.738,2532,4.738,2533,4.738,2534,7.14,2536,6.145,2538,4.738,2547,6.372,2551,4.337,2552,3.798,2553,4.337,2554,4.738,2566,3.798,2567,4.738,2568,3.146,2569,4.337,2570,4.738,2571,4.738,2572,4.738,2573,6.821,2574,6.821,2575,4.738,2576,4.738,2577,6.821,2578,4.738,2579,4.738,2580,4.738,2581,4.738,2582,3.798,2583,4.738,2584,4.738,2585,4.337,2586,4.738,2587,4.738,2588,3.428,2589,4.738,2590,4.738,2591,3.279,2592,3.428,2593,4.337,2594,3.798,2595,4.738,2596,4.738,2597,4.738,2598,4.738,2599,4.738,2600,4.738,2601,6.145,2602,4.738,2603,4.738,2604,4.738]],["title/components/TroopEditorComponent.html",[0,0.234,326,0.9]],["body/components/TroopEditorComponent.html",[0,0.301,1,0.637,2,0.923,3,0.053,4,0.047,5,0.705,6,0.705,7,0.691,8,0.705,9,0.047,11,0.814,12,1.283,13,0.637,14,1.935,15,1.932,17,1.023,19,1.023,21,0.152,22,0.439,29,0.625,32,1.43,33,1.239,35,1.552,38,0.582,43,2.465,44,3.31,49,1.051,51,0.921,52,0.008,53,0.672,54,0.405,55,0.761,58,0.983,59,1.207,66,1.336,69,1.886,70,1.164,71,1.182,73,2.971,89,0.15,91,0.229,92,1.028,93,1.207,94,0.75,98,0.059,99,0.139,102,0.55,110,1.025,113,1.286,118,1.519,120,1.688,122,1.23,128,1.812,151,1.255,172,1.207,174,1.552,190,1.151,191,1.447,192,2.273,211,1.125,213,1.301,221,0.516,222,0.961,223,0.981,224,0.624,225,1.43,226,0.705,227,0.705,228,0.624,229,0.705,230,0.637,231,0.705,232,1.291,233,0.705,234,1.386,235,1.529,236,1.8,237,0.65,238,1.065,239,0.637,240,0.705,241,0.637,242,0.677,243,1.065,244,0.637,245,0.691,246,0.705,247,0.65,248,1.283,249,0.65,250,0.637,251,0.65,252,0.705,253,0.637,254,0.65,255,1.023,256,0.65,257,0.637,258,0.705,259,0.637,260,0.637,261,0.624,262,0.705,263,0.637,264,0.705,265,0.65,266,0.705,267,0.705,268,0.611,269,0.705,270,0.637,271,0.705,272,0.637,273,0.705,274,0.624,275,0.624,276,0.705,277,0.624,278,0.705,279,0.65,280,0.705,281,0.637,282,0.705,283,0.65,284,0.611,285,0.705,286,0.637,287,1.023,288,0.65,289,0.705,290,0.65,291,0.705,292,0.65,293,0.705,294,0.65,295,0.705,296,0.624,297,0.705,298,0.624,299,0.705,300,0.65,301,0.705,302,0.65,303,0.705,304,0.65,305,0.705,306,0.637,307,0.705,308,0.65,309,0.65,310,0.624,311,0.65,312,0.705,313,0.637,314,0.677,315,0.705,316,0.637,317,0.705,318,0.65,319,0.961,320,0.637,321,0.705,322,0.637,323,0.705,324,0.65,325,0.562,326,1.291,327,1.885,328,0.637,329,0.705,330,0.637,331,0.904,332,0.637,333,0.705,334,0.637,335,0.705,336,0.637,337,0.65,338,1.283,339,0.65,340,0.637,341,0.705,342,0.624,343,0.691,344,0.705,345,0.004,346,0.004,347,0.003,388,2.366,401,2.705,408,3.171,410,3.013,431,2.366,433,2.197,442,0.904,445,0.849,466,1.268,600,2.596,708,3.071,801,2.493,802,2.934,840,1.576,845,2.976,1012,1.747,1087,1.79,1103,2.561,1105,1.823,1106,2.186,1108,1.72,1110,1.207,1111,1.534,1112,1.915,1121,1.207,1122,2.878,1126,0.943,1141,1.582,1142,1.582,1143,1.633,1144,1.747,1145,1.534,1147,1.489,1148,1.447,1149,1.408,1155,2.052,1156,1.812,1157,3.427,1158,2.844,1165,2.548,1170,4.724,1171,1.747,1178,2.836,1185,2.273,1188,2.417,1190,2.052,1191,2.273,1192,2.417,1195,2.836,1196,2.273,1197,1.688,1201,2.417,1207,1.23,1209,1.747,1215,2.417,1227,3.253,1245,1.688,1285,2.069,1313,2.126,1356,1.408,1371,1.447,1378,7.281,1381,1.534,1396,0.691,1408,2.015,1620,2.964,1656,2.596,1696,2.154,1726,2.465,1733,3.019,1748,2.317,1783,2.596,1786,2.836,1821,3.427,1870,1.812,2205,2.273,2713,3.433,2737,4.492,3470,2.836,3472,2.596,3484,2.596,3525,2.836,3557,5.16,4178,2.836,4187,2.836,4199,2.836,4200,2.154,4942,7.954,4943,5.824,4944,5.824,4945,5.824,4946,4.833,4947,5.824,4948,5.824,4949,3.201,4950,4.833,4951,2.836,4952,3.201,4953,3.201,4954,4.833,4955,3.201,4956,3.201,4957,4.833,4958,2.836,4959,3.201,4960,3.201,4961,3.201,4962,3.201,4963,4.833,4964,3.201,4965,3.201,4966,3.201,4967,3.201,4968,3.201,4969,4.283,4970,4.833,4971,3.201,4972,2.836,4973,3.201,4974,3.201,4975,3.201,4976,3.201,4977,3.201,4978,3.201,4979,3.201,4980,4.833,4981,3.201,4982,3.201,4983,3.201,4984,3.201,4985,3.201,4986,3.201,4987,3.201,4988,3.201,4989,3.201,4990,2.836,4991,3.201,4992,3.201,4993,3.201,4994,3.201,4995,3.201,4996,3.201,4997,3.201,4998,3.201,4999,4.833]],["title/components/TroopsComponent.html",[0,0.234,328,0.9]],["body/components/TroopsComponent.html",[0,0.263,1,0.515,2,0.783,3,0.043,4,0.06,5,0.57,6,0.57,7,0.559,8,0.57,9,0.038,11,0.69,12,1.122,13,0.515,14,1.912,15,1.908,17,0.867,19,0.867,21,0.195,22,0.372,25,3.616,27,3.427,29,0.53,32,1.276,33,0.494,35,1.317,38,0.494,42,3.054,49,1.054,51,0.994,52,0.008,53,0.691,54,0.402,55,0.821,58,1.074,59,1.239,66,0.715,69,0.7,70,1.262,71,1.136,77,2.029,89,0.149,91,0.185,93,0.976,94,0.606,98,0.047,99,0.112,102,1.395,107,1.204,108,1.109,110,1.241,113,1.236,122,1.912,135,1.278,151,1.065,172,1.055,174,2.523,175,0.909,179,1.624,221,0.417,222,0.815,223,0.832,224,0.504,225,1.276,226,0.57,227,0.57,228,0.504,229,0.57,230,0.515,231,0.57,232,1.152,233,0.57,234,1.256,235,1.282,236,1.697,237,0.525,238,0.903,239,0.515,240,0.57,241,0.515,242,0.547,243,0.903,244,0.515,245,0.559,246,0.57,247,0.525,248,1.122,249,0.525,250,0.515,251,0.525,252,0.57,253,0.515,254,0.525,255,0.867,256,0.525,257,0.515,258,0.57,259,0.515,260,0.515,261,0.504,262,0.57,263,0.515,264,0.57,265,0.525,266,0.57,267,0.57,268,0.494,269,0.57,270,0.515,271,0.57,272,0.515,273,0.57,274,0.504,275,0.504,276,0.57,277,0.504,278,0.57,279,0.525,280,0.57,281,0.515,282,0.57,283,0.525,284,0.494,285,0.57,286,0.515,287,0.867,288,0.525,289,0.57,290,0.525,291,0.57,292,0.525,293,0.57,294,0.525,295,0.57,296,0.504,297,0.57,298,0.504,299,0.57,300,0.525,301,0.57,302,0.525,303,0.57,304,0.525,305,0.57,306,0.515,307,0.57,308,0.525,309,0.525,310,1.23,311,0.525,312,0.57,313,0.515,314,0.547,315,0.57,316,0.515,317,0.57,318,0.525,319,1.532,320,0.515,321,0.57,322,0.515,323,0.57,324,0.525,325,0.454,326,0.515,327,1.251,328,1.152,329,0.57,330,0.515,331,0.766,332,0.515,333,0.57,334,0.515,335,0.57,336,0.515,337,0.525,338,0.57,339,0.525,340,0.515,341,0.57,342,0.504,343,0.559,344,0.57,345,0.002,346,0.003,347,0.002,364,1.108,396,4.13,407,2.292,408,2.801,409,2.695,410,2.788,431,2.069,433,1.92,442,0.73,445,0.686,446,1.079,447,1.079,468,3.898,479,2.098,484,1.659,489,2.098,561,2.344,565,3.264,569,1.953,585,1.838,593,2.292,708,2.684,743,1.741,801,2.18,802,2.619,805,1.838,840,1.378,845,2.354,909,1.965,1012,1.412,1087,0.795,1108,1.536,1117,2.759,1118,2.684,1123,1.051,1124,1.412,1125,1.587,1126,0.762,1130,1.838,1132,2.238,1141,2.026,1142,2.026,1146,1.741,1153,1.854,1155,1.659,1199,2.292,1201,1.953,1208,2.098,1227,1.741,1252,5.511,1254,3.805,1371,1.17,1396,1.52,1408,1.079,1410,2.292,1593,5.071,1692,2.912,1788,1.32,1821,2.996,1825,2.912,1895,1.741,1989,2.684,1996,4.999,1998,3.714,2094,2.098,2095,2.098,2096,2.292,2120,1.741,2212,3.325,2275,3.844,2515,2.912,2591,1.587,2592,1.659,2617,1.659,2713,4.114,2714,2.321,2728,1.953,2737,5.439,2741,1.953,2881,4.13,3062,2.292,3207,2.098,3213,3.325,3472,2.098,3484,2.098,3502,2.292,3509,3.325,3534,3.632,3587,2.098,3634,2.292,3635,3.632,4200,1.741,4437,2.292,4805,4.512,4806,5.133,4809,5.133,4854,3.632,4860,2.292,4869,2.292,4870,3.632,4969,3.632,4972,2.292,4990,2.292,5000,2.292,5001,5.091,5002,4.099,5003,5.091,5004,5.091,5005,4.512,5006,5.091,5007,4.099,5008,5.091,5009,4.099,5010,5.792,5011,4.099,5012,4.099,5013,4.099,5014,5.792,5015,5.792,5016,4.099,5017,5.091,5018,2.587,5019,2.587,5020,5.792,5021,2.587,5022,2.587,5023,5.792,5024,2.587,5025,2.587,5026,4.099,5027,2.587,5028,2.587,5029,5.792,5030,2.587,5031,2.587,5032,4.099,5033,2.587,5034,4.099,5035,2.587,5036,4.099,5037,2.587,5038,2.587,5039,2.587,5040,2.587,5041,2.587,5042,2.587,5043,2.587,5044,2.587,5045,2.587,5046,4.099,5047,4.099,5048,2.587,5049,2.587,5050,2.587,5051,2.587,5052,2.587,5053,2.587,5054,2.587,5055,2.587,5056,2.587,5057,2.587,5058,2.587,5059,2.587,5060,2.292,5061,2.587,5062,2.587,5063,2.587,5064,2.587,5065,4.099,5066,2.587,5067,2.587,5068,2.587,5069,2.587,5070,2.587,5071,2.292,5072,2.587,5073,4.099,5074,2.587,5075,2.587,5076,4.099,5077,2.587,5078,2.587,5079,2.587,5080,2.587,5081,2.587,5082,4.099,5083,2.587,5084,5.091,5085,2.587,5086,4.099,5087,2.587,5088,2.587,5089,2.587,5090,2.587,5091,5.091,5092,4.099,5093,4.099,5094,4.099,5095,2.587,5096,2.587,5097,2.587,5098,2.587,5099,2.587,5100,5.091,5101,2.587,5102,4.099,5103,2.098,5104,2.587,5105,2.587,5106,2.587,5107,4.099,5108,2.587,5109,2.587,5110,2.587,5111,2.587,5112,4.099,5113,4.099,5114,2.587,5115,2.292,5116,5.091,5117,2.587,5118,2.587,5119,2.587,5120,2.587,5121,2.587,5122,2.587,5123,2.587,5124,2.587,5125,2.587,5126,2.587,5127,5.091,5128,2.587,5129,2.587,5130,2.587,5131,6.717,5132,2.587,5133,2.587]],["title/interceptors/UniversalInterceptor.html",[745,3.046,779,3.215]],["body/interceptors/UniversalInterceptor.html",[3,0.106,4,0.095,9,0.095,11,1.084,21,0.306,29,1.007,38,0.775,49,0.916,51,1.03,52,0.008,53,0.631,54,0.386,55,0.915,58,0.832,89,0.16,91,0.461,95,3.086,98,0.118,99,0.279,110,1.017,153,3.514,345,0.005,346,0.007,347,0.005,521,6.171,654,2.109,779,5.534,789,5.222,796,6.32,812,6.733,854,5.883,885,6.32,886,4.744,887,7.062,889,6.32,982,5.222,1060,4.333,2971,4.573,5134,5.705,5135,6.438,5136,6.438,5137,6.438,5138,5.705,5139,5.705,5140,6.438,5141,6.438,5142,6.438,5143,7.792,5144,6.438,5145,8.707,5146,6.438,5147,6.438,5148,6.438,5149,6.438]],["title/interfaces/UrlActivity.html",[2248,0.778,2968,3.417]],["body/interfaces/UrlActivity.html",[3,0.075,4,0.066,9,0.066,21,0.214,22,0.562,26,2.892,33,1.522,47,1.931,52,0.008,54,0.461,66,1.247,68,3.204,77,1.3,89,0.14,91,0.323,98,0.114,99,0.196,108,1.62,110,1.301,112,1.701,113,1.597,118,1.417,128,2.554,151,2.139,153,4.991,274,0.879,345,0.004,346,0.005,347,0.004,379,1.328,390,1.984,445,1.196,564,3.54,577,5.051,654,1.676,831,4.335,841,3.036,845,3.491,853,3.658,860,3.969,891,3.264,897,4.758,918,3.658,1069,2.04,1087,2.173,1091,5.733,1118,2.378,1153,2.04,1230,4.674,1235,3.505,1351,3.797,1542,2.462,1616,4.153,1631,2.766,1632,3.797,1690,5.404,1691,2.892,1733,2.881,1788,2.301,2116,4.335,2118,5.71,2119,4.758,2173,4.397,2248,0.776,2250,1.549,2395,3.036,2405,6.467,2414,3.406,2447,6.171,2485,5.733,2638,5.021,2678,6.467,2694,5.663,2902,3.406,2952,3.406,2953,3.406,2954,3.204,2955,3.658,2956,3.997,2957,3.997,2958,3.997,2959,3.997,2960,3.997,2961,3.997,2962,3.658,2963,3.997,2964,3.997,2965,3.997,2966,3.997,2967,3.997,2968,5.745,2969,3.997,2971,5.404,2979,3.997,2981,3.997,2983,5.021,2984,5.486,2985,3.997,2987,3.997,2988,3.997,2989,3.997,2990,3.997,2991,3.997,2992,3.997,2994,3.997,2996,3.997,2998,3.997,3004,6.742,3013,3.658,3014,5.486,3015,5.486,3016,3.406,3017,5.733,3018,3.658,3019,3.997,3020,3.997,3021,3.997,3022,3.997,3023,3.658,3024,3.658,3025,3.997,3026,3.997,3027,3.997,3028,3.997,3029,5.486,3030,5.486,3031,3.997,3032,3.997,3033,3.997,3034,5.486,3035,3.997,3036,3.997,3037,6.264,3038,5.486,3039,5.486,3040,3.406,3041,3.997,3042,6.264,3043,3.997,3044,3.997,3045,3.997,3046,3.997]],["title/components/UserEditorComponent.html",[0,0.234,330,0.9]],["body/components/UserEditorComponent.html",[0,0.297,1,0.624,2,0.908,3,0.052,4,0.046,5,0.691,6,0.691,7,0.677,8,0.691,9,0.046,11,0.801,12,1.267,13,0.624,14,1.933,15,1.929,17,1.007,19,1.007,21,0.149,22,0.432,29,0.615,32,1.415,33,1.226,35,1.528,38,0.573,43,2.427,44,3.275,46,3.077,49,1.036,51,0.76,52,0.008,53,0.658,54,0.385,55,0.628,58,1.005,59,1.198,66,1.315,69,1.288,70,1.031,71,0.928,73,2.933,89,0.149,91,0.224,92,1.007,93,1.183,94,0.735,97,1.653,98,0.057,99,0.136,110,0.751,113,1.366,116,1.653,118,1.495,120,1.653,151,0.814,162,3.051,172,1.192,174,1.528,218,1.503,221,0.506,222,0.947,223,0.966,224,0.611,225,1.415,226,0.691,227,0.691,228,0.611,229,0.691,230,0.624,231,0.691,232,0.624,233,0.691,234,0.624,235,1.551,236,1.79,237,0.637,238,1.049,239,0.624,240,0.691,241,0.624,242,0.663,243,1.049,244,0.624,245,1.027,246,0.691,247,0.637,248,1.267,249,0.637,250,0.624,251,0.637,252,0.691,253,0.624,254,0.637,255,1.007,256,0.637,257,0.624,258,0.691,259,0.624,260,0.624,261,0.611,262,0.691,263,0.624,264,0.691,265,0.637,266,1.267,267,0.691,268,0.598,269,0.691,270,0.624,271,0.691,272,0.624,273,0.691,274,0.611,275,0.611,276,0.691,277,0.611,278,0.691,279,0.637,280,0.691,281,0.624,282,0.691,283,0.637,284,0.598,285,0.691,286,0.624,287,1.007,288,0.637,289,0.691,290,0.637,291,0.691,292,0.637,293,0.691,294,0.966,295,0.691,296,0.611,297,0.691,298,0.611,299,0.691,300,0.637,301,0.691,302,0.637,303,0.691,304,0.637,305,0.691,306,0.624,307,0.691,308,0.637,309,0.637,310,0.611,311,0.637,312,0.691,313,0.624,314,0.663,315,0.691,316,0.624,317,0.691,318,0.637,319,0.624,320,0.624,321,0.691,322,0.624,323,0.691,324,0.637,325,1.01,326,0.624,327,0.677,328,0.624,329,0.691,330,1.277,331,1.681,332,0.624,333,0.691,334,0.624,335,0.691,336,0.624,337,0.637,338,1.267,339,0.637,340,0.624,341,0.691,342,0.611,343,0.677,344,0.691,345,0.003,346,0.004,347,0.003,379,0.923,408,3.148,410,2.991,431,3.161,442,0.885,484,3.051,485,3.38,577,2.918,708,3.032,725,3.778,801,2.462,802,2.903,804,3.778,840,1.557,845,2.952,910,2.11,911,2.11,949,2.543,1012,3.504,1105,1.795,1106,2.152,1108,1.702,1110,1.183,1111,1.503,1112,1.885,1121,1.183,1122,3.173,1123,2.337,1126,0.923,1141,3.173,1142,3.173,1147,1.459,1148,1.418,1149,1.379,1152,3.593,1156,1.775,1157,3.384,1158,2.8,1164,3.203,1165,3.831,1171,1.711,1181,2.543,1185,2.227,1188,2.367,1190,2.01,1193,2.367,1196,3.38,1197,1.653,1207,0.797,1209,3.139,1219,2.543,1245,1.653,1246,2.367,1247,5.689,1279,4.216,1288,4.216,1396,1.027,1542,3.139,1631,2.918,1632,2.918,1692,2.227,1788,1.599,1821,2.8,1999,2.227,2173,4.56,2205,3.38,2375,2.367,2396,3.203,2582,4.085,2729,3.256,2745,3.38,2809,2.778,2811,3.051,2817,4.56,2820,2.543,2822,3.38,2824,4.56,3016,3.593,3100,4.342,3115,3.859,3154,3.593,3249,3.859,3306,3.859,3642,5.207,3964,4.848,3997,2.367,4012,3.593,4016,4.216,4017,4.216,4018,3.859,4019,3.859,4020,3.38,4021,3.859,4022,4.216,4023,4.216,4175,2.543,4179,2.543,4200,2.11,4366,2.778,5103,3.859,5150,7.855,5151,7.19,5152,5.751,5153,5.751,5154,5.751,5155,5.751,5156,6.42,5157,4.758,5158,2.778,5159,2.778,5160,3.135,5161,3.135,5162,3.135,5163,3.135,5164,4.758,5165,3.135,5166,4.758,5167,3.135,5168,2.778,5169,3.135,5170,2.778,5171,3.135,5172,3.135,5173,3.135,5174,3.135,5175,3.135,5176,2.778,5177,3.135,5178,3.135,5179,3.135,5180,3.135,5181,3.135,5182,3.135,5183,3.135,5184,3.135,5185,3.135,5186,3.135,5187,3.135,5188,3.135,5189,3.135,5190,3.135,5191,3.135,5192,3.135,5193,4.758,5194,4.758,5195,6.42,5196,4.216,5197,4.758]],["title/injectables/UserService.html",[408,1.887,654,1.225]],["body/injectables/UserService.html",[3,0.076,4,0.068,9,0.068,21,0.219,22,0.572,29,0.813,35,2.022,38,0.557,40,3.684,47,2.695,48,4.351,49,1.042,51,1.097,52,0.008,53,0.7,54,0.428,55,0.906,56,3.237,58,1.072,59,0.762,69,1.251,70,1.129,71,1.016,77,2.064,89,0.158,91,0.331,94,1.083,95,2.215,96,2.834,98,0.085,99,0.2,102,1.083,108,1.412,110,1.341,112,1.743,113,1.603,118,1.978,151,1.635,185,1.979,193,2.215,196,2.847,197,3.111,198,3.283,235,0.882,331,1.437,345,0.004,346,0.005,347,0.004,390,2.033,408,2.625,431,2.558,445,1.225,453,2.437,466,1.831,507,4.096,508,4.096,510,2.151,511,4.096,512,4.096,517,4.036,530,2.617,654,1.704,708,3.775,762,6.234,785,2.834,813,6.072,816,6.811,840,1.938,841,3.111,848,4.096,891,4.24,905,4.096,906,4.096,908,2.72,924,5.807,925,6.811,928,4.096,936,4.096,1032,2.151,1069,2.09,1087,2.551,1108,2.038,1118,2.437,1123,1.878,1126,1.361,1207,1.601,1396,1.546,1408,2.625,1450,3.283,1616,2.523,1656,3.749,1711,3.111,1972,2.834,2240,4.096,2375,3.49,2392,4.237,2675,4.753,2694,3.283,2729,2.617,2811,2.963,3018,3.749,3118,3.749,3128,3.749,3179,3.49,4010,5.578,4200,4.818,4435,4.096,5176,6.811,5198,4.096,5199,7.159,5200,7.159,5201,6.295,5202,6.295,5203,6.295,5204,6.295,5205,6.295,5206,6.295,5207,4.622,5208,6.295,5209,4.622,5210,6.295,5211,4.622,5212,6.295,5213,4.622,5214,4.622,5215,6.295,5216,4.622,5217,6.295,5218,4.622,5219,4.622,5220,4.622,5221,5.106,5222,7.159,5223,4.622,5224,6.295,5225,4.622,5226,4.622,5227,4.622,5228,4.622,5229,4.622,5230,4.622,5231,4.622,5232,4.622,5233,4.622,5234,4.622,5235,4.622,5236,4.622,5237,4.622,5238,4.622,5239,4.622,5240,4.622,5241,4.622,5242,4.622,5243,4.622,5244,4.622,5245,4.622,5246,4.622,5247,4.622,5248,4.622]],["title/components/UsersComponent.html",[0,0.234,332,0.9]],["body/components/UsersComponent.html",[0,0.348,1,0.82,2,1.11,3,0.068,4,0.086,5,0.909,6,0.909,7,0.89,8,0.909,9,0.061,11,0.979,12,1.485,13,0.82,14,1.957,15,1.955,17,1.23,19,1.23,21,0.196,22,0.528,29,0.752,32,1.613,33,0.787,38,0.7,45,3.815,46,3.508,49,0.941,51,0.769,52,0.008,53,0.701,54,0.334,55,0.635,58,0.752,59,0.68,66,1.608,70,1.043,71,0.939,89,0.151,91,0.295,94,0.966,97,2.174,98,0.076,99,0.179,110,0.651,113,1.285,151,1.51,172,1.397,174,2.572,221,0.665,222,1.157,223,1.181,224,0.804,225,1.613,226,0.909,227,0.909,228,0.804,229,0.909,230,0.82,231,0.909,232,0.82,233,0.909,234,0.82,235,1.571,236,1.909,237,0.837,238,1.282,239,0.82,240,0.909,241,0.82,242,0.872,243,1.282,244,0.82,245,0.89,246,0.909,247,0.837,248,1.485,249,0.837,250,0.82,251,0.837,252,0.909,253,0.82,254,0.837,255,1.23,256,0.837,257,0.82,258,0.909,259,0.82,260,0.82,261,0.804,262,0.909,263,0.82,264,0.909,265,0.837,266,0.909,267,0.909,268,0.787,269,0.909,270,0.82,271,0.909,272,0.82,273,0.909,274,0.804,275,0.804,276,0.909,277,0.804,278,0.909,279,0.837,280,0.909,281,0.82,282,0.909,283,0.837,284,0.787,285,0.909,286,0.82,287,1.23,288,0.837,289,0.909,290,0.837,291,0.909,292,0.837,293,0.909,294,0.837,295,0.909,296,0.804,297,0.909,298,0.804,299,0.909,300,0.837,301,0.909,302,0.837,303,0.909,304,0.837,305,0.909,306,0.82,307,0.909,308,0.837,309,0.837,310,0.804,311,0.837,312,0.909,313,0.82,314,0.872,315,0.909,316,0.82,317,0.909,318,0.837,319,0.82,320,0.82,321,0.909,322,0.82,323,0.909,324,0.837,325,0.724,326,0.82,327,0.89,328,0.82,329,0.909,330,0.82,331,1.368,332,1.456,333,0.909,334,0.82,335,0.909,336,0.82,337,0.837,338,0.909,339,0.837,340,0.82,341,0.909,342,0.804,343,0.89,344,0.909,345,0.003,346,0.005,347,0.003,410,3.26,431,2.974,442,1.164,445,1.093,524,5.154,564,1.919,801,2.885,802,3.31,840,1.575,1105,2.194,1106,2.63,1107,2.529,1108,1.94,1110,1.555,1111,1.976,1112,2.304,1117,3.915,1118,3.553,1121,1.555,1123,2.974,1124,2.251,1125,2.529,1126,1.214,1127,3.345,1141,2.038,1142,2.038,1146,2.775,1147,1.919,1148,1.865,1149,2.558,1150,2.529,1153,2.63,1470,6.046,2817,2.929,4000,5.154,4804,5.465,5170,3.654,5249,3.654,5250,6.739,5251,5.817,5252,6.739,5253,5.817,5254,5.817,5255,4.124,5256,4.124,5257,7.319,5258,4.124,5259,4.124,5260,4.124,5261,4.124,5262,4.124,5263,4.124,5264,5.817]],["title/modules/UsersModule.html",[348,1.362,1549,3.215]],["body/modules/UsersModule.html",[3,0.102,4,0.091,9,0.091,52,0.008,89,0.17,91,0.442,92,1.984,98,0.113,99,0.268,221,0.997,294,1.864,330,1.785,331,1.155,332,1.785,345,0.005,346,0.006,347,0.005,348,1.859,350,2.448,351,2.717,352,3.829,353,2.875,354,2.576,355,2.645,362,4.058,363,3.642,364,2.645,365,2.448,367,3.253,368,3.253,369,4.006,370,2.717,371,3.755,376,3.876,377,4.147,378,3.755,379,1.819,380,3.372,442,1.744,675,4.147,677,4.471,678,4.659,679,4.872,680,5.397,754,4.006,1366,5.737,1367,5.737,1371,2.794,1549,6.676,1552,5.114,2222,6.163,5151,5.011,5168,5.474,5265,5.474,5266,5.474,5267,6.178,5268,6.178,5269,6.178]],["title/pipes/UtcDatePipe.html",[672,2.386,4642,3.215]],["body/pipes/UtcDatePipe.html",[3,0.115,4,0.102,9,0.102,11,1.167,13,1.379,29,0.896,49,0.815,51,0.917,52,0.008,53,0.7,54,0.343,55,0.757,58,0.896,71,1.119,89,0.149,91,0.496,98,0.127,99,0.301,110,1.095,345,0.006,346,0.007,347,0.006,574,4.252,672,4.294,909,3.323,1408,2.891,2614,5.623,3081,7.013,3760,5.235,3767,7.216,4642,5.784,5270,7.216,5271,6.143,5272,8.144,5273,8.144,5274,6.933,5275,6.933,5276,6.933]],["title/components/VenueComponent.html",[0,0.234,334,0.9]],["body/components/VenueComponent.html",[0,0.343,1,0.801,2,1.091,3,0.067,4,0.084,5,0.887,6,0.887,7,0.869,8,0.887,9,0.059,11,0.963,12,1.465,13,0.801,14,1.955,15,1.953,17,1.21,19,1.21,21,0.191,22,0.519,29,0.739,32,1.596,33,0.768,38,0.689,49,0.899,51,0.532,52,0.008,53,0.698,54,0.283,55,0.44,58,0.52,59,0.664,66,1.58,69,1.09,70,1.025,71,0.923,89,0.15,91,0.288,93,1.518,94,0.943,98,0.074,99,0.174,113,1.272,151,1.485,172,1.378,174,2.767,177,2.604,180,3.039,194,2.731,217,3.369,221,0.649,222,1.137,223,1.161,224,0.784,225,1.596,226,0.887,227,0.887,228,0.784,229,0.887,230,0.801,231,0.887,232,0.801,233,0.887,234,0.801,235,1.091,236,1.899,237,0.817,238,1.26,239,0.801,240,0.887,241,0.801,242,0.851,243,1.26,244,0.801,245,0.869,246,0.887,247,0.817,248,1.465,249,0.817,250,0.801,251,0.817,252,0.887,253,0.801,254,0.817,255,1.21,256,0.817,257,0.801,258,0.887,259,0.801,260,0.801,261,0.784,262,0.887,263,0.801,264,0.887,265,0.817,266,0.887,267,0.887,268,0.768,269,0.887,270,0.801,271,0.887,272,0.801,273,0.887,274,0.784,275,0.784,276,0.887,277,0.784,278,0.887,279,0.817,280,0.887,281,0.801,282,0.887,283,0.817,284,0.768,285,0.887,286,0.801,287,1.21,288,0.817,289,0.887,290,0.817,291,0.887,292,0.817,293,0.887,294,0.817,295,0.887,296,0.784,297,0.887,298,0.784,299,0.887,300,0.817,301,0.887,302,0.817,303,0.887,304,0.817,305,0.887,306,0.801,307,0.887,308,0.817,309,0.817,310,0.784,311,0.817,312,0.887,313,0.801,314,0.851,315,0.887,316,0.801,317,0.887,318,0.817,319,0.801,320,0.801,321,0.887,322,0.801,323,0.887,324,0.817,325,0.707,326,0.801,327,0.869,328,0.801,329,0.887,330,0.801,331,0.753,332,0.801,333,0.887,334,1.44,335,0.887,336,0.801,337,1.659,338,0.887,339,0.817,340,0.801,341,0.887,342,0.784,343,0.869,344,0.887,345,0.003,346,0.005,347,0.003,408,3.407,410,3.238,442,1.136,445,1.067,801,2.847,802,3.274,840,1.548,1105,2.157,1106,2.586,1107,2.468,1108,1.919,1110,1.518,1111,1.929,1112,2.265,1117,3.848,1118,3.506,1121,1.518,1123,1.635,1124,2.197,1125,2.468,1126,1.185,1132,2.197,1141,1.989,1142,1.989,1146,2.709,1147,1.873,1148,1.82,1149,2.515,1150,2.468,1153,2.586,2719,3.265,2802,2.581,2822,5.142,2824,5.432,2829,5.393,3040,4.317,3532,4.637,3644,5.872,4916,3.567,4917,3.567,5005,5.892,5277,3.567,5278,6.65,5279,5.718,5280,6.65,5281,5.718,5282,4.025,5283,4.025,5284,4.025,5285,4.025,5286,4.025,5287,4.025,5288,5.718,5289,5.718,5290,5.066,5291,5.066,5292,5.718,5293,5.718,5294,5.718,5295,4.025]],["title/components/VenueEditorComponent.html",[0,0.234,336,0.9]],["body/components/VenueEditorComponent.html",[0,0.282,1,0.573,2,0.851,3,0.048,4,0.042,5,0.635,6,0.635,7,0.622,8,0.635,9,0.042,11,0.751,12,1.202,13,0.573,14,1.924,15,1.92,17,0.943,19,0.943,21,0.137,22,0.405,29,0.576,32,1.353,33,1.268,35,1.432,38,0.537,43,2.274,44,3.132,47,2.629,48,3.477,49,1.022,51,0.878,52,0.008,53,0.694,54,0.375,55,0.725,58,1.004,59,1.281,62,1.694,66,1.508,69,1.207,70,0.978,71,1.072,73,2.782,89,0.143,91,0.206,92,0.925,94,0.675,95,1.38,98,0.053,99,0.125,102,0.938,110,1.11,113,1.234,118,1.401,120,1.518,122,1.562,172,1.131,174,1.752,179,1.141,219,2.858,221,0.465,222,0.887,223,0.905,224,0.561,225,1.353,226,0.635,227,0.635,228,0.561,229,0.635,230,0.573,231,0.635,232,0.573,233,0.635,234,0.573,235,0.851,236,1.75,237,0.585,238,0.982,239,0.573,240,0.635,241,0.573,242,0.609,243,0.982,244,0.573,245,0.622,246,0.635,247,0.585,248,1.202,249,0.585,250,0.573,251,0.585,252,0.635,253,0.573,254,0.585,255,0.943,256,0.585,257,0.573,258,0.635,259,0.573,260,0.573,261,0.561,262,0.635,263,0.573,264,0.635,265,0.585,266,0.635,267,0.635,268,0.55,269,0.635,270,0.573,271,0.635,272,0.573,273,0.635,274,0.561,275,0.561,276,0.635,277,0.561,278,0.635,279,0.585,280,0.635,281,0.573,282,0.635,283,0.585,284,0.55,285,0.635,286,0.573,287,0.943,288,0.585,289,0.635,290,0.585,291,0.635,292,0.585,293,0.635,294,0.585,295,0.635,296,0.561,297,0.635,298,0.561,299,0.635,300,0.585,301,0.635,302,0.585,303,0.635,304,0.585,305,0.635,306,0.573,307,0.635,308,0.585,309,0.585,310,0.561,311,0.585,312,0.635,313,0.573,314,0.609,315,0.635,316,0.573,317,0.635,318,0.585,319,0.573,320,0.573,321,0.635,322,0.573,323,0.635,324,0.585,325,0.958,326,0.573,327,0.622,328,0.573,329,0.635,330,0.573,331,0.834,332,0.573,333,0.635,334,0.573,335,0.635,336,1.222,337,1.849,338,1.202,339,0.585,340,0.573,341,0.635,342,0.561,343,0.622,344,0.635,345,0.002,346,0.004,347,0.006,379,0.848,409,2.858,410,2.903,420,3.874,442,0.813,446,1.201,447,1.201,485,4.362,521,1.938,577,2.734,672,1.518,749,2.174,785,1.766,801,2.335,802,2.777,840,1.477,845,2.855,908,1.694,1001,2.174,1012,1.572,1105,1.681,1106,2.016,1108,1.628,1110,1.086,1111,1.38,1112,1.766,1121,1.086,1141,2.203,1142,2.203,1147,1.34,1148,1.302,1149,1.266,1156,1.63,1157,3.21,1158,2.623,1165,3.704,1171,1.572,1185,2.045,1187,2.335,1194,2.045,1197,1.518,1207,1.388,1209,3.999,1215,2.174,1235,1.63,1245,1.518,1246,4.118,1272,5.698,1282,3.95,1296,3.95,1297,5.442,1299,2.551,1314,3.616,1315,1.938,1331,2.551,1332,2.551,1333,2.551,1334,2.551,1335,2.551,1336,2.551,1396,1.326,1401,1.938,1415,2.335,1416,2.174,1788,2.274,1999,2.045,2168,3.95,2205,2.045,2214,3.616,2392,1.938,2719,2.335,2729,2.524,2736,3.166,2802,4.504,2822,5.742,2823,5.886,2824,5.52,2825,4.833,2826,4.833,2827,6.708,2828,6.708,2829,4.424,3203,3.616,3287,3.616,3456,4.981,3536,3.616,3784,2.551,3849,3.95,3997,2.174,4020,3.166,4685,2.551,4913,6.886,4919,3.95,4951,2.551,4958,2.551,5071,3.95,5158,2.551,5159,2.551,5290,3.95,5291,5.442,5296,7.753,5297,7.096,5298,5.455,5299,5.455,5300,5.455,5301,5.455,5302,6.141,5303,4.458,5304,4.458,5305,4.458,5306,2.879,5307,2.879,5308,2.879,5309,4.458,5310,2.879,5311,2.879,5312,2.879,5313,4.458,5314,2.879,5315,4.458,5316,2.879,5317,2.879,5318,2.879,5319,2.879,5320,2.879,5321,2.879,5322,2.879,5323,6.141,5324,4.458,5325,2.879,5326,2.879,5327,2.879,5328,2.879,5329,2.879,5330,2.879,5331,2.879,5332,2.879,5333,2.879,5334,2.879,5335,2.879,5336,2.879,5337,2.879,5338,2.879,5339,2.879,5340,2.879,5341,2.879,5342,2.879,5343,2.879,5344,2.879,5345,2.879,5346,2.879,5347,2.879,5348,2.879,5349,2.879,5350,2.879,5351,2.879,5352,2.879,5353,2.879,5354,2.879,5355,2.879,5356,2.879,5357,2.879,5358,2.879,5359,2.879,5360,2.879,5361,2.879,5362,2.879,5363,2.879,5364,2.879,5365,2.879,5366,2.879,5367,2.879,5368,2.879,5369,4.458,5370,4.458,5371,4.458,5372,7.025,5373,4.458,5374,7.025,5375,6.141,5376,6.141,5377,6.141,5378,4.458,5379,4.458,5380,4.458,5381,4.458,5382,4.458,5383,4.458,5384,4.458,5385,4.458,5386,2.879,5387,2.879]],["title/modules/VenueModule.html",[348,1.362,1550,3.215]],["body/modules/VenueModule.html",[3,0.105,4,0.093,9,0.093,52,0.008,89,0.17,91,0.454,92,2.036,98,0.116,99,0.275,221,1.023,334,1.796,336,1.796,337,1.288,345,0.005,346,0.006,347,0.005,348,1.908,350,2.512,351,2.789,352,3.873,353,2.951,354,2.644,355,2.714,362,4.083,363,3.7,364,2.714,365,2.512,367,3.305,368,3.305,369,4.07,370,2.789,371,3.815,376,3.938,377,4.214,378,3.815,379,1.867,380,3.461,442,1.79,673,6.262,674,4.788,675,4.214,677,4.543,678,4.734,754,4.07,1366,5.829,1367,5.829,1371,2.867,1550,6.639,5297,5.143,5388,5.619,5389,5.619,5390,6.341,5391,6.341,5392,6.341]],["title/coverage.html",[5393,5.499]],["body/coverage.html",[0,0.492,1,0.669,9,0.05,10,2.98,40,1.612,42,1.773,46,1.612,52,0.008,54,0.167,75,2.389,99,0.308,122,2.466,151,0.873,224,0.977,228,0.655,230,0.669,232,0.669,234,0.669,237,0.683,239,0.669,241,0.669,244,0.669,247,0.683,249,0.683,251,0.683,253,0.669,254,0.683,256,0.683,257,0.669,259,0.669,261,0.655,263,0.669,265,0.683,268,0.642,270,0.669,272,0.669,274,0.655,275,0.655,277,0.655,279,0.683,281,0.669,283,0.683,286,0.669,288,0.683,290,0.683,292,0.683,294,0.683,296,0.655,298,0.655,300,0.683,302,0.683,304,0.683,306,0.669,308,0.683,309,0.683,310,0.977,311,0.683,313,0.669,316,0.669,318,0.683,320,0.669,322,0.669,324,0.683,326,0.669,328,0.669,330,0.669,332,0.669,334,0.669,336,0.669,340,0.669,342,0.655,345,0.003,346,0.004,347,0.003,384,3.376,387,2.98,408,1.402,431,1.366,449,3.076,453,1.773,535,2.156,581,2.539,642,2.263,643,2.263,644,4.53,654,2.366,672,2.645,701,4.363,707,2.539,711,2.539,727,2.539,745,4.038,755,2.539,779,2.389,790,2.98,804,1.979,806,2.389,965,2.156,1025,2.98,1033,4.068,1063,2.727,1077,3.563,1079,2.98,1080,2.98,1099,2.98,1108,0.892,1122,1.662,1124,1.836,1154,2.98,1155,2.156,1156,4.75,1265,2.98,1266,2.727,1267,4.068,1316,2.727,1318,4.476,1363,2.389,1374,2.727,1378,2.727,1381,1.612,1382,2.98,1393,1.268,1403,1.612,1448,2.98,1464,2.98,1480,2.98,1481,2.98,1492,2.263,1540,2.156,1562,2.727,1568,2.263,1569,2.263,1606,2.539,1608,2.727,1611,2.98,1612,2.539,1613,2.98,1716,2.98,1766,2.727,1770,2.98,1771,2.727,1777,1.44,1809,2.98,1857,1.479,1867,2.156,1891,1.836,1938,2.98,1965,2.98,1969,2.389,1983,2.98,1984,2.727,1989,1.773,2021,2.98,2053,2.98,2135,2.98,2136,2.539,2137,4.068,2165,2.98,2166,2.98,2191,2.98,2229,2.539,2236,3.563,2248,1.583,2249,2.539,2251,4.068,2252,4.53,2259,2.539,2320,2.98,2353,4.53,2373,2.539,2409,2.727,2410,2.98,2505,2.98,2506,2.727,2507,2.98,2524,4.068,2547,2.539,2628,2.389,2629,4.476,2630,2.98,2634,2.98,2660,2.98,2684,4.068,2709,2.062,2710,2.98,2712,2.98,2714,1.904,2715,1.836,2716,2.98,2717,2.263,2718,2.98,2721,2.98,2722,2.156,2723,1.979,2724,2.98,2725,2.98,2737,2.062,2738,4.068,2739,2.98,2750,1.904,2751,2.98,2759,2.062,2760,2.98,2764,2.539,2765,4.068,2768,2.389,2774,2.98,2776,2.98,2778,4.068,2787,2.539,2788,4.068,2801,2.539,2802,2.156,2807,2.98,2808,3.787,2817,2.389,2821,2.98,2830,2.98,2831,2.98,2852,2.98,2952,2.539,2953,4.53,2954,4.261,2955,4.068,2968,2.539,3047,2.98,3077,2.98,3094,2.98,3146,2.98,3161,2.98,3230,2.98,3274,2.98,3275,2.727,3276,2.98,3291,2.389,3296,2.727,3380,2.98,3442,4.068,3542,2.727,3543,2.727,3653,2.98,3759,2.389,3761,2.98,3762,2.98,3775,2.727,3776,4.445,3780,2.539,3923,2.98,3977,2.727,4025,2.98,4040,4.068,4041,4.068,4048,2.98,4078,2.98,4079,2.727,4080,2.98,4097,2.727,4108,2.98,4167,2.98,4340,3.787,4449,2.98,4533,2.98,4642,2.389,4664,2.98,4665,2.98,4761,2.98,4773,2.98,4801,2.98,4878,5.022,4879,5.022,4880,2.727,4906,2.98,4942,2.98,5000,2.98,5103,4.068,5134,2.98,5150,2.98,5151,2.727,5196,2.98,5198,2.98,5249,2.98,5270,2.98,5271,2.98,5277,2.98,5296,2.98,5297,2.727,5393,2.98,5394,3.363,5395,3.363,5396,5.999,5397,5.999,5398,8.74,5399,7.946,5400,2.98,5401,8.589,5402,7.946,5403,5.016,5404,6.651,5405,5.999,5406,7.462,5407,7.462,5408,3.363,5409,5.999,5410,7.731,5411,3.363,5412,5.999,5413,5.016,5414,7.462,5415,7.115,5416,6.651,5417,3.363,5418,5.016,5419,3.363,5420,3.363,5421,3.363,5422,3.363,5423,2.98,5424,3.363,5425,3.363,5426,3.363,5427,3.363,5428,3.363,5429,6.651,5430,5.016,5431,3.363,5432,2.98,5433,2.98,5434,3.363,5435,5.999,5436,3.363,5437,3.363,5438,3.363,5439,3.363,5440,3.363,5441,3.363,5442,5.016,5443,3.363,5444,3.363,5445,3.363,5446,3.363,5447,3.363,5448,3.363,5449,3.363,5450,3.363,5451,3.363,5452,3.363,5453,2.98,5454,2.98,5455,3.363]],["title/dependencies.html",[351,2.398,2983,3.054]],["body/dependencies.html",[4,0.088,13,1.191,47,3.474,52,0.008,56,3.37,66,1.655,91,0.428,92,1.923,196,2.708,222,1.191,345,0.005,346,0.006,347,0.005,351,2.633,370,2.633,379,1.763,442,1.69,443,4.521,444,4.521,445,1.587,446,3.107,447,2.496,628,4.856,629,3.839,652,5.202,661,4.521,662,4.521,666,4.856,667,5.627,669,4.253,671,4.253,672,3.157,674,4.521,782,4.253,784,5.305,785,3.672,786,5.305,827,5.627,909,2.87,916,3.672,1103,2.633,2356,7.325,2357,5.764,2360,6.887,2364,6.604,2367,5.305,2369,5.305,2401,4.03,2448,5.305,2805,4.856,3726,5.305,5060,5.305,5138,5.305,5139,5.305,5456,5.987,5457,5.987,5458,9.266,5459,5.987,5460,7.452,5461,5.987,5462,5.987,5463,5.987,5464,5.987,5465,5.987,5466,5.987,5467,7.452,5468,5.987,5469,5.987,5470,5.987,5471,5.987,5472,5.987,5473,5.987,5474,5.987,5475,5.987,5476,5.987,5477,5.987,5478,5.987,5479,5.987,5480,5.987,5481,5.987,5482,5.987,5483,5.987,5484,5.987,5485,5.987,5486,5.987,5487,5.987,5488,5.987,5489,5.987,5490,5.987,5491,5.305,5492,5.987,5493,5.987,5494,5.987,5495,5.987,5496,5.987,5497,5.987,5498,5.987,5499,5.987,5500,5.987,5501,5.987,5502,5.987,5503,5.987]],["title/miscellaneous/enumerations.html",[5504,2.309,5505,4.83]],["body/miscellaneous/enumerations.html",[21,0.301,52,0.008,54,0.382,71,1.553,122,1.611,135,4.461,235,1.473,331,1.184,345,0.005,346,0.006,347,0.005,530,3.585,561,2.899,581,4.782,831,3.884,845,2.573,846,5.136,948,4.211,965,4.06,1123,3.134,1137,4.782,1328,5.136,1405,4.539,1540,4.06,1994,4.946,1996,4.498,1998,5.334,2293,4.211,2392,4.262,2588,4.06,2629,4.262,2633,5.825,2638,4.498,2698,5.136,2808,4.782,2813,5.136,2814,5.825,2815,5.136,2816,5.136,3528,5.136,3529,5.136,3977,5.136,4271,5.136,4446,5.612,5504,3.884,5505,5.612,5506,6.333,5507,6.333,5508,6.333,5509,6.333,5510,7.714,5511,6.333,5512,6.333,5513,5.612,5514,6.333,5515,6.333,5516,6.333,5517,6.333,5518,6.333,5519,6.333,5520,6.333,5521,6.333,5522,6.333,5523,6.333,5524,6.333]],["title/miscellaneous/functions.html",[5221,4.421,5504,2.309]],["body/miscellaneous/functions.html",[21,0.332,47,2.997,51,1.184,52,0.008,53,0.725,55,0.977,71,1.322,345,0.006,346,0.007,347,0.006,644,5.286,703,5.678,707,6.555,727,6.184,1316,6.643,1318,4.712,2353,5.286,2359,6.203,2409,6.643,4878,5.286,4879,6.555,4890,6.203,4892,6.203,5221,5.678,5423,7.257,5504,4.293,5525,6.203,5526,8.19,5527,7.257,5528,7]],["title/index.html",[21,0.179,3862,3.054,5529,3.766]],["body/index.html",[0,0.313,25,5.333,52,0.006,70,1.087,162,5.467,224,1.181,345,0.005,346,0.006,347,0.005,466,2.401,537,4.575,557,3.885,647,4.575,672,3.195,782,5.333,819,2.904,841,4.078,843,4.575,879,5.369,896,4.575,1035,5.369,1040,7.556,1041,7.229,1206,6.089,1230,4.575,1426,3.565,1428,4.814,1748,2.904,1962,4.078,2119,3.307,2357,5.333,2389,7.767,2396,5.053,2401,5.739,2471,5.369,2521,3.885,2585,4.914,2745,4.304,3079,7.229,3154,4.575,3265,5.369,3742,5.369,3968,6.744,4009,5.369,5115,5.369,5491,5.369,5530,6.059,5531,8.527,5532,6.059,5533,6.059,5534,6.059,5535,6.059,5536,6.059,5537,6.059,5538,6.059,5539,6.059,5540,7.508,5541,7.508,5542,8.765,5543,6.059,5544,6.059,5545,6.059,5546,6.059,5547,6.059,5548,6.059,5549,6.059,5550,6.059,5551,6.059,5552,6.059,5553,6.059,5554,6.059,5555,6.059,5556,7.508,5557,6.059,5558,7.508,5559,6.059,5560,6.059,5561,7.508,5562,7.508,5563,6.059,5564,6.059,5565,9.223,5566,7.508,5567,7.508,5568,5.369,5569,6.059,5570,6.059,5571,6.059,5572,6.059,5573,7.508,5574,6.059,5575,6.059,5576,7.508,5577,6.059,5578,8.158,5579,6.059,5580,6.059,5581,7.508,5582,7.508,5583,6.059,5584,6.059,5585,6.059,5586,6.059,5587,6.059,5588,6.059,5589,6.059,5590,6.059,5591,6.059,5592,6.059]],["title/modules.html",[350,2.459]],["body/modules.html",[52,0.007,56,4.313,345,0.006,346,0.007,347,0.006,349,4.73,350,2.638,359,4.482,360,4.482,361,4.482,362,3.011,484,5.646,634,4.482,640,4.482,641,4.482,774,5.028,840,2.384,1357,4.73,1362,4.482,1543,5.028,1547,4.73,1548,4.73,1549,4.73,1550,4.73,2216,5.028,2220,4.73,5593,9.538,5594,9.538,5595,9.61]],["title/overview.html",[5596,5.499]],["body/overview.html",[1,1.241,2,0.686,52,0.008,135,3.083,221,0.58,228,1.611,230,1.241,232,1.241,234,1.241,237,1.604,239,1.241,241,1.241,244,1.241,247,1.604,249,1.604,251,1.604,253,1.241,254,1.604,256,1.604,257,1.571,259,1.571,261,1.216,263,1.241,265,1.604,268,1.191,270,1.241,272,1.241,274,1.539,275,1.216,277,1.216,279,1.267,281,1.241,283,1.604,286,1.241,288,1.267,290,1.604,292,1.604,294,1.267,296,1.216,298,1.216,300,1.267,302,1.604,304,1.267,306,1.241,308,1.267,309,1.604,311,1.604,313,1.241,316,1.241,318,1.267,320,1.241,322,1.241,324,1.267,326,1.241,328,1.241,330,1.241,332,1.241,334,1.241,336,1.241,339,0.73,340,1.571,342,1.539,345,0.003,346,0.004,347,0.003,348,1.082,349,6.179,350,1.424,351,1.581,352,1.673,353,1.673,354,1.499,355,1.539,356,3.186,357,3.186,358,3.186,359,5.905,360,5.798,361,5.798,362,4.311,363,2.526,364,1.539,365,1.424,634,6.223,635,3.186,636,3.186,637,3.186,638,3.186,639,3.186,640,4.199,641,4.199,642,4.199,643,4.199,774,5.964,775,3.186,778,3.186,779,4.431,965,2.305,1032,1.673,1078,2.714,1357,6.551,1358,3.186,1359,3.186,1360,3.186,1361,3.186,1362,5.798,1363,4.431,1543,6.902,1544,3.186,1545,3.186,1546,3.186,1547,4.431,1548,6.583,1549,6.049,1550,5.87,1598,3.186,1599,3.186,1601,3.186,1932,3.186,1933,3.186,1935,3.186,2130,3.186,2131,3.186,2133,3.186,2216,6.902,2217,3.186,2218,3.186,2219,3.186,2220,4.431,2250,1.235,2293,1.962,3759,5.61,3760,2.714,4527,3.186,4528,3.186,4530,3.186,4639,3.186,4640,3.186,4641,3.186,4642,5.61,4928,3.186,4929,3.186,5265,3.186,5266,3.186,5388,3.186,5389,3.186,5433,3.186,5596,3.186,5597,3.595,5598,3.595,5599,3.595]],["title/miscellaneous/typealiases.html",[5504,2.309,5600,5.451]],["body/miscellaneous/typealiases.html",[21,0.351,52,0.007,54,0.366,345,0.006,346,0.007,347,0.006,701,4.532,1606,5.58,3542,5.994,3543,6.854,3550,7.488,5504,4.532,5601,7.39,5602,7.39]],["title/miscellaneous/variables.html",[3727,4.421,5504,2.309]],["body/miscellaneous/variables.html",[21,0.266,52,0.008,53,0.694,54,0.434,59,1.179,68,5.08,69,1.518,70,1.616,71,1.454,77,2.27,108,1.383,110,0.886,116,3.771,118,2.247,235,1.071,331,1.049,342,1.093,345,0.005,346,0.006,347,0.005,449,5.458,573,5.8,725,3.3,747,3.775,782,5.08,841,4.813,886,3.175,1033,4.549,1050,5.593,1063,5.8,1064,4.969,1065,4.969,1066,4.969,1067,4.969,1068,4.969,1132,3.061,1137,4.234,1207,2.179,1269,4.234,1270,4.234,1271,4.234,1318,3.775,1693,3.775,2353,4.234,2373,5.4,2374,4.969,2396,3.775,2401,4.813,2521,3.596,2588,3.596,2741,5.4,2808,4.234,2814,4.234,2817,5.08,2818,4.549,2819,4.549,2820,4.549,3727,4.549,3961,6.337,4021,5.8,4064,4.549,4097,5.8,4234,4.549,4878,4.234,4879,5.4,4880,5.8,4888,4.969,4889,4.969,5400,6.337,5432,4.969,5453,4.969,5454,4.969,5504,3.439,5513,4.969,5525,6.337,5527,4.969,5568,6.337,5603,5.608,5604,5.608,5605,5.608,5606,5.608,5607,7.151,5608,7.151,5609,7.151,5610,7.151,5611,7.151,5612,7.151,5613,7.151,5614,7.151,5615,7.151,5616,7.151,5617,7.151,5618,7.151,5619,7.151,5620,7.151,5621,7.151,5622,5.608,5623,5.608]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AdvancedModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":122,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubEditorComponent.html":{},"injectables/CommonService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"interfaces/IScoreContainer.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0).length",{"_index":2572,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["0.0",{"_index":5071,"title":{},"body":{"components/TroopsComponent.html":{},"components/VenueEditorComponent.html":{}}}],["0.05",{"_index":3649,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["0.1",{"_index":3441,"title":{},"body":{"injectables/MediaService.html":{},"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{}}}],["0.1.13",{"_index":5497,"title":{},"body":{"dependencies.html":{}}}],["0.10",{"_index":3539,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["0.15s",{"_index":3073,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["0.19.1",{"_index":5493,"title":{},"body":{"dependencies.html":{}}}],["0.1cm",{"_index":4634,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["0.1rem",{"_index":4332,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["0.1s",{"_index":601,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2",{"_index":593,"title":{},"body":{"components/AppComponent.html":{},"components/TroopsComponent.html":{}}}],["0.2cm",{"_index":4635,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["0.2rem",{"_index":4316,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["0.2s",{"_index":616,"title":{},"body":{"components/AppComponent.html":{},"components/MemberSelectorComponent.html":{}}}],["0.3",{"_index":583,"title":{},"body":{"components/AppComponent.html":{}}}],["0.30",{"_index":3541,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["0.3s",{"_index":3071,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["0.4",{"_index":580,"title":{},"body":{"components/AppComponent.html":{},"components/DialogComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["0.45s",{"_index":3069,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["0.4cm",{"_index":4637,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["0.5",{"_index":3064,"title":{},"body":{"components/LoadSpinnerComponent.html":{},"components/MediaControlComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["0.5cm",{"_index":4611,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["0.5rem",{"_index":203,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/RegisterComponent.html":{}}}],["0.5s",{"_index":2516,"title":{},"body":{"components/HelpBlockComponent.html":{}}}],["0.6",{"_index":4334,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{}}}],["0.6cm",{"_index":4636,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["0.6rem",{"_index":2627,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.7",{"_index":4315,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["0.7rem",{"_index":4927,"title":{},"body":{"components/TournamentComponent.html":{}}}],["0.8",{"_index":541,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["0.800.3",{"_index":5464,"title":{},"body":{"dependencies.html":{}}}],["0.857em",{"_index":3646,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["0.86rem",{"_index":4328,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["0.8em",{"_index":1963,"title":{},"body":{"components/DisplayComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/ScorecardsComponent.html":{}}}],["0.8rem",{"_index":551,"title":{},"body":{"components/AppComponent.html":{},"components/EventComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["0.9.1",{"_index":5503,"title":{},"body":{"dependencies.html":{}}}],["0.9.16",{"_index":5501,"title":{},"body":{"dependencies.html":{}}}],["0.9cm",{"_index":4633,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["0.9rem",{"_index":3229,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["0/1",{"_index":5398,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":5403,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":5404,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5411,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":5416,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":5409,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":5396,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":5418,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":5405,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":5435,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":5436,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5397,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":5429,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":5442,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":5413,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":5412,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":5449,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5401,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":5438,"title":{},"body":{"coverage.html":{}}}],["0/35",{"_index":5447,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5414,"title":{},"body":{"coverage.html":{}}}],["0/41",{"_index":5450,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5415,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5402,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5407,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5406,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":5410,"title":{},"body":{"coverage.html":{}}}],["0].tolowercase",{"_index":4972,"title":{},"body":{"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["0px",{"_index":585,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ScoreEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["0rem",{"_index":1260,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["1",{"_index":561,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"components/ConfigureDisplayComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["1).fill(0).map((x",{"_index":3717,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["1).join",{"_index":1014,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["1).trim",{"_index":2926,"title":{},"body":{"components/InfoComponent.html":{}}}],["1.0.0",{"_index":5456,"title":{},"body":{"dependencies.html":{}}}],["1.0.18",{"_index":5477,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":5482,"title":{},"body":{"dependencies.html":{}}}],["1.179.1",{"_index":5500,"title":{},"body":{"dependencies.html":{}}}],["1.1cm",{"_index":4626,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["1.1em",{"_index":511,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["1.2.12",{"_index":5476,"title":{},"body":{"dependencies.html":{}}}],["1.2.5",{"_index":5494,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":552,"title":{},"body":{"components/AppComponent.html":{},"components/HelpBlockComponent.html":{}}}],["1.2s",{"_index":3061,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["1.3rem",{"_index":2621,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.5cm",{"_index":4632,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["1.5rem",{"_index":631,"title":{},"body":{"components/AppComponent.html":{},"components/HelpBlockComponent.html":{},"components/MemberSelectorComponent.html":{}}}],["1.6.0",{"_index":5471,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":5474,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":5473,"title":{},"body":{"dependencies.html":{}}}],["1.7rem",{"_index":4317,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["1.8.0",{"_index":5472,"title":{},"body":{"dependencies.html":{}}}],["1/11",{"_index":5444,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":5431,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":5422,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":5375,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["1/24",{"_index":5439,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":5428,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":5408,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":5426,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":5417,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":530,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/HelpBlockComponent.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreEditorComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["10.4",{"_index":4303,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["100",{"_index":178,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DialogComponent.html":{},"components/DivisionLookupComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["1000",{"_index":966,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ErrorHandlerService.html":{}}}],["100vh",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":612,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["10rem",{"_index":180,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ErrorDialogComponent.html":{},"components/VenueComponent.html":{}}}],["11.0.1",{"_index":5468,"title":{},"body":{"dependencies.html":{}}}],["11rem",{"_index":5295,"title":{},"body":{"components/VenueComponent.html":{}}}],["12",{"_index":5103,"title":{},"body":{"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"coverage.html":{}}}],["12px",{"_index":2523,"title":{},"body":{"components/HelpBlockComponent.html":{},"components/MediaComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["12rem",{"_index":1478,"title":{},"body":{"components/ConfigureComponent.html":{}}}],["130px",{"_index":4310,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["14.3.1",{"_index":5487,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":3749,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["14rem",{"_index":1479,"title":{},"body":{"components/ConfigureComponent.html":{},"components/TournamentComponent.html":{}}}],["15",{"_index":5433,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["15px",{"_index":3137,"title":{},"body":{"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/SaveButtonComponent.html":{}}}],["16",{"_index":5425,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":1477,"title":{},"body":{"components/ConfigureComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["18",{"_index":5597,"title":{},"body":{"overview.html":{}}}],["1]).expanded",{"_index":2286,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["1].calculatedstarttime",{"_index":4137,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["1].starttime",{"_index":4136,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["1].type",{"_index":4135,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["1][type].split(',')[0]).minute(0",{"_index":4154,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["1cm",{"_index":4631,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["1em",{"_index":207,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["1fr",{"_index":4605,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["1px",{"_index":182,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/MediaComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["1rem",{"_index":538,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MemberSelectorComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{}}}],["2",{"_index":135,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DialogComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MemberEditorComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{},"components/TroopsComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["2.0.8",{"_index":5490,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":5465,"title":{},"body":{"dependencies.html":{}}}],["2.10.1",{"_index":5488,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":5495,"title":{},"body":{"dependencies.html":{}}}],["2.3rem",{"_index":4309,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["2.5mm",{"_index":4607,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["2.5rem",{"_index":220,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ScorecardsComponent.html":{}}}],["2.6.3",{"_index":5475,"title":{},"body":{"dependencies.html":{}}}],["2.6deg",{"_index":3139,"title":{},"body":{"components/LoginComponent.html":{}}}],["2/13",{"_index":5434,"title":{},"body":{"coverage.html":{}}}],["2/24",{"_index":5452,"title":{},"body":{"coverage.html":{}}}],["2/36",{"_index":5441,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1766,"title":{},"body":{"components/DialogComponent.html":{},"components/ScoreEditorComponent.html":{},"coverage.html":{}}}],["20).tofixed(2",{"_index":4250,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["200",{"_index":864,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/HttpStateService.html":{}}}],["200px",{"_index":2520,"title":{},"body":{"components/HelpBlockComponent.html":{}}}],["20deg",{"_index":3143,"title":{},"body":{"components/LoginComponent.html":{}}}],["20px",{"_index":587,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["21",{"_index":5420,"title":{},"body":{"coverage.html":{}}}],["21.7",{"_index":4301,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["21cm",{"_index":4601,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["22.2",{"_index":4298,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["22px",{"_index":3756,"title":{},"body":{"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["24px",{"_index":2162,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["25",{"_index":2518,"title":{},"body":{"components/HelpBlockComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["255",{"_index":592,"title":{},"body":{"components/AppComponent.html":{}}}],["25px",{"_index":1475,"title":{},"body":{"components/ConfigureComponent.html":{},"components/ContextMenuComponent.html":{},"components/MemberSelectorComponent.html":{}}}],["25rem",{"_index":2626,"title":{},"body":{"components/HomeComponent.html":{}}}],["27",{"_index":5599,"title":{},"body":{"overview.html":{}}}],["29.6em",{"_index":3645,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["2cm",{"_index":4624,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["2px",{"_index":3140,"title":{},"body":{"components/LoginComponent.html":{},"components/MemberSelectorComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["2rem",{"_index":192,"title":{},"body":{"components/AdvancedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MemberSelectorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["3",{"_index":4271,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{},"miscellaneous/enumerations.html":{}}}],["3.1.4",{"_index":5480,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":5484,"title":{},"body":{"dependencies.html":{}}}],["3.5cm",{"_index":4638,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["3.5rem",{"_index":544,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["3/25",{"_index":5419,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":186,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ConfigureDisplayComponent.html":{}}}],["300ms",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["300px",{"_index":5387,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["30px",{"_index":3136,"title":{},"body":{"components/LoginComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["30rem",{"_index":1769,"title":{},"body":{"components/DialogComponent.html":{}}}],["33",{"_index":5427,"title":{},"body":{"coverage.html":{}}}],["342px",{"_index":2945,"title":{},"body":{"components/InfoComponent.html":{}}}],["35px",{"_index":4107,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["38px",{"_index":2519,"title":{},"body":{"components/HelpBlockComponent.html":{}}}],["3cm",{"_index":4630,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["3em",{"_index":1961,"title":{},"body":{"components/DisplayComponent.html":{},"components/EventComponent.html":{},"components/MemberSelectorComponent.html":{}}}],["3px",{"_index":602,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["3rem",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SignoffReportComponent.html":{}}}],["4",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"components/InfoComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["4.0.0",{"_index":5469,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":5483,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":5486,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":3746,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["400",{"_index":972,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["400px",{"_index":2623,"title":{},"body":{"components/HomeComponent.html":{}}}],["401",{"_index":998,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["403",{"_index":1004,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["40px",{"_index":3141,"title":{},"body":{"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["45",{"_index":3745,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["45rem",{"_index":3227,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["4cm",{"_index":4625,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["4px",{"_index":188,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ErrorDialogComponent.html":{},"components/LoginComponent.html":{},"components/MemberSelectorComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["4rem",{"_index":1960,"title":{},"body":{"components/DisplayComponent.html":{},"components/HomeComponent.html":{},"components/MultirangeComponent.html":{}}}],["5",{"_index":965,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/EventComponent.html":{},"components/MacroDialogComponent.html":{},"components/ScoreSystemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["5/10",{"_index":5424,"title":{},"body":{"coverage.html":{}}}],["5/23",{"_index":5421,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1540,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"components/HelpBlockComponent.html":{},"interfaces/IUser.html":{},"components/LoadSpinnerComponent.html":{},"components/ScoreEditorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["500",{"_index":572,"title":{},"body":{"components/AppComponent.html":{}}}],["50rem",{"_index":3226,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["51px",{"_index":3058,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["55",{"_index":5598,"title":{},"body":{"overview.html":{}}}],["5px",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"components/HelpBlockComponent.html":{},"components/MediaComponent.html":{},"components/MemberEditorComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScorecardsComponent.html":{}}}],["5rem",{"_index":1768,"title":{},"body":{"components/DialogComponent.html":{},"components/ScoreGroupEditorComponent.html":{}}}],["6",{"_index":5520,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6.5.2",{"_index":5498,"title":{},"body":{"dependencies.html":{}}}],["6.5cm",{"_index":4612,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["6.6vw",{"_index":2351,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["60",{"_index":4847,"title":{},"body":{"components/TeamsComponent.html":{}}}],["600px",{"_index":3134,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{}}}],["64px",{"_index":3056,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["6px",{"_index":2517,"title":{},"body":{"components/HelpBlockComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["6rem",{"_index":3532,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/VenueComponent.html":{}}}],["7",{"_index":5196,"title":{},"body":{"components/UserEditorComponent.html":{},"coverage.html":{}}}],["7.1.1",{"_index":5467,"title":{},"body":{"dependencies.html":{}}}],["7.5.2",{"_index":5470,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":4311,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["720px",{"_index":611,"title":{},"body":{"components/AppComponent.html":{}}}],["7px",{"_index":3135,"title":{},"body":{"components/LoginComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["8",{"_index":5430,"title":{},"body":{"coverage.html":{}}}],["8.0.1",{"_index":5460,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":5458,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2816,"title":{},"body":{"interfaces/IUser.html":{},"components/MultirangeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["80vh",{"_index":3225,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["8px",{"_index":590,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/MediaComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScorecardsComponent.html":{}}}],["8rem",{"_index":1264,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["9",{"_index":5443,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2815,"title":{},"body":{"interfaces/IUser.html":{},"components/MacroDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["95",{"_index":597,"title":{},"body":{"components/AppComponent.html":{}}}],["98",{"_index":598,"title":{},"body":{"components/AppComponent.html":{}}}],["9835;${d.name",{"_index":4868,"title":{},"body":{"components/TeamsComponent.html":{}}}],["99",{"_index":2813,"title":{},"body":{"interfaces/IUser.html":{},"components/MultirangeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["999",{"_index":3271,"title":{},"body":{"components/MediaComponent.html":{},"components/MediaControlComponent.html":{}}}],["9px",{"_index":3755,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["9rem",{"_index":195,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["_",{"_index":1447,"title":{},"body":{"injectables/CommonService.html":{}}}],["_$currentuserobservable",{"_index":5199,"title":{},"body":{"injectables/UserService.html":{}}}],["_addjudge",{"_index":4346,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["_addjudge(judge",{"_index":4355,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["_audio",{"_index":3381,"title":{},"body":{"injectables/MediaService.html":{}}}],["_cache",{"_index":3795,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["_canupload",{"_index":3280,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["_club",{"_index":3546,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["_currentuser",{"_index":4943,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["_defaultvalues",{"_index":23,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["_error",{"_index":2169,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["_externalset",{"_index":3701,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["_gymnasts",{"_index":3547,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["_isloadinguser",{"_index":5200,"title":{},"body":{"injectables/UserService.html":{}}}],["_isopen",{"_index":1719,"title":{},"body":{"components/DialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["_ispaused",{"_index":3382,"title":{},"body":{"injectables/MediaService.html":{}}}],["_loadmeinternal",{"_index":5201,"title":{},"body":{"injectables/UserService.html":{}}}],["_loadmeinternal(noreport",{"_index":5206,"title":{},"body":{"injectables/UserService.html":{}}}],["_log",{"_index":3078,"title":{},"body":{"classes/Logger.html":{}}}],["_log(type",{"_index":3080,"title":{},"body":{"classes/Logger.html":{}}}],["_media",{"_index":3281,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["_redirectto",{"_index":3097,"title":{},"body":{"components/LoginComponent.html":{}}}],["_selected",{"_index":4452,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["_shared/_shared.module",{"_index":1369,"title":{},"body":{"modules/ClubModule.html":{},"modules/TournamentModule.html":{}}}],["_showtraining",{"_index":3785,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["_translator",{"_index":791,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["_types",{"_index":2527,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["_userservice",{"_index":792,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["_value",{"_index":1275,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["_valuehigh",{"_index":3659,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["_valuelow",{"_index":3660,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["_whatsplaying",{"_index":3383,"title":{},"body":{"injectables/MediaService.html":{}}}],["a.birthyear",{"_index":3629,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["a.disciplinesortorder",{"_index":4557,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["a.judgeindex",{"_index":4217,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["a.name",{"_index":2569,"title":{},"body":{"components/HomeComponent.html":{},"components/MemberSelectorComponent.html":{},"interfaces/TournamentType.html":{}}}],["a.sortnumber",{"_index":4559,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["a.total",{"_index":4727,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["a.type",{"_index":4730,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["a[property",{"_index":3773,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["a[this.currentsort.active",{"_index":4795,"title":{},"body":{"classes/SubjectSource.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":1411,"title":{},"body":{"injectables/CommonService.html":{}}}],["above",{"_index":3298,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["absolute",{"_index":620,"title":{},"body":{"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/HelpBlockComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["abstractcontrol",{"_index":3935,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{}}}],["accepting",{"_index":1092,"title":{},"body":{"guards/CanActivateRegistration.html":{}}}],["access",{"_index":1096,"title":{},"body":{"guards/CanActivateRegistration.html":{},"components/RegisterComponent.html":{}}}],["accessors",{"_index":35,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpansionSource.html":{},"components/HomeComponent.html":{},"directives/IfAuthDirective.html":{},"components/LoginComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/RegisterComponent.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/SignoffReportComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/VenueEditorComponent.html":{}}}],["account",{"_index":3964,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/UserEditorComponent.html":{}}}],["action",{"_index":952,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/HttpStateService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["action.iscomplete",{"_index":4106,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["action.method",{"_index":4104,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["action.model",{"_index":2689,"title":{},"body":{"injectables/HttpStateService.html":{},"components/SaveButtonComponent.html":{}}}],["action.model.ts",{"_index":2630,"title":{},"body":{"interfaces/HttpAction.html":{},"coverage.html":{}}}],["action.operation",{"_index":954,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["activate",{"_index":5197,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["activated",{"_index":2809,"title":{},"body":{"interfaces/IUser.html":{},"components/UserEditorComponent.html":{}}}],["activatedroute",{"_index":802,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/LoginComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["activatedroutesnapshot",{"_index":1084,"title":{},"body":{"guards/CanActivateRegistration.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{}}}],["activation.guard",{"_index":757,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["activation.guard.ts",{"_index":1080,"title":{},"body":{"guards/CanActivateRegistration.html":{},"coverage.html":{}}}],["activation.guard.ts:11",{"_index":1086,"title":{},"body":{"guards/CanActivateRegistration.html":{}}}],["activation.guard.ts:8",{"_index":1082,"title":{},"body":{"guards/CanActivateRegistration.html":{}}}],["active",{"_index":577,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/EventComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/ScoreEditorComponent.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["active.select",{"_index":5367,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["activities",{"_index":3036,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["activity",{"_index":3016,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"components/RegisterComponent.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{}}}],["actual",{"_index":980,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["actual_component",{"_index":344,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["actually",{"_index":4098,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["add",{"_index":1153,"title":{},"body":{"components/ClubComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"classes/ExpansionSource.html":{},"injectables/HttpCacheService.html":{},"injectables/LoadIndicatorService.html":{},"components/LoginComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopsComponent.html":{},"interfaces/UrlActivity.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{}}}],["add(element",{"_index":2281,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["add(url",{"_index":2664,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["addclub",{"_index":1104,"title":{},"body":{"components/ClubComponent.html":{}}}],["adddefaults",{"_index":1817,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["adddiscipline",{"_index":1818,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["adddivision",{"_index":2060,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["added",{"_index":5115,"title":{},"body":{"components/TroopsComponent.html":{},"index.html":{}}}],["addfilter",{"_index":3553,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["addfilter(name",{"_index":3569,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["addition",{"_index":846,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ScoreGroupEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["addjudge",{"_index":4347,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["addobserver",{"_index":2970,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["addobserver(url",{"_index":2979,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["address",{"_index":2822,"title":{},"body":{"interfaces/IVenue.html":{},"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["address.formatted_address",{"_index":5371,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["addressctrl",{"_index":5332,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["addressctrl.valuechanges",{"_index":5334,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["adds",{"_index":4353,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["addscoregroup",{"_index":4454,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["addteam",{"_index":4806,"title":{},"body":{"components/TeamsComponent.html":{},"components/TroopsComponent.html":{}}}],["addtime",{"_index":4138,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["addtoteam",{"_index":3449,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["addtoteam($event",{"_index":3455,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["addtypename",{"_index":2402,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["addurl",{"_index":2972,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["addurl(type",{"_index":2981,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["adjust",{"_index":4609,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["admin",{"_index":1137,"title":{},"body":{"components/ClubComponent.html":{},"interfaces/IUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["admins",{"_index":1133,"title":{},"body":{"components/ClubComponent.html":{}}}],["adresslist",{"_index":5298,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["advanced",{"_index":16,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ConfigureComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/DisciplinesComponent.html":{}}}],["advanced'},{'name",{"_index":227,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["advanced.component",{"_index":386,"title":{},"body":{"modules/AdvancedModule.html":{}}}],["advanced.component.html",{"_index":20,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["advanced.component.scss",{"_index":18,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["advanced/advanced.module",{"_index":1556,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["advanced/advanced.routes",{"_index":1579,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["advancedcomponent",{"_index":1,"title":{"components/AdvancedComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"modules/AdvancedModule.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["advancedmodule",{"_index":349,"title":{"modules/AdvancedModule.html":{}},"body":{"modules/AdvancedModule.html":{},"modules/ConfigureModule.html":{},"modules.html":{},"overview.html":{}}}],["advancedroutes",{"_index":1578,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["aftercontentchecked",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["afterline",{"_index":2884,"title":{},"body":{"components/InfoComponent.html":{}}}],["afterviewinit",{"_index":1671,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["again",{"_index":165,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["age",{"_index":1996,"title":{},"body":{"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/MemberSelectorComponent.html":{},"components/TroopsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["age(birthyear",{"_index":3571,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["age(g.birthyear",{"_index":5081,"title":{},"body":{"components/TroopsComponent.html":{}}}],["age(member.birthyear",{"_index":3637,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["agedivision",{"_index":5007,"title":{},"body":{"components/TroopsComponent.html":{}}}],["agedivision(team",{"_index":5020,"title":{},"body":{"components/TroopsComponent.html":{}}}],["agedivisions",{"_index":2056,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["agegroup",{"_index":5046,"title":{},"body":{"components/TroopsComponent.html":{}}}],["agelimits",{"_index":214,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["ages",{"_index":5079,"title":{},"body":{"components/TroopsComponent.html":{}}}],["agm",{"_index":5386,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["agm/core",{"_index":674,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{},"modules/VenueModule.html":{},"dependencies.html":{}}}],["agmcoremodule",{"_index":673,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{},"modules/VenueModule.html":{}}}],["agmcoremodule.forroot",{"_index":733,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["aizasydiybcdsyzef6nafvgkjv297hx7cqs3mbs",{"_index":5621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert('please",{"_index":159,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["aliases",{"_index":5601,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":200,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MediaControlComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["allergies",{"_index":2726,"title":{},"body":{"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"classes/Judge.html":{},"components/MemberEditorComponent.html":{}}}],["allindeterminate",{"_index":5003,"title":{},"body":{"components/TroopsComponent.html":{}}}],["allowed",{"_index":4246,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{}}}],["allowregistrations",{"_index":5609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allready",{"_index":1711,"title":{},"body":{"components/ContextMenuComponent.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{},"injectables/UserService.html":{}}}],["allselected",{"_index":5004,"title":{},"body":{"components/TroopsComponent.html":{}}}],["allways",{"_index":900,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["alone",{"_index":3305,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["alternatesubject",{"_index":2260,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["always",{"_index":867,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["analyse",{"_index":815,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["analyze",{"_index":993,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["analyzeandreport",{"_index":793,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["analyzeandreport(req",{"_index":811,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["angular",{"_index":2357,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/MultirangeComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":5060,"title":{},"body":{"components/TroopsComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":5459,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":373,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/ConfigureSharedModule.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{}}}],["angular/cdk/overlay",{"_index":2232,"title":{},"body":{"modules/EventModule.html":{}}}],["angular/cdk/table",{"_index":2257,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["angular/common",{"_index":370,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"injectables/BrowserService.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"injectables/SEOService.html":{},"components/ScoreEditorComponent.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":95,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/ConfigurationService.html":{},"injectables/DisplayService.html":{},"injectables/GraphService.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpStateService.html":{},"injectables/MediaService.html":{},"injectables/MyHammerConfig.html":{},"interceptors/UniversalInterceptor.html":{},"injectables/UserService.html":{},"components/VenueEditorComponent.html":{}}}],["angular/common/locales/nb",{"_index":685,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["angular/compiler",{"_index":5461,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":91,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AdvancedModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":92,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"components/DisciplineEditorComponent.html":{},"modules/DisciplinesModule.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"components/LoginComponent.html":{},"components/MemberEditorComponent.html":{},"injectables/MyHammerConfig.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"directives/ToCaseDirective.html":{},"modules/TournamentModule.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"modules/UsersModule.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":379,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"modules/DisciplinesModule.html":{},"components/DivisionLookupComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"modules/EventModule.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"injectables/LoadIndicatorService.html":{},"components/MemberEditorComponent.html":{},"injectables/MemberStateService.html":{},"injectables/MyHammerConfig.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/ResetComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"classes/SubjectSource.html":{},"modules/TournamentModule.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"modules/UsersModule.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"dependencies.html":{}}}],["angular/material/theming",{"_index":4290,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["angular/platform",{"_index":652,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/HomeComponent.html":{},"injectables/MyHammerConfig.html":{},"injectables/SEOService.html":{},"interfaces/TournamentType.html":{},"dependencies.html":{}}}],["angular/pwa",{"_index":5463,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"modules/ClubModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"components/EventComponent.html":{},"modules/EventRoutingModule.html":{},"components/FullscreenComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MemberEditorComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"dependencies.html":{}}}],["angular/service",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{},"dependencies.html":{}}}],["angular/types",{"_index":2449,"title":{},"body":{"injectables/GraphService.html":{}}}],["angulartics",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["angulartics2",{"_index":669,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/MyHammerConfig.html":{},"dependencies.html":{}}}],["angulartics2/ga",{"_index":448,"title":{},"body":{"components/AppComponent.html":{}}}],["angulartics2googleanalytics",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["angulartics2module",{"_index":668,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["angulartics2module.forroot",{"_index":729,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["animate",{"_index":5059,"title":{},"body":{"components/TroopsComponent.html":{}}}],["animate('225ms",{"_index":5069,"title":{},"body":{"components/TroopsComponent.html":{}}}],["animation",{"_index":3060,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["animations",{"_index":5061,"title":{},"body":{"components/TroopsComponent.html":{}}}],["anything",{"_index":5569,"title":{},"body":{"index.html":{}}}],["anyway",{"_index":5613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aot",{"_index":698,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["api",{"_index":841,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api/administration/configuration",{"_index":1459,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["api/graph",{"_index":2374,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["api/media?id=${media.id",{"_index":3435,"title":{},"body":{"injectables/MediaService.html":{}}}],["api/schedule",{"_index":4119,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["api/ws",{"_index":5623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apikey",{"_index":734,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["apollo",{"_index":2356,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"dependencies.html":{}}}],["apollo/issues/741",{"_index":942,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["apollo_options",{"_index":2355,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollolink",{"_index":2361,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollomodule",{"_index":2354,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["app.component",{"_index":691,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MyHammerConfig.html":{}}}],["app.component.html",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":787,"title":{},"body":{"modules/AppServerModule.html":{}}}],["app/graphql.module",{"_index":2690,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["app/model",{"_index":94,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ContextMenuComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/EventRoutingModule.html":{},"components/HomeComponent.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IScoreContainer.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["app/model/iclub",{"_index":3243,"title":{},"body":{"components/MediaComponent.html":{}}}],["app/model/idiscipline",{"_index":3241,"title":{},"body":{"components/MediaComponent.html":{}}}],["app/model/imedia",{"_index":3242,"title":{},"body":{"components/MediaComponent.html":{},"components/MediaControlComponent.html":{}}}],["app/model/itournament",{"_index":1409,"title":{},"body":{"injectables/CommonService.html":{},"components/EventComponent.html":{}}}],["app/model/iuser",{"_index":1567,"title":{},"body":{"modules/ConfigureRoutingModule.html":{},"components/RegisterComponent.html":{}}}],["app/shared/browser.service",{"_index":96,"title":{},"body":{"components/AdvancedComponent.html":{},"components/EventComponent.html":{},"components/LogoutComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"injectables/UserService.html":{}}}],["app/shared/components/dialog/dialog.component",{"_index":3180,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["app/shared/components/error",{"_index":2182,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["app/shared/directives/to",{"_index":1317,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["app/shared/guards/role",{"_index":1570,"title":{},"body":{"modules/ConfigureRoutingModule.html":{},"modules/EventRoutingModule.html":{}}}],["app/shared/interceptors/error",{"_index":910,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"guards/CanActivateRegistration.html":{},"components/LoginComponent.html":{},"interfaces/ParticipantCache.html":{},"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{}}}],["app/shared/interceptors/http",{"_index":912,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/DisplayService.html":{},"components/SaveButtonComponent.html":{}}}],["app/shared/services",{"_index":3179,"title":{},"body":{"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"injectables/ScheduleService.html":{},"injectables/UserService.html":{}}}],["app/shared/services/api",{"_index":93,"title":{},"body":{"components/AdvancedComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionsComponent.html":{},"components/FullscreenComponent.html":{},"directives/IfAuthDirective.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MediaComponent.html":{},"interfaces/ParticipantCache.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueComponent.html":{}}}],["app/shared/services/common.service",{"_index":1870,"title":{},"body":{"components/DisciplinesComponent.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"components/MemberEditorComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/SignoffReportComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{}}}],["app/shared/services/graph.service",{"_index":1126,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{}}}],["app/shared/services/logger",{"_index":1869,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/MediaControlComponent.html":{}}}],["app/shared/services/media.service",{"_index":3338,"title":{},"body":{"components/MediaControlComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["app/shared/services/seo.service",{"_index":97,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ClubComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{}}}],["app/shared/services/subject",{"_index":1125,"title":{},"body":{"components/ClubComponent.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopsComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{}}}],["app/shared/shared.module",{"_index":380,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"modules/ScoreSystemModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["app/views/configure/club/club",{"_index":3472,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["app/views/configure/club/members/member",{"_index":1379,"title":{},"body":{"modules/ClubModule.html":{}}}],["app/views/configure/tournament/tournament",{"_index":1866,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{}}}],["app/views/configure/venue/venue.module",{"_index":1564,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["app/views/event/list/iscorecontainer",{"_index":4191,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["appcomponent",{"_index":228,"title":{"components/AppComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append",{"_index":3188,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["appid",{"_index":720,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["appifauth",{"_index":2832,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["appifauth(value",{"_index":2846,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["appifauth]'},{'name",{"_index":341,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["applicable",{"_index":4257,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["application",{"_index":742,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["apply",{"_index":3741,"title":{},"body":{"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["appmodule",{"_index":634,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/MyHammerConfig.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":4023,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{}}}],["appropriately",{"_index":4143,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["approutingmodule",{"_index":640,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/MyHammerConfig.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":774,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["apptocase",{"_index":4881,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["aren't",{"_index":999,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["args",{"_index":3081,"title":{},"body":{"classes/Logger.html":{},"pipes/OrderByPipe.html":{},"pipes/UtcDatePipe.html":{}}}],["args.replace",{"_index":3770,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["args.substring(0",{"_index":3768,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["arguments",{"_index":1110,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FullscreenComponent.html":{},"components/InfoComponent.html":{},"components/MacroDialogComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["aria",{"_index":1250,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["arr",{"_index":2437,"title":{},"body":{"injectables/GraphService.html":{}}}],["arr.map(a",{"_index":2503,"title":{},"body":{"injectables/GraphService.html":{}}}],["array",{"_index":873,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ScoreEditorComponent.html":{}}}],["array(+this.max",{"_index":3716,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["array.from(discipline.judgesplain.reduce((judges",{"_index":1890,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["array.from(scoregroups).find(g",{"_index":4724,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["array.isarray(obj[k",{"_index":2486,"title":{},"body":{"injectables/GraphService.html":{}}}],["array.isarray(this.currentsort.active",{"_index":4797,"title":{},"body":{"classes/SubjectSource.html":{}}}],["array.isarray(v",{"_index":134,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["array.isarray(val",{"_index":2480,"title":{},"body":{"injectables/GraphService.html":{}}}],["arraybuffer",{"_index":148,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["arrays",{"_index":2991,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["arrowleft",{"_index":4253,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["arrowright",{"_index":4255,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["article",{"_index":208,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ScorecardsComponent.html":{}}}],["asc",{"_index":4793,"title":{},"body":{"classes/SubjectSource.html":{}}}],["aside",{"_index":1767,"title":{},"body":{"components/DialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["ask",{"_index":1094,"title":{},"body":{"guards/CanActivateRegistration.html":{}}}],["assign",{"_index":3262,"title":{},"body":{"components/MediaComponent.html":{},"components/MemberSelectorComponent.html":{}}}],["assigned",{"_index":3640,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["assosiative",{"_index":2990,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["async",{"_index":1821,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{}}}],["attached",{"_index":879,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"index.html":{}}}],["audience",{"_index":5381,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["audio",{"_index":3387,"title":{},"body":{"injectables/MediaService.html":{}}}],["auth",{"_index":3128,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/UserService.html":{}}}],["auth.directive",{"_index":4647,"title":{},"body":{"modules/SharedModule.html":{}}}],["auth.directive.ts",{"_index":2831,"title":{},"body":{"directives/IfAuthDirective.html":{},"coverage.html":{}}}],["auth.directive.ts:11",{"_index":2844,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["auth.directive.ts:12",{"_index":2842,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["auth.directive.ts:14",{"_index":2843,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["auth.directive.ts:16",{"_index":2838,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["auth.directive.ts:32",{"_index":2837,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["auth.directive.ts:36",{"_index":2840,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["auth.directive.ts:40",{"_index":2839,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["auth.directive.ts:45",{"_index":2841,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["auth0/angular",{"_index":661,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/MyHammerConfig.html":{},"dependencies.html":{}}}],["authentication",{"_index":744,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["authinterceptor",{"_index":642,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/MyHammerConfig.html":{},"coverage.html":{},"overview.html":{}}}],["authstate",{"_index":4087,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["auto",{"_index":718,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DialogComponent.html":{},"components/EventComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MyHammerConfig.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["autocloseafter",{"_index":2189,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["automatically",{"_index":5373,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["autoset",{"_index":1350,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["autostop",{"_index":3871,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["available",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"components/DisciplinesComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"modules.html":{}}}],["available.foreach(member",{"_index":5111,"title":{},"body":{"components/TroopsComponent.html":{}}}],["availablemembers",{"_index":3548,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["availableslots",{"_index":4811,"title":{},"body":{"components/TeamsComponent.html":{}}}],["aval",{"_index":4798,"title":{},"body":{"classes/SubjectSource.html":{}}}],["avatar",{"_index":4305,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["avg",{"_index":2766,"title":{},"body":{"interfaces/IScoreContainer.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{}}}],["avoid",{"_index":3961,"title":{},"body":{"components/PasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":1895,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TroopsComponent.html":{}}}],["awards",{"_index":1026,"title":{},"body":{"components/AwardsComponent.html":{},"modules/ConfigureRoutingModule.html":{}}}],["awards'},{'name",{"_index":231,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["awards.component.html",{"_index":1028,"title":{},"body":{"components/AwardsComponent.html":{}}}],["awards.component.scss",{"_index":1027,"title":{},"body":{"components/AwardsComponent.html":{}}}],["awards/awards.component",{"_index":4941,"title":{},"body":{"modules/TournamentModule.html":{}}}],["awardscomponent",{"_index":230,"title":{"components/AwardsComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["awesome",{"_index":5485,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":2568,"title":{},"body":{"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/MemberSelectorComponent.html":{},"pipes/OrderByPipe.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"classes/SubjectSource.html":{},"interfaces/TournamentType.html":{}}}],["b.birthyear",{"_index":3630,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["b.disciplinesortorder",{"_index":4558,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["b.name",{"_index":3631,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["b.sortnumber",{"_index":4560,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["b.total",{"_index":4728,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["b.type",{"_index":4731,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["b[property",{"_index":3774,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["b[this.currentsort.active",{"_index":4796,"title":{},"body":{"classes/SubjectSource.html":{}}}],["back",{"_index":1808,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MemberSelectorComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["backdrop",{"_index":1714,"title":{},"body":{"components/ContextMenuComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["backdropclass",{"_index":3909,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["backend",{"_index":5552,"title":{},"body":{"index.html":{}}}],["background",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{}}}],["backup",{"_index":30,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["banquet",{"_index":2806,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{}}}],["banquetcostperhead",{"_index":2789,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{}}}],["banquetfor",{"_index":2790,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{}}}],["bar",{"_index":3537,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["based",{"_index":2395,"title":{},"body":{"modules/GraphQLModule.html":{},"components/HomeComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/MemberEditorComponent.html":{},"interfaces/TournamentType.html":{},"interfaces/UrlActivity.html":{}}}],["bash",{"_index":5541,"title":{},"body":{"index.html":{}}}],["batch",{"_index":2367,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["bbb",{"_index":2619,"title":{},"body":{"components/HomeComponent.html":{}}}],["before",{"_index":2521,"title":{},"body":{"components/HelpBlockComponent.html":{},"components/LoginComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"directives/ToCaseDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["beforeline",{"_index":2883,"title":{},"body":{"components/InfoComponent.html":{}}}],["behaviorsubject",{"_index":1118,"title":{},"body":{"components/ClubComponent.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"injectables/LoadIndicatorService.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopsComponent.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{}}}],["behaviorsubject(false",{"_index":3004,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["behaviorsubject(json.parse(this.browser.sessionstorage().getitem('currentuser",{"_index":5217,"title":{},"body":{"injectables/UserService.html":{}}}],["behaviorsubject(null",{"_index":2261,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["behaviorsubject(undefined",{"_index":2302,"title":{},"body":{"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["being",{"_index":3198,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["best",{"_index":5535,"title":{},"body":{"index.html":{}}}],["beta.6",{"_index":5457,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":2743,"title":{},"body":{"interfaces/IJudgeInScoreGroup.html":{},"components/MacroDialogComponent.html":{},"components/MultirangeComponent.html":{}}}],["bezier(0.4",{"_index":5070,"title":{},"body":{"components/TroopsComponent.html":{}}}],["bezier(0.5",{"_index":3063,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["biderctional",{"_index":2382,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["bin",{"_index":2121,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["bins",{"_index":2128,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["birthdate",{"_index":2727,"title":{},"body":{"interfaces/IGymnast.html":{},"components/MemberEditorComponent.html":{}}}],["birthyear",{"_index":2728,"title":{},"body":{"interfaces/IGymnast.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/TroopsComponent.html":{}}}],["birthyearctrl",{"_index":3482,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["birthyearctrl.setvalue(lastmember",{"_index":3497,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["bit",{"_index":1335,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/VenueEditorComponent.html":{}}}],["black",{"_index":2352,"title":{},"body":{"components/FullscreenComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/SignoffReportComponent.html":{}}}],["blob",{"_index":150,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["blob([res",{"_index":152,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["block",{"_index":213,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DialogComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionLookupComponent.html":{},"components/EventComponent.html":{},"components/HelpBlockComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{}}}],["block'},{'name",{"_index":267,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["block.component",{"_index":4656,"title":{},"body":{"modules/SharedModule.html":{}}}],["block.component.html",{"_index":2509,"title":{},"body":{"components/HelpBlockComponent.html":{}}}],["block.component.scss",{"_index":2508,"title":{},"body":{"components/HelpBlockComponent.html":{}}}],["block.component.ts",{"_index":2507,"title":{},"body":{"components/HelpBlockComponent.html":{},"coverage.html":{}}}],["block.component.ts:12",{"_index":2511,"title":{},"body":{"components/HelpBlockComponent.html":{}}}],["block.component.ts:8",{"_index":2510,"title":{},"body":{"components/HelpBlockComponent.html":{}}}],["block/help",{"_index":2506,"title":{},"body":{"components/HelpBlockComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["blocker",{"_index":163,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["body",{"_index":842,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["body.errors",{"_index":973,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["body.errors.some(e",{"_index":974,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["bold",{"_index":198,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/InfoComponent.html":{},"components/ScoreEditorComponent.html":{},"injectables/UserService.html":{}}}],["boolean",{"_index":1087,"title":{},"body":{"guards/CanActivateRegistration.html":{},"components/DisciplineEditorComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionLookupComponent.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"interfaces/HttpAction.html":{},"injectables/HttpStateService.html":{},"interfaces/IDivision.html":{},"interfaces/IMedia.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/IUser.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/ScheduleService.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":353,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{},"overview.html":{}}}],["border",{"_index":181,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["both",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"components/EventComponent.html":{},"components/MediaControlComponent.html":{},"index.html":{}}}],["bottom",{"_index":191,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/DialogComponent.html":{},"components/DisplayComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/MemberSelectorComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TroopEditorComponent.html":{}}}],["box",{"_index":584,"title":{},"body":{"components/AppComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["break",{"_index":2119,"title":{},"body":{"components/DivisionsComponent.html":{},"injectables/HttpStateService.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/UrlActivity.html":{},"index.html":{}}}],["breakpoints",{"_index":5563,"title":{},"body":{"index.html":{}}}],["brightness(10",{"_index":625,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":5595,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":56,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/BrowserService.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"components/LogoutComponent.html":{},"injectables/MyHammerConfig.html":{},"interfaces/ParticipantCache.html":{},"injectables/SEOService.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"interfaces/TournamentType.html":{},"injectables/UserService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.service",{"_index":914,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["browser/animations",{"_index":658,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["browseranimationsmodule",{"_index":657,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["browserlang",{"_index":471,"title":{},"body":{"components/AppComponent.html":{}}}],["browsermodule",{"_index":649,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["browsermodule.withservertransition",{"_index":719,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["browserservice",{"_index":40,"title":{"injectables/BrowserService.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/BrowserService.html":{},"components/EventComponent.html":{},"components/LogoutComponent.html":{},"injectables/MyHammerConfig.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["browserservice.localstorage",{"_index":1074,"title":{},"body":{"injectables/BrowserService.html":{}}}],["browserservice.sessionstorage",{"_index":1073,"title":{},"body":{"injectables/BrowserService.html":{}}}],["browsersync",{"_index":5545,"title":{},"body":{"index.html":{}}}],["btn",{"_index":3145,"title":{},"body":{"components/LoginComponent.html":{}}}],["bubble",{"_index":1023,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["bucket",{"_index":5107,"title":{},"body":{"components/TroopsComponent.html":{}}}],["build",{"_index":5544,"title":{},"body":{"index.html":{}}}],["buildhammer",{"_index":3757,"title":{},"body":{"injectables/MyHammerConfig.html":{}}}],["buildhammer(element",{"_index":713,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["building",{"_index":5534,"title":{},"body":{"index.html":{}}}],["button",{"_index":632,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/EventComponent.html":{},"components/InfoComponent.html":{},"components/SaveButtonComponent.html":{}}}],["button'},{'name",{"_index":303,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["button.component",{"_index":4652,"title":{},"body":{"modules/SharedModule.html":{}}}],["button.component.html",{"_index":4082,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["button.component.scss",{"_index":4081,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["button.component.ts",{"_index":4080,"title":{},"body":{"components/SaveButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:15",{"_index":4090,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["button.component.ts:16",{"_index":4089,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["button.component.ts:17",{"_index":4095,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["button.component.ts:18",{"_index":4096,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["button.component.ts:19",{"_index":4094,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["button.component.ts:21",{"_index":4086,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["button.component.ts:25",{"_index":4093,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["button.component.ts:38",{"_index":4092,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["button.component.ts:42",{"_index":4091,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["button/save",{"_index":4079,"title":{},"body":{"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["buttons",{"_index":1259,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/EventComponent.html":{}}}],["buttontype",{"_index":4084,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["bval",{"_index":4800,"title":{},"body":{"classes/SubjectSource.html":{}}}],["by.pipe",{"_index":4649,"title":{},"body":{"modules/SharedModule.html":{}}}],["by.pipe.ts",{"_index":3762,"title":{},"body":{"pipes/OrderByPipe.html":{},"coverage.html":{}}}],["by.pipe.ts:6",{"_index":3765,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["c",{"_index":3942,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SignoffReportComponent.html":{}}}],["c.get('email').value",{"_index":4033,"title":{},"body":{"components/ResetComponent.html":{}}}],["c.get('password').value",{"_index":3943,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["c.get('repeatpassword').value",{"_index":3944,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["c.get('username').value",{"_index":4032,"title":{},"body":{"components/ResetComponent.html":{}}}],["c.name",{"_index":105,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["c.type[0].name",{"_index":4580,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["cache",{"_index":916,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ClubLookupComponent.html":{},"injectables/DisplayService.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"dependencies.html":{}}}],["cache.interceptor",{"_index":646,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["cache.interceptor.ts",{"_index":2634,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{},"coverage.html":{}}}],["cache.interceptor.ts:12",{"_index":2641,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["cache.interceptor.ts:15",{"_index":2642,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["cache.service",{"_index":1978,"title":{},"body":{"injectables/DisplayService.html":{},"interceptors/HttpCacheInterceptor.html":{}}}],["cache.service.ts",{"_index":2660,"title":{},"body":{"injectables/HttpCacheService.html":{},"coverage.html":{}}}],["cache.service.ts:13",{"_index":2669,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:17",{"_index":2665,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:21",{"_index":2671,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:25",{"_index":2673,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:5",{"_index":2663,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:9",{"_index":2667,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cached",{"_index":2651,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["caching",{"_index":2636,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["calc(50",{"_index":4312,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["calculate",{"_index":4129,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["calculated",{"_index":4155,"title":{},"body":{"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{}}}],["calculatedstarttime",{"_index":2779,"title":{},"body":{"interfaces/ITeamInDiscipline.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["calculating",{"_index":5382,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["callback",{"_index":1229,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["called",{"_index":1230,"title":{},"body":{"components/ClubEditorComponent.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{},"index.html":{}}}],["calling",{"_index":3020,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["calls",{"_index":5553,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":761,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/CanActivateRegistration.html":{},"modules/ConfigureRoutingModule.html":{},"modules/EventRoutingModule.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{}}}],["canactivate(route",{"_index":1083,"title":{},"body":{"guards/CanActivateRegistration.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{}}}],["canactivateregistration",{"_index":755,"title":{"guards/CanActivateRegistration.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/CanActivateRegistration.html":{},"coverage.html":{}}}],["canadd",{"_index":4807,"title":{},"body":{"components/TeamsComponent.html":{}}}],["canadddefaults",{"_index":1828,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["cancel",{"_index":1165,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/MacroDialogComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["cancelclicked",{"_index":1720,"title":{},"body":{"components/DialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["canedit",{"_index":1618,"title":{},"body":{"components/ContextMenuComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["canedit(participant",{"_index":3851,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["canonical",{"_index":4075,"title":{},"body":{"injectables/SEOService.html":{}}}],["canselect",{"_index":4808,"title":{},"body":{"components/TeamsComponent.html":{}}}],["canselect(team",{"_index":4818,"title":{},"body":{"components/TeamsComponent.html":{}}}],["canstart",{"_index":1619,"title":{},"body":{"components/ContextMenuComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["canstart(participant",{"_index":3863,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["canupload",{"_index":3288,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["canupload(flag",{"_index":3341,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["canurl",{"_index":4069,"title":{},"body":{"injectables/SEOService.html":{}}}],["canviewactions",{"_index":3855,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["capacity",{"_index":2823,"title":{},"body":{"interfaces/IVenue.html":{},"components/VenueEditorComponent.html":{}}}],["card",{"_index":2615,"title":{},"body":{"components/HomeComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["card.name",{"_index":4573,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["cards",{"_index":4565,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["cards.find(c",{"_index":4579,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["cards.push",{"_index":4585,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["caret",{"_index":2941,"title":{},"body":{"components/InfoComponent.html":{}}}],["case",{"_index":2118,"title":{},"body":{"components/DivisionsComponent.html":{},"injectables/HttpStateService.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/ScoreEditorComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/UrlActivity.html":{}}}],["case_input_control_value_accessor",{"_index":4880,"title":{},"body":{"directives/ToCaseDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":770,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["catch(err",{"_index":5180,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["catch(ex",{"_index":2469,"title":{},"body":{"injectables/GraphService.html":{}}}],["catcherror",{"_index":906,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/UserService.html":{}}}],["catcherror(err",{"_index":936,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/UserService.html":{}}}],["category",{"_index":3127,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["ccffcc",{"_index":4620,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["cdkdragdrop",{"_index":1840,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["cell",{"_index":1539,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["center",{"_index":216,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["centered",{"_index":3192,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["change",{"_index":3249,"title":{},"body":{"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/UserEditorComponent.html":{}}}],["change.clubid",{"_index":3347,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["change.disciplineid",{"_index":3349,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["change.disciplinename",{"_index":3350,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["change.media",{"_index":3345,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["change.media.currentvalue",{"_index":3346,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["change.teamid",{"_index":3348,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["changed",{"_index":1225,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/MediaControlComponent.html":{},"components/MultirangeComponent.html":{}}}],["changelang",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["changelang(lang",{"_index":416,"title":{},"body":{"components/AppComponent.html":{}}}],["changepassword",{"_index":5155,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["changes",{"_index":1325,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["changes.disciplinelist",{"_index":1880,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["changes.disciplinelist.currentvalue",{"_index":1881,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["changes.divisions",{"_index":2098,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["changes.divisions.currentvalue",{"_index":2099,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["changes.scoregrouplist",{"_index":4496,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["changes.scoregrouplist.currentvalue",{"_index":4497,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["changing",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["channel",{"_index":2434,"title":{},"body":{"injectables/GraphService.html":{}}}],["channel}${query",{"_index":2477,"title":{},"body":{"injectables/GraphService.html":{}}}],["characters",{"_index":1340,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["check",{"_index":896,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"index.html":{}}}],["checkerror",{"_index":794,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["checkerror(req",{"_index":855,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["checkout",{"_index":2610,"title":{},"body":{"components/HomeComponent.html":{}}}],["child",{"_index":1571,"title":{},"body":{"modules/ConfigureRoutingModule.html":{},"components/MacroDialogComponent.html":{}}}],["child(1",{"_index":3067,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["child(2",{"_index":3070,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["child(3",{"_index":3072,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["child(3n",{"_index":3753,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["childcontrol",{"_index":1276,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["children",{"_index":1582,"title":{},"body":{"modules/ConfigureRoutingModule.html":{},"modules/EventRoutingModule.html":{}}}],["choose",{"_index":3252,"title":{},"body":{"components/MediaComponent.html":{}}}],["chrome",{"_index":5561,"title":{},"body":{"index.html":{}}}],["class",{"_index":99,"title":{"classes/ExpansionSource.html":{},"classes/Judge.html":{},"classes/Logger.html":{},"classes/ScoreContainer.html":{},"classes/SubjectSource.html":{}},"body":{"components/AdvancedComponent.html":{},"modules/AdvancedModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IJudge.html":{},"interfaces/IScoreContainer.html":{},"interfaces/ITeam.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"coverage.html":{}}}],["class=\"pull",{"_index":4284,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["classes",{"_index":2293,"title":{},"body":{"classes/ExpansionSource.html":{},"interfaces/ITeam.html":{},"classes/Judge.html":{},"classes/Logger.html":{},"interfaces/ParticipantCache.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["classes.teamgym",{"_index":4863,"title":{},"body":{"components/TeamsComponent.html":{}}}],["clean",{"_index":5582,"title":{},"body":{"index.html":{}}}],["clear",{"_index":536,"title":{},"body":{"components/AppComponent.html":{},"components/EventComponent.html":{},"injectables/GraphService.html":{}}}],["clearerror",{"_index":2170,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearids",{"_index":731,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["clearqueryparams",{"_index":732,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["clearselection",{"_index":2288,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["cleartimeout(this.counter",{"_index":2153,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["cli",{"_index":5532,"title":{},"body":{"index.html":{}}}],["click",{"_index":1728,"title":{},"body":{"components/DialogComponent.html":{},"components/DisplayComponent.html":{},"components/ErrorDialogComponent.html":{},"components/MacroDialogComponent.html":{},"components/SaveButtonComponent.html":{}}}],["click(event",{"_index":1735,"title":{},"body":{"components/DialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["click)=\"delete",{"_index":1708,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["click)=\"rollback",{"_index":1713,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["clicked",{"_index":4099,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["client",{"_index":2401,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/TotalByScoreGroup.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["clone",{"_index":4192,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["clone(s",{"_index":4218,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["close",{"_index":1620,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/DivisionEditorComponent.html":{},"components/ErrorDialogComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["close(result",{"_index":4950,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["closed",{"_index":1098,"title":{},"body":{"guards/CanActivateRegistration.html":{},"components/TeamsComponent.html":{}}}],["closedialog",{"_index":1721,"title":{},"body":{"components/DialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["closeeditor(cmd",{"_index":3893,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["closenav",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["closenav(evt",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["closest",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["club",{"_index":235,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IUser.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["club'},{'name",{"_index":233,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["club(v",{"_index":3597,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["club.component",{"_index":1370,"title":{},"body":{"modules/ClubModule.html":{}}}],["club.component.html",{"_index":1101,"title":{},"body":{"components/ClubComponent.html":{}}}],["club.component.scss",{"_index":1100,"title":{},"body":{"components/ClubComponent.html":{}}}],["club.id",{"_index":1224,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["club.name",{"_index":1152,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/UserEditorComponent.html":{}}}],["club/club.module",{"_index":1557,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["club/club.routes",{"_index":1581,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["clubcomponent",{"_index":232,"title":{"components/ClubComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clubctrl",{"_index":1159,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/MemberEditorComponent.html":{}}}],["clubctrl.setvalue(this.club",{"_index":3493,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["clubctrl.value",{"_index":3492,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["clubdisplay",{"_index":1279,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/UserEditorComponent.html":{}}}],["clubdisplay(club",{"_index":1288,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/UserEditorComponent.html":{}}}],["clubeditorcomponent",{"_index":234,"title":{"components/ClubEditorComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clubform",{"_index":1160,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["clubform.value.id",{"_index":1249,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["clubid",{"_index":2711,"title":{},"body":{"interfaces/IBelongsToClub.html":{},"interfaces/IMedia.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{}}}],["clubid:${this.club.id",{"_index":3612,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["clublist",{"_index":1277,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["clublookupcomponent",{"_index":237,"title":{"components/ClubLookupComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clubmodule",{"_index":1357,"title":{"modules/ClubModule.html":{}},"body":{"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules.html":{},"overview.html":{}}}],["clubname",{"_index":1170,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{}}}],["clubreceived",{"_index":1166,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["clubreceived(club",{"_index":1176,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["clubroutes",{"_index":1580,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["clubs",{"_index":1128,"title":{},"body":{"components/ClubComponent.html":{}}}],["clubsource",{"_index":1102,"title":{},"body":{"components/ClubComponent.html":{}}}],["clubsubject",{"_index":1161,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["club{id,name",{"_index":3467,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["cluster_advancedmodule",{"_index":356,"title":{},"body":{"modules/AdvancedModule.html":{},"overview.html":{}}}],["cluster_advancedmodule_declarations",{"_index":357,"title":{},"body":{"modules/AdvancedModule.html":{},"overview.html":{}}}],["cluster_advancedmodule_imports",{"_index":358,"title":{},"body":{"modules/AdvancedModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":635,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":638,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":636,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":637,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":639,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":775,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":777,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":776,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_providers",{"_index":778,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_clubmodule",{"_index":1358,"title":{},"body":{"modules/ClubModule.html":{},"overview.html":{}}}],["cluster_clubmodule_declarations",{"_index":1359,"title":{},"body":{"modules/ClubModule.html":{},"overview.html":{}}}],["cluster_clubmodule_imports",{"_index":1360,"title":{},"body":{"modules/ClubModule.html":{},"overview.html":{}}}],["cluster_clubmodule_providers",{"_index":1361,"title":{},"body":{"modules/ClubModule.html":{},"overview.html":{}}}],["cluster_configuremodule",{"_index":1544,"title":{},"body":{"modules/ConfigureModule.html":{},"overview.html":{}}}],["cluster_configuremodule_declarations",{"_index":1545,"title":{},"body":{"modules/ConfigureModule.html":{},"overview.html":{}}}],["cluster_configuremodule_imports",{"_index":1546,"title":{},"body":{"modules/ConfigureModule.html":{},"overview.html":{}}}],["cluster_configuresharedmodule",{"_index":1598,"title":{},"body":{"modules/ConfigureSharedModule.html":{},"overview.html":{}}}],["cluster_configuresharedmodule_declarations",{"_index":1599,"title":{},"body":{"modules/ConfigureSharedModule.html":{},"overview.html":{}}}],["cluster_configuresharedmodule_exports",{"_index":1601,"title":{},"body":{"modules/ConfigureSharedModule.html":{},"overview.html":{}}}],["cluster_configuresharedmodule_imports",{"_index":1600,"title":{},"body":{"modules/ConfigureSharedModule.html":{}}}],["cluster_disciplinesmodule",{"_index":1932,"title":{},"body":{"modules/DisciplinesModule.html":{},"overview.html":{}}}],["cluster_disciplinesmodule_declarations",{"_index":1933,"title":{},"body":{"modules/DisciplinesModule.html":{},"overview.html":{}}}],["cluster_disciplinesmodule_exports",{"_index":1935,"title":{},"body":{"modules/DisciplinesModule.html":{},"overview.html":{}}}],["cluster_disciplinesmodule_imports",{"_index":1934,"title":{},"body":{"modules/DisciplinesModule.html":{}}}],["cluster_divisionsmodule",{"_index":2130,"title":{},"body":{"modules/DivisionsModule.html":{},"overview.html":{}}}],["cluster_divisionsmodule_declarations",{"_index":2131,"title":{},"body":{"modules/DivisionsModule.html":{},"overview.html":{}}}],["cluster_divisionsmodule_exports",{"_index":2133,"title":{},"body":{"modules/DivisionsModule.html":{},"overview.html":{}}}],["cluster_divisionsmodule_imports",{"_index":2132,"title":{},"body":{"modules/DivisionsModule.html":{}}}],["cluster_eventmodule",{"_index":2217,"title":{},"body":{"modules/EventModule.html":{},"overview.html":{}}}],["cluster_eventmodule_declarations",{"_index":2218,"title":{},"body":{"modules/EventModule.html":{},"overview.html":{}}}],["cluster_eventmodule_imports",{"_index":2219,"title":{},"body":{"modules/EventModule.html":{},"overview.html":{}}}],["cluster_scoresystemmodule",{"_index":4527,"title":{},"body":{"modules/ScoreSystemModule.html":{},"overview.html":{}}}],["cluster_scoresystemmodule_declarations",{"_index":4528,"title":{},"body":{"modules/ScoreSystemModule.html":{},"overview.html":{}}}],["cluster_scoresystemmodule_exports",{"_index":4530,"title":{},"body":{"modules/ScoreSystemModule.html":{},"overview.html":{}}}],["cluster_scoresystemmodule_imports",{"_index":4529,"title":{},"body":{"modules/ScoreSystemModule.html":{}}}],["cluster_sharedmodule",{"_index":4639,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":4640,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":4641,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule",{"_index":4928,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_declarations",{"_index":4929,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_imports",{"_index":4930,"title":{},"body":{"modules/TournamentModule.html":{}}}],["cluster_usersmodule",{"_index":5265,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_declarations",{"_index":5266,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":5267,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_venuemodule",{"_index":5388,"title":{},"body":{"modules/VenueModule.html":{},"overview.html":{}}}],["cluster_venuemodule_declarations",{"_index":5389,"title":{},"body":{"modules/VenueModule.html":{},"overview.html":{}}}],["cluster_venuemodule_imports",{"_index":5390,"title":{},"body":{"modules/VenueModule.html":{}}}],["clutter",{"_index":5585,"title":{},"body":{"index.html":{}}}],["cmd",{"_index":3898,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["code",{"_index":4321,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["col",{"_index":3642,"title":{},"body":{"components/MemberSelectorComponent.html":{},"components/SignoffReportComponent.html":{},"components/UserEditorComponent.html":{}}}],["collapsed",{"_index":5068,"title":{},"body":{"components/TroopsComponent.html":{}}}],["color",{"_index":185,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"injectables/UserService.html":{}}}],["colsfilteredbydivisionanddiscipline",{"_index":4670,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["colsfilteredbydivisionanddiscipline(division",{"_index":4680,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["column",{"_index":3644,"title":{},"body":{"components/MemberSelectorComponent.html":{},"components/TournamentComponent.html":{},"components/VenueComponent.html":{}}}],["columns",{"_index":4603,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["come",{"_index":2608,"title":{},"body":{"components/HomeComponent.html":{}}}],["comm",{"_index":2383,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["common",{"_index":1037,"title":{},"body":{"injectables/BrowserService.html":{},"modules/SharedModule.html":{}}}],["common.service",{"_index":4122,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["commonmodule",{"_index":369,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["commonservice",{"_index":1381,"title":{"injectables/CommonService.html":{}},"body":{"injectables/CommonService.html":{},"components/DisciplinesComponent.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"injectables/HttpStateService.html":{},"components/MemberEditorComponent.html":{},"components/RegisterComponent.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/SignoffReportComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"coverage.html":{}}}],["commonservice.compressstring(req.body.query",{"_index":2703,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["commonservice.datespan(this.tournament",{"_index":4710,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["commonservice.omit(d",{"_index":1899,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["commonservice.omit(member",{"_index":3516,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["commonservice.omit(s",{"_index":4227,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["commonservice.omit(troop",{"_index":4991,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["commonservice.omit(user",{"_index":4003,"title":{},"body":{"components/RegisterComponent.html":{}}}],["comparewith",{"_index":2022,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["competing",{"_index":3216,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["competition",{"_index":3263,"title":{},"body":{"components/MediaComponent.html":{}}}],["compile",{"_index":881,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["complete",{"_index":2585,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{},"index.html":{}}}],["completelly",{"_index":4434,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["component",{"_index":0,"title":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"modules/EventRoutingModule.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":226,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"overview.html":{}}}],["components/club",{"_index":4661,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/dialog/dialog.component",{"_index":4645,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/error",{"_index":4659,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/help",{"_index":4655,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/load",{"_index":4660,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/media",{"_index":4662,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/multirange/multirange.component",{"_index":4650,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/save",{"_index":4651,"title":{},"body":{"modules/SharedModule.html":{}}}],["compressstring",{"_index":1383,"title":{},"body":{"injectables/CommonService.html":{}}}],["compressstring(str",{"_index":1389,"title":{},"body":{"injectables/CommonService.html":{}}}],["conciderably",{"_index":850,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["config",{"_index":41,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AppModule.html":{},"components/ConfigureDisplayComponent.html":{},"injectables/MyHammerConfig.html":{},"components/ScoreSystemComponent.html":{}}}],["config.value",{"_index":4492,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["config.value).scoregroup",{"_index":4494,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["config.value.discipline",{"_index":1874,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["config.value.scoregroup",{"_index":1876,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["configform",{"_index":24,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["configreceived",{"_index":1487,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["configreceived(res",{"_index":1494,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["configservice",{"_index":1830,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/MediaComponent.html":{},"injectables/ScheduleService.html":{},"components/ScoreSystemComponent.html":{}}}],["configuration",{"_index":25,"title":{},"body":{"components/AdvancedComponent.html":{},"injectables/ConfigurationService.html":{},"components/TeamsComponent.html":{},"components/TroopsComponent.html":{},"index.html":{}}}],["configuration/configuration.service",{"_index":4121,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["configurationservice",{"_index":42,"title":{"injectables/ConfigurationService.html":{}},"body":{"components/AdvancedComponent.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureDisplayComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/MediaComponent.html":{},"injectables/ScheduleService.html":{},"components/ScoreSystemComponent.html":{},"components/TeamsComponent.html":{},"components/TroopsComponent.html":{},"coverage.html":{}}}],["configure",{"_index":242,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["configure'},{'name",{"_index":240,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["configure.component",{"_index":1558,"title":{},"body":{"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{}}}],["configure.component.html",{"_index":1466,"title":{},"body":{"components/ConfigureComponent.html":{}}}],["configure.component.scss",{"_index":1465,"title":{},"body":{"components/ConfigureComponent.html":{}}}],["configurecomponent",{"_index":239,"title":{"components/ConfigureComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configured",{"_index":3261,"title":{},"body":{"components/MediaComponent.html":{}}}],["configuredisplaycomponent",{"_index":241,"title":{"components/ConfigureDisplayComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configuremodule",{"_index":1543,"title":{"modules/ConfigureModule.html":{}},"body":{"modules/ConfigureModule.html":{},"modules.html":{},"overview.html":{}}}],["configureroutingmodule",{"_index":1547,"title":{"modules/ConfigureRoutingModule.html":{}},"body":{"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["configuresharedmodule",{"_index":1362,"title":{"modules/ConfigureSharedModule.html":{}},"body":{"modules/ClubModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["configuring",{"_index":115,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/MediaControlComponent.html":{}}}],["confirm(`a",{"_index":483,"title":{},"body":{"components/AppComponent.html":{}}}],["connect",{"_index":2272,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["connected",{"_index":3315,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["connection",{"_index":2394,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["consolas",{"_index":4322,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["console[type](...args",{"_index":3093,"title":{},"body":{"classes/Logger.html":{}}}],["consolidate",{"_index":3722,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["consolidatelowhigh",{"_index":3663,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["const",{"_index":102,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/BrowserService.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"modules/EventRoutingModule.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpStateService.html":{},"interfaces/IUser.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"injectables/UserService.html":{},"components/VenueEditorComponent.html":{}}}],["constructor",{"_index":38,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IJudge.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["constructor(@inject(platform_id",{"_index":1072,"title":{},"body":{"injectables/BrowserService.html":{}}}],["constructor(@optional",{"_index":5141,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["constructor(authstate",{"_index":4085,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["constructor(browser",{"_index":39,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["constructor(cache",{"_index":2640,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["constructor(config",{"_index":1491,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["constructor(configservice",{"_index":3234,"title":{},"body":{"components/MediaComponent.html":{},"injectables/ScheduleService.html":{}}}],["constructor(dialog",{"_index":2172,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/LoadIndicatorService.html":{}}}],["constructor(dialogref",{"_index":2142,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["constructor(element",{"_index":1729,"title":{},"body":{"components/DialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["constructor(elm",{"_index":4174,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["constructor(elmref",{"_index":1630,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["constructor(elref",{"_index":2326,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["constructor(error",{"_index":1081,"title":{},"body":{"guards/CanActivateRegistration.html":{}}}],["constructor(fb",{"_index":1171,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/LoginComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/ResetComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["constructor(graph",{"_index":1107,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{}}}],["constructor(http",{"_index":1450,"title":{},"body":{"injectables/ConfigurationService.html":{},"injectables/DisplayService.html":{},"injectables/GraphService.html":{},"injectables/MediaService.html":{},"injectables/UserService.html":{}}}],["constructor(injector",{"_index":1829,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["constructor(mediaservice",{"_index":3290,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["constructor(parent",{"_index":1940,"title":{},"body":{"components/DisplayComponent.html":{},"components/InfoComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(platformid",{"_index":1049,"title":{},"body":{"injectables/BrowserService.html":{}}}],["constructor(private",{"_index":112,"title":{},"body":{"components/AdvancedComponent.html":{},"guards/CanActivateRegistration.html":{},"components/ClubLookupComponent.html":{},"injectables/ConfigurationService.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"injectables/GraphService.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/LoadIndicatorService.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/PasswordComponent.html":{},"components/ResetComponent.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"components/ScoreSystemComponent.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{}}}],["constructor(protected",{"_index":4042,"title":{},"body":{"interfaces/RoleData.html":{},"guards/RoleGuard.html":{}}}],["constructor(public",{"_index":2265,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"interfaces/IScoreContainer.html":{},"classes/ScoreContainer.html":{},"classes/SubjectSource.html":{}}}],["constructor(renderer",{"_index":4882,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["constructor(request",{"_index":5135,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["constructor(route",{"_index":2194,"title":{},"body":{"components/EventComponent.html":{}}}],["constructor(router",{"_index":800,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LogoutComponent.html":{},"guards/RoleGuard.html":{},"components/ScorecardsComponent.html":{},"components/TournamentComponent.html":{}}}],["constructor(sanitizer",{"_index":2535,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(scoregroupid",{"_index":4160,"title":{},"body":{"classes/ScoreContainer.html":{}}}],["constructor(seo",{"_index":3982,"title":{},"body":{"components/RegisterComponent.html":{}}}],["constructor(subject",{"_index":2297,"title":{},"body":{"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["constructor(templateref",{"_index":2833,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["constructor(title",{"_index":4051,"title":{},"body":{"injectables/SEOService.html":{}}}],["constructor(userservice",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/TroopsComponent.html":{}}}],["contact",{"_index":2824,"title":{},"body":{"interfaces/IVenue.html":{},"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["contactemail",{"_index":2825,"title":{},"body":{"interfaces/IVenue.html":{},"components/VenueEditorComponent.html":{}}}],["contactphone",{"_index":2826,"title":{},"body":{"interfaces/IVenue.html":{},"components/VenueEditorComponent.html":{}}}],["contain",{"_index":3211,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["container",{"_index":557,"title":{},"body":{"components/AppComponent.html":{},"components/ContextMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"index.html":{}}}],["container.avg",{"_index":4197,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["container.scoregroup.operation",{"_index":4195,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["contains",{"_index":843,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/GraphService.html":{},"injectables/HttpCacheService.html":{},"index.html":{}}}],["contains(url",{"_index":2666,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["content",{"_index":534,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MemberEditorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"components/ScorecardsComponent.html":{}}}],["context",{"_index":245,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["contextinvoked(item",{"_index":3904,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["contextmenucomponent",{"_index":244,"title":{"components/ContextMenuComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["continuous",{"_index":5543,"title":{},"body":{"index.html":{}}}],["control",{"_index":3277,"title":{},"body":{"components/MediaControlComponent.html":{},"components/MultirangeComponent.html":{}}}],["control'},{'name",{"_index":285,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["control.component",{"_index":4663,"title":{},"body":{"modules/SharedModule.html":{}}}],["control.component.html",{"_index":3279,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.scss",{"_index":3278,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts",{"_index":3276,"title":{},"body":{"components/MediaControlComponent.html":{},"coverage.html":{}}}],["control.component.ts:13",{"_index":3331,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:14",{"_index":3311,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:15",{"_index":3333,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:18",{"_index":3300,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:20",{"_index":3313,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:22",{"_index":3302,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:24",{"_index":3307,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:26",{"_index":3312,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:28",{"_index":3330,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:30",{"_index":3293,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:31",{"_index":3336,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:33",{"_index":3292,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:37",{"_index":3326,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:40",{"_index":3325,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:46",{"_index":3318,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:55",{"_index":3323,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:61",{"_index":3320,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:65",{"_index":3322,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:73",{"_index":3319,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:82",{"_index":3321,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:86",{"_index":3327,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:90",{"_index":3329,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.component.ts:94",{"_index":3328,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["control.invalid",{"_index":3947,"title":{},"body":{"components/PasswordComponent.html":{},"components/ResetComponent.html":{}}}],["control.parent.errors",{"_index":3948,"title":{},"body":{"components/PasswordComponent.html":{},"components/ResetComponent.html":{}}}],["control.parent.errors.oneof",{"_index":4035,"title":{},"body":{"components/ResetComponent.html":{}}}],["control.parent.errors.oneof.invalid",{"_index":4036,"title":{},"body":{"components/ResetComponent.html":{}}}],["control.parent.errors.repeatpassword",{"_index":3949,"title":{},"body":{"components/PasswordComponent.html":{}}}],["control.parent.errors.repeatpassword.invalid",{"_index":3950,"title":{},"body":{"components/PasswordComponent.html":{}}}],["control/media",{"_index":3275,"title":{},"body":{"components/MediaControlComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["controlvalueaccessor",{"_index":1268,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["convention",{"_index":839,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["converted",{"_index":3654,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["copy",{"_index":2901,"title":{},"body":{"components/InfoComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["core",{"_index":5478,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":5291,"title":{},"body":{"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["count",{"_index":3750,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["countdown",{"_index":2141,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["counter",{"_index":2138,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/MultirangeComponent.html":{}}}],["counter(count,decimal",{"_index":3754,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["courier",{"_index":4326,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["coverage",{"_index":5393,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1788,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/DivisionsComponent.html":{},"modules/GraphQLModule.html":{},"injectables/LoadIndicatorService.html":{},"components/MemberEditorComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/TroopsComponent.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["create/edit",{"_index":3486,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["createapollo",{"_index":2409,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createapollo(httplink",{"_index":5528,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createcanonicalurl",{"_index":4049,"title":{},"body":{"injectables/SEOService.html":{}}}],["createcanonicalurl(url",{"_index":4053,"title":{},"body":{"injectables/SEOService.html":{}}}],["createcard",{"_index":4536,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["createcard(judge",{"_index":4539,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["created",{"_index":3040,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"components/TournamentComponent.html":{},"interfaces/UrlActivity.html":{},"components/VenueComponent.html":{}}}],["createdby",{"_index":2719,"title":{},"body":{"interfaces/ICreatedBy.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["createdbyid",{"_index":2720,"title":{},"body":{"interfaces/ICreatedBy.html":{},"components/TournamentComponent.html":{}}}],["createdby{id,name",{"_index":4919,"title":{},"body":{"components/TournamentComponent.html":{},"components/VenueEditorComponent.html":{}}}],["createnetworkactivityobservable",{"_index":2973,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["createnetworkactivityobservable(url",{"_index":2985,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["creates",{"_index":2987,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["createtournament",{"_index":5302,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["createtroop",{"_index":5106,"title":{},"body":{"components/TroopsComponent.html":{}}}],["createtroop(divisionmembers",{"_index":5123,"title":{},"body":{"components/TroopsComponent.html":{}}}],["createtroop(divisionmembers.filter(g",{"_index":5122,"title":{},"body":{"components/TroopsComponent.html":{}}}],["creating",{"_index":1219,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{}}}],["credentials",{"_index":4010,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["criteria",{"_index":3297,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["cross",{"_index":3309,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["css",{"_index":3726,"title":{},"body":{"components/MultirangeComponent.html":{},"dependencies.html":{}}}],["cubic",{"_index":3062,"title":{},"body":{"components/LoadSpinnerComponent.html":{},"components/TroopsComponent.html":{}}}],["curr",{"_index":988,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/IScoreContainer.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{}}}],["curr.disciplines.length",{"_index":4850,"title":{},"body":{"components/TeamsComponent.html":{}}}],["curr.time.split",{"_index":4846,"title":{},"body":{"components/TeamsComponent.html":{}}}],["curr.value",{"_index":2771,"title":{},"body":{"interfaces/IScoreContainer.html":{},"classes/ScoreContainer.html":{}}}],["current",{"_index":1972,"title":{},"body":{"injectables/DisplayService.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/MacroDialogComponent.html":{},"components/PasswordComponent.html":{},"components/SignoffReportComponent.html":{},"interfaces/TournamentType.html":{},"injectables/UserService.html":{}}}],["current.judgecount",{"_index":4741,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["current.judges",{"_index":4734,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["current.type",{"_index":4739,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["currentday",{"_index":4145,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["currentdelete",{"_index":2956,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["currenthelpblocks",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["currentindex",{"_index":1484,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["currentlang",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["currentload",{"_index":2957,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["currently",{"_index":1091,"title":{},"body":{"guards/CanActivateRegistration.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["currentsave",{"_index":2958,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["currentsort",{"_index":2264,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["currentsort(v",{"_index":4785,"title":{},"body":{"classes/SubjectSource.html":{}}}],["currentuser",{"_index":708,"title":{},"body":{"modules/AppModule.html":{},"components/ContextMenuComponent.html":{},"injectables/MyHammerConfig.html":{},"interfaces/ParticipantCache.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{}}}],["currentuser(value",{"_index":4964,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["currentuser.role",{"_index":4044,"title":{},"body":{"interfaces/RoleData.html":{},"guards/RoleGuard.html":{}}}],["currentuser.token",{"_index":710,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["currentuserreceived",{"_index":5202,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuserreceived(response",{"_index":5208,"title":{},"body":{"injectables/UserService.html":{}}}],["cursor",{"_index":548,"title":{},"body":{"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{}}}],["custom",{"_index":751,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["cyclic",{"_index":919,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["d",{"_index":2496,"title":{},"body":{"injectables/GraphService.html":{}}}],["d.gettime",{"_index":2498,"title":{},"body":{"injectables/GraphService.html":{}}}],["d.id",{"_index":1915,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/ScorecardsComponent.html":{},"components/TeamsComponent.html":{}}}],["d.name",{"_index":1921,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{}}}],["d.sortorder",{"_index":1926,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{}}}],["d.type",{"_index":2112,"title":{},"body":{"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["darken($helpcolor",{"_index":2514,"title":{},"body":{"components/HelpBlockComponent.html":{}}}],["darken(rgba($primary",{"_index":579,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":819,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"modules/EventRoutingModule.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScorecardsComponent.html":{},"interfaces/TournamentType.html":{},"index.html":{}}}],["data.getdisciplines",{"_index":3812,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["data.getschedule",{"_index":3817,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["data.gettournaments.filter(t",{"_index":2601,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["data.header",{"_index":2159,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["data.message",{"_index":2160,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["data.stack",{"_index":2161,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["data.tournament",{"_index":2208,"title":{},"body":{"components/EventComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["database",{"_index":5578,"title":{},"body":{"index.html":{}}}],["datasource",{"_index":2256,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["date",{"_index":1421,"title":{},"body":{"injectables/CommonService.html":{},"components/EventComponent.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"interfaces/IGymnast.html":{},"interfaces/IScore.html":{},"interfaces/ITeamInDiscipline.html":{},"components/MacroDialogComponent.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{}}}],["date().gettime",{"_index":2599,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["date.pipe",{"_index":4654,"title":{},"body":{"modules/SharedModule.html":{}}}],["date.pipe.ts",{"_index":5271,"title":{},"body":{"pipes/UtcDatePipe.html":{},"coverage.html":{}}}],["date.pipe.ts:8",{"_index":5274,"title":{},"body":{"pipes/UtcDatePipe.html":{}}}],["date:'hh:mm",{"_index":4268,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["date:\\'hh:mm",{"_index":4335,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["datespan",{"_index":1384,"title":{},"body":{"injectables/CommonService.html":{},"components/SignoffReportComponent.html":{}}}],["datespan(tournament",{"_index":1392,"title":{},"body":{"injectables/CommonService.html":{}}}],["day",{"_index":2803,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"injectables/ScheduleService.html":{}}}],["day').hour(+tournament.times[this.gettournamentday(tournament",{"_index":4153,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["days",{"_index":1437,"title":{},"body":{"injectables/CommonService.html":{},"injectables/ScheduleService.html":{}}}],["db",{"_index":173,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["dd.mm",{"_index":2211,"title":{},"body":{"components/EventComponent.html":{}}}],["dd.mm.yyyy",{"_index":2614,"title":{},"body":{"components/HomeComponent.html":{},"components/TournamentComponent.html":{},"pipes/UtcDatePipe.html":{}}}],["ddd",{"_index":2940,"title":{},"body":{"components/InfoComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["dealing",{"_index":826,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["debouncetime",{"_index":1315,"title":{},"body":{"components/ClubLookupComponent.html":{},"injectables/GraphService.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TeamsComponent.html":{},"components/VenueEditorComponent.html":{}}}],["debouncetime(200",{"_index":1331,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/VenueEditorComponent.html":{}}}],["debouncetime(200)).subscribe(v",{"_index":4389,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["debug",{"_index":3079,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["debug(...args",{"_index":3083,"title":{},"body":{"classes/Logger.html":{}}}],["debugging",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["decimals",{"_index":3195,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["declarations",{"_index":352,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{},"overview.html":{}}}],["declare",{"_index":4889,"title":{},"body":{"directives/ToCaseDirective.html":{},"miscellaneous/variables.html":{}}}],["decodeuricomponent(params.u",{"_index":3123,"title":{},"body":{"components/LoginComponent.html":{}}}],["decoration",{"_index":542,"title":{},"body":{"components/AppComponent.html":{},"components/MemberEditorComponent.html":{}}}],["decorators",{"_index":81,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ContextMenuComponent.html":{},"components/ErrorDialogComponent.html":{},"components/InfoComponent.html":{},"components/MultirangeComponent.html":{}}}],["decrease",{"_index":4263,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["deep",{"_index":1473,"title":{},"body":{"components/ConfigureComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/MacroDialogComponent.html":{},"components/MemberEditorComponent.html":{}}}],["def",{"_index":3228,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["def.name",{"_index":1922,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["default",{"_index":70,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"components/RegisterComponent.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultdisciplines",{"_index":1813,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["defaultdivisions",{"_index":2057,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["defaultoptions",{"_index":2403,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["defaults",{"_index":468,"title":{},"body":{"components/AppComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/MediaComponent.html":{},"components/MemberEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["defaults.map(group",{"_index":1913,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["defaults.value",{"_index":2094,"title":{},"body":{"components/DivisionsComponent.html":{},"components/MediaComponent.html":{},"components/TroopsComponent.html":{}}}],["defaults.value).discipline",{"_index":3245,"title":{},"body":{"components/MediaComponent.html":{}}}],["defaults.value).division",{"_index":2096,"title":{},"body":{"components/DivisionsComponent.html":{},"components/TroopsComponent.html":{}}}],["defaultscoregroups",{"_index":1814,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["defaultvalueaccessor",{"_index":4887,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["defaultvaluekeys",{"_index":37,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["defaultvalues",{"_index":36,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["defaultvalues').value",{"_index":106,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["define",{"_index":3189,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["defined",{"_index":49,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["delay",{"_index":3068,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["delete",{"_index":845,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ClubEditorComponent.html":{},"injectables/ConfigurationService.html":{},"components/ContextMenuComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"injectables/GraphService.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"injectables/LoadIndicatorService.html":{},"components/MemberEditorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["delete${type}(id:${id",{"_index":2452,"title":{},"body":{"injectables/GraphService.html":{}}}],["delete'].indexof(req.method",{"_index":2643,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["delete(configuration",{"_index":1453,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["delete(query",{"_index":2419,"title":{},"body":{"injectables/GraphService.html":{}}}],["deleteallteams",{"_index":5008,"title":{},"body":{"components/TroopsComponent.html":{}}}],["deleted",{"_index":962,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/DivisionsComponent.html":{},"components/SaveButtonComponent.html":{}}}],["deletedata",{"_index":2411,"title":{},"body":{"injectables/GraphService.html":{}}}],["deletedata(type",{"_index":2421,"title":{},"body":{"injectables/GraphService.html":{}}}],["deleteobservable",{"_index":2959,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["deleteobservers",{"_index":2960,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["deleting",{"_index":3019,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["dependencies",{"_index":351,"title":{"dependencies.html":{}},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":920,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["deploy",{"_index":5570,"title":{},"body":{"index.html":{}}}],["deps",{"_index":728,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"injectables/MyHammerConfig.html":{}}}],["desc",{"_index":3186,"title":{},"body":{"components/MacroDialogComponent.html":{},"injectables/SEOService.html":{}}}],["description",{"_index":1034,"title":{},"body":{"injectables/BrowserService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpCacheInterceptor.html":{},"interfaces/IJudgeInScoreGroup.html":{},"components/InfoComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"injectables/SEOService.html":{}}}],["description_en",{"_index":2198,"title":{},"body":{"components/EventComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{}}}],["description_no",{"_index":2552,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{}}}],["detached",{"_index":5560,"title":{},"body":{"index.html":{}}}],["detailrow",{"_index":2253,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["details",{"_index":3488,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["detect",{"_index":857,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["detecting",{"_index":823,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["determine",{"_index":3485,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["dev",{"_index":464,"title":{},"body":{"components/AppComponent.html":{}}}],["developing",{"_index":5548,"title":{},"body":{"index.html":{}}}],["development",{"_index":5550,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":1542,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"components/MacroDialogComponent.html":{},"interfaces/ParticipantCache.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{}}}],["dialog'},{'name",{"_index":248,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["dialog.component",{"_index":1563,"title":{},"body":{"modules/ConfigureModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/SharedModule.html":{}}}],["dialog.component.html",{"_index":1718,"title":{},"body":{"components/DialogComponent.html":{},"components/ErrorDialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["dialog.component.scss",{"_index":1717,"title":{},"body":{"components/DialogComponent.html":{},"components/ErrorDialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["dialog.component.ts",{"_index":2137,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/MacroDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:10",{"_index":2151,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.component.ts:11",{"_index":2150,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":2143,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":2149,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":2148,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":2147,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":2145,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":2146,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":2144,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.component.ts:51",{"_index":3172,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["dialog.component.ts:54",{"_index":3171,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["dialog/error",{"_index":2136,"title":{},"body":{"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialog/macro",{"_index":1562,"title":{},"body":{"modules/ConfigureModule.html":{},"components/MacroDialogComponent.html":{},"coverage.html":{}}}],["dialogcomponent",{"_index":247,"title":{"components/DialogComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogcomponent:10",{"_index":3178,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["dialogcomponent:12",{"_index":3164,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["dialogcomponent:15",{"_index":3166,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["dialogcomponent:16",{"_index":3167,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["dialogcomponent:20",{"_index":3175,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["dialogcomponent:22",{"_index":3177,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["dialogcomponent:26",{"_index":3174,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["dialogcomponent:31",{"_index":3176,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["dialogcomponent:37",{"_index":3169,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["dialogcomponent:44",{"_index":3168,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["dialogcomponent:50",{"_index":3173,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["dialogcomponent:9",{"_index":3165,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["dialogcontainer",{"_index":1762,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialogref",{"_index":1631,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{}}}],["dir",{"_index":4791,"title":{},"body":{"classes/SubjectSource.html":{}}}],["direction",{"_index":3643,"title":{},"body":{"components/MemberSelectorComponent.html":{},"pipes/OrderByPipe.html":{}}}],["directions",{"_index":2605,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":224,"title":{"directives/IfAuthDirective.html":{},"directives/ToCaseDirective.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["directives",{"_index":339,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"overview.html":{}}}],["directives/auth/if",{"_index":4646,"title":{},"body":{"modules/SharedModule.html":{}}}],["directives/to",{"_index":4657,"title":{},"body":{"modules/SharedModule.html":{}}}],["directly",{"_index":5564,"title":{},"body":{"index.html":{}}}],["disable",{"_index":160,"title":{},"body":{"components/AdvancedComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["disabled",{"_index":3536,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/SaveButtonComponent.html":{},"components/VenueEditorComponent.html":{}}}],["discipline",{"_index":250,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/IMedia.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeamInDiscipline.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["discipline.judgesplain",{"_index":1889,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["discipline.name",{"_index":1807,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/MediaComponent.html":{}}}],["discipline.scoregroups",{"_index":4566,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["discipline.scoregroups.foreach(group",{"_index":4719,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["discipline.scoregroups.map(g",{"_index":4582,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["disciplinechanged",{"_index":1776,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["disciplineeditorcomponent",{"_index":249,"title":{"components/DisciplineEditorComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["disciplineform",{"_index":1772,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["disciplineid",{"_index":2752,"title":{},"body":{"interfaces/IMedia.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeamInDiscipline.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["disciplinelist",{"_index":1826,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["disciplinelistchanged",{"_index":1827,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["disciplinename",{"_index":2753,"title":{},"body":{"interfaces/IMedia.html":{},"interfaces/ITeamInDiscipline.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"interfaces/ParticipantCache.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["disciplinenames",{"_index":4678,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["disciplinequery",{"_index":1815,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["disciplineroutes",{"_index":1585,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["disciplines",{"_index":171,"title":{},"body":{"components/AdvancedComponent.html":{},"components/DisciplinesComponent.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{}}}],["disciplines'},{'name",{"_index":252,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["disciplines(team",{"_index":4820,"title":{},"body":{"components/TeamsComponent.html":{}}}],["disciplines.component",{"_index":1937,"title":{},"body":{"modules/DisciplinesModule.html":{}}}],["disciplines.component.html",{"_index":1812,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["disciplines.component.scss",{"_index":1811,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["disciplines/disciplines.module",{"_index":4935,"title":{},"body":{"modules/TournamentModule.html":{}}}],["disciplinescomponent",{"_index":251,"title":{"components/DisciplinesComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["disciplinesmodule",{"_index":359,"title":{"modules/DisciplinesModule.html":{}},"body":{"modules/AdvancedModule.html":{},"modules/DisciplinesModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["disciplinesortorder",{"_index":2780,"title":{},"body":{"interfaces/ITeamInDiscipline.html":{},"interfaces/ParticipantCache.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["disciplines{id,name",{"_index":4858,"title":{},"body":{"components/TeamsComponent.html":{}}}],["disconnect",{"_index":2292,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["display",{"_index":211,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/DialogComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionLookupComponent.html":{},"components/EventComponent.html":{},"modules/EventRoutingModule.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{}}}],["display'},{'name",{"_index":243,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["display.component",{"_index":1560,"title":{},"body":{"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{}}}],["display.component.html",{"_index":1483,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"components/DisplayComponent.html":{}}}],["display.component.scss",{"_index":1482,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"components/DisplayComponent.html":{}}}],["display.component.ts",{"_index":1481,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"coverage.html":{}}}],["display.component.ts:15",{"_index":1506,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["display.component.ts:16",{"_index":1507,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["display.component.ts:17",{"_index":1505,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["display.component.ts:18",{"_index":1504,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["display.component.ts:19",{"_index":1493,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["display.component.ts:28",{"_index":1498,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["display.component.ts:37",{"_index":1495,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["display.component.ts:48",{"_index":1503,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["display.component.ts:58",{"_index":1501,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["display.component.ts:64",{"_index":1496,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["display.component.ts:69",{"_index":1502,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["display.component.ts:76",{"_index":1497,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["display/:displayid",{"_index":2247,"title":{},"body":{"modules/EventRoutingModule.html":{}}}],["display/configure",{"_index":1559,"title":{},"body":{"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{}}}],["display/display.component",{"_index":2226,"title":{},"body":{"modules/EventModule.html":{},"modules/EventRoutingModule.html":{}}}],["display/fullscreen/fullscreen.component",{"_index":2227,"title":{},"body":{"modules/EventModule.html":{},"modules/EventRoutingModule.html":{}}}],["display/macro",{"_index":1561,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["display1",{"_index":1519,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["display2",{"_index":1522,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["displaycolumns",{"_index":4804,"title":{},"body":{"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UsersComponent.html":{}}}],["displaycomponent",{"_index":253,"title":{"components/DisplayComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["displayed",{"_index":2168,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/VenueEditorComponent.html":{}}}],["displayedcolumns",{"_index":5005,"title":{},"body":{"components/TroopsComponent.html":{},"components/VenueComponent.html":{}}}],["displayhtml",{"_index":2323,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["displayid",{"_index":1975,"title":{},"body":{"injectables/DisplayService.html":{},"components/FullscreenComponent.html":{}}}],["displays",{"_index":1956,"title":{},"body":{"components/DisplayComponent.html":{}}}],["displayservice",{"_index":1492,"title":{"injectables/DisplayService.html":{}},"body":{"components/ConfigureDisplayComponent.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/FullscreenComponent.html":{},"coverage.html":{}}}],["distinctuntilchanged",{"_index":1314,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["distributed",{"_index":4545,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["div",{"_index":209,"title":{},"body":{"components/AdvancedComponent.html":{},"components/HomeComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{}}}],["div.sortorder",{"_index":1887,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{}}}],["divider",{"_index":2943,"title":{},"body":{"components/InfoComponent.html":{}}}],["division",{"_index":255,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["division.min",{"_index":5121,"title":{},"body":{"components/TroopsComponent.html":{}}}],["division.name",{"_index":2052,"title":{},"body":{"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{}}}],["divisionchanged",{"_index":1988,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["divisioneditorcomponent",{"_index":254,"title":{"components/DivisionEditorComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["divisionform",{"_index":1985,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["divisionlookupcomponent",{"_index":256,"title":{"components/DivisionLookupComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["divisionmatch",{"_index":5086,"title":{},"body":{"components/TroopsComponent.html":{}}}],["divisionmembers",{"_index":5118,"title":{},"body":{"components/TroopsComponent.html":{}}}],["divisionname",{"_index":2777,"title":{},"body":{"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ParticipantCache.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["divisionnames",{"_index":4677,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["divisionreceived",{"_index":2061,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["divisionreceived(divisions",{"_index":2072,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["divisions",{"_index":170,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["divisions'},{'name",{"_index":258,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["divisions.component",{"_index":2000,"title":{},"body":{"components/DivisionEditorComponent.html":{},"modules/DivisionsModule.html":{}}}],["divisions.component.html",{"_index":2055,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["divisions.component.scss",{"_index":2054,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["divisions.push($event",{"_index":2122,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["divisions.splice(divisions.findindex(d",{"_index":2124,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["divisions/divisions.module",{"_index":4936,"title":{},"body":{"modules/TournamentModule.html":{}}}],["divisionschanged",{"_index":2064,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["divisionscomponent",{"_index":257,"title":{"components/DivisionsComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["divisionscomponent.divisionsquery).subscribe(result",{"_index":2013,"title":{},"body":{"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{}}}],["divisionscomponent.divisionsquery).topromise",{"_index":2106,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["divisionsmodule",{"_index":360,"title":{"modules/DivisionsModule.html":{}},"body":{"modules/AdvancedModule.html":{},"modules/DivisionsModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["divisionsortorder",{"_index":2781,"title":{},"body":{"interfaces/ITeamInDiscipline.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["divisionsquery",{"_index":2058,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["divisiontype",{"_index":1994,"title":{},"body":{"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"components/ScorecardsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["divisiontype.age",{"_index":1995,"title":{},"body":{"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{}}}],["divisiontype.gender",{"_index":1997,"title":{},"body":{"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{}}}],["divisiontypes",{"_index":1986,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["docker",{"_index":5581,"title":{},"body":{"index.html":{}}}],["document",{"_index":1045,"title":{},"body":{"injectables/BrowserService.html":{},"injectables/SEOService.html":{},"components/ScoreEditorComponent.html":{}}}],["documentation",{"_index":5394,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":3740,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["domain",{"_index":5612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["domrect",{"_index":4220,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["domsanitizer",{"_index":2536,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["don't",{"_index":5568,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["done",{"_index":2646,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/ParticipantCache.html":{}}}],["down",{"_index":4262,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["drag",{"_index":3639,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["dragdropmodule",{"_index":372,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{}}}],["dragula",{"_index":1605,"title":{},"body":{"modules/ConfigureSharedModule.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{}}}],["dragulamodule",{"_index":1603,"title":{},"body":{"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{}}}],["dragulamodule.forroot",{"_index":1610,"title":{},"body":{"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{}}}],["dragulaservice",{"_index":1865,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{}}}],["driven",{"_index":5587,"title":{},"body":{"index.html":{}}}],["drop",{"_index":374,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/ConfigureSharedModule.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{}}}],["drop(event",{"_index":1839,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["dropped",{"_index":5588,"title":{},"body":{"index.html":{}}}],["duration",{"_index":964,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["dynamic",{"_index":5462,"title":{},"body":{"dependencies.html":{}}}],["e.message.statuscode",{"_index":975,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["e1",{"_index":4581,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["e2e",{"_index":5573,"title":{},"body":{"index.html":{}}}],["each",{"_index":3316,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["ease",{"_index":571,"title":{},"body":{"components/AppComponent.html":{},"components/HelpBlockComponent.html":{},"components/MemberSelectorComponent.html":{}}}],["easier",{"_index":851,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/InfoComponent.html":{}}}],["easy",{"_index":3966,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["ececec",{"_index":4308,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["edit",{"_index":1134,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/InfoComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreEditorComponent.html":{}}}],["editing",{"_index":1837,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["editingscore",{"_index":1773,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["editmodechanged",{"_index":4458,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["editor",{"_index":338,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["editor'},{'name",{"_index":236,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["editor.component",{"_index":1371,"title":{},"body":{"modules/ClubModule.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"components/InfoComponent.html":{},"components/MediaComponent.html":{},"components/MemberEditorComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"components/TeamsComponent.html":{},"modules/TournamentModule.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["editor.component.html",{"_index":1158,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["editor.component.scss",{"_index":1157,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["editor.component.ts",{"_index":1156,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:100",{"_index":4179,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/UserEditorComponent.html":{}}}],["editor.component.ts:101",{"_index":1182,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["editor.component.ts:105",{"_index":5314,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["editor.component.ts:107",{"_index":4184,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["editor.component.ts:109",{"_index":4357,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["editor.component.ts:110",{"_index":1178,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["editor.component.ts:111",{"_index":5310,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["editor.component.ts:112",{"_index":3460,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["editor.component.ts:114",{"_index":4186,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{}}}],["editor.component.ts:116",{"_index":4951,"title":{},"body":{"components/TroopEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["editor.component.ts:117",{"_index":1175,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/MemberEditorComponent.html":{}}}],["editor.component.ts:118",{"_index":5163,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["editor.component.ts:120",{"_index":5312,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["editor.component.ts:122",{"_index":4949,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["editor.component.ts:123",{"_index":5162,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["editor.component.ts:124",{"_index":5307,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["editor.component.ts:125",{"_index":1180,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{}}}],["editor.component.ts:128",{"_index":5308,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["editor.component.ts:129",{"_index":1179,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{}}}],["editor.component.ts:13",{"_index":1779,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["editor.component.ts:132",{"_index":5159,"title":{},"body":{"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["editor.component.ts:135",{"_index":4185,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["editor.component.ts:136",{"_index":1174,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{}}}],["editor.component.ts:14",{"_index":1778,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{}}}],["editor.component.ts:141",{"_index":5158,"title":{},"body":{"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["editor.component.ts:142",{"_index":3458,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["editor.component.ts:144",{"_index":4182,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["editor.component.ts:149",{"_index":3457,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["editor.component.ts:15",{"_index":1780,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{}}}],["editor.component.ts:150",{"_index":4356,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["editor.component.ts:154",{"_index":3454,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["editor.component.ts:156",{"_index":4365,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["editor.component.ts:16",{"_index":1990,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["editor.component.ts:163",{"_index":4177,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["editor.component.ts:164",{"_index":4360,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["editor.component.ts:17",{"_index":1787,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{}}}],["editor.component.ts:18",{"_index":1194,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["editor.component.ts:19",{"_index":1999,"title":{},"body":{"components/DivisionEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["editor.component.ts:20",{"_index":1187,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["editor.component.ts:21",{"_index":1185,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["editor.component.ts:22",{"_index":1190,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{}}}],["editor.component.ts:23",{"_index":4175,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/UserEditorComponent.html":{}}}],["editor.component.ts:24",{"_index":1188,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{}}}],["editor.component.ts:25",{"_index":4366,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{},"components/UserEditorComponent.html":{}}}],["editor.component.ts:26",{"_index":1191,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["editor.component.ts:27",{"_index":1192,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["editor.component.ts:28",{"_index":4187,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["editor.component.ts:29",{"_index":1193,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/UserEditorComponent.html":{}}}],["editor.component.ts:31",{"_index":1196,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{}}}],["editor.component.ts:32",{"_index":4189,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":1786,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["editor.component.ts:34",{"_index":1172,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["editor.component.ts:35",{"_index":4958,"title":{},"body":{"components/TroopEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["editor.component.ts:36",{"_index":4959,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["editor.component.ts:38",{"_index":4961,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":4361,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["editor.component.ts:40",{"_index":1993,"title":{},"body":{"components/DivisionEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":5319,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["editor.component.ts:42",{"_index":1783,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":1181,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/UserEditorComponent.html":{}}}],["editor.component.ts:44",{"_index":3471,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["editor.component.ts:46",{"_index":3470,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":3466,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["editor.component.ts:48",{"_index":5321,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":3453,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":1785,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{}}}],["editor.component.ts:53",{"_index":5306,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["editor.component.ts:54",{"_index":1782,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["editor.component.ts:55",{"_index":4180,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["editor.component.ts:56",{"_index":4953,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["editor.component.ts:58",{"_index":3461,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":1781,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["editor.component.ts:60",{"_index":1992,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["editor.component.ts:64",{"_index":5311,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["editor.component.ts:65",{"_index":1991,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["editor.component.ts:70",{"_index":4358,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["editor.component.ts:72",{"_index":5161,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["editor.component.ts:76",{"_index":5165,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["editor.component.ts:80",{"_index":1184,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["editor.component.ts:82",{"_index":4952,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["editor.component.ts:85",{"_index":1177,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["editor.component.ts:86",{"_index":4178,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["editor.component.ts:88",{"_index":4363,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["editor.component.ts:94",{"_index":5160,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["editor.component.ts:96",{"_index":4955,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["editor.component.ts:99",{"_index":5316,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["editor/club",{"_index":1155,"title":{},"body":{"components/ClubEditorComponent.html":{},"modules/ClubModule.html":{},"components/MediaComponent.html":{},"components/MemberEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"coverage.html":{}}}],["editor/discipline",{"_index":1771,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"modules/DisciplinesModule.html":{},"coverage.html":{}}}],["editor/division",{"_index":1984,"title":{},"body":{"components/DivisionEditorComponent.html":{},"modules/DivisionsModule.html":{},"coverage.html":{}}}],["editor/member",{"_index":1374,"title":{},"body":{"modules/ClubModule.html":{},"components/MemberEditorComponent.html":{},"coverage.html":{}}}],["editor/score",{"_index":2236,"title":{},"body":{"modules/EventModule.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"modules/ScoreSystemModule.html":{},"coverage.html":{}}}],["editor/team",{"_index":5446,"title":{},"body":{"coverage.html":{}}}],["editor/tournament",{"_index":1867,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/InfoComponent.html":{},"components/ScorecardsComponent.html":{},"components/TeamsComponent.html":{},"modules/TournamentModule.html":{},"coverage.html":{}}}],["editor/troop",{"_index":1378,"title":{},"body":{"modules/ClubModule.html":{},"components/TroopEditorComponent.html":{},"coverage.html":{}}}],["editor/user",{"_index":5151,"title":{},"body":{"components/UserEditorComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["editor/venue",{"_index":5297,"title":{},"body":{"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"coverage.html":{}}}],["eee",{"_index":3647,"title":{},"body":{"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{}}}],["efficient",{"_index":5536,"title":{},"body":{"index.html":{}}}],["element",{"_index":223,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["elementref",{"_index":80,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/FullscreenComponent.html":{},"components/MacroDialogComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreEditorComponent.html":{},"directives/ToCaseDirective.html":{}}}],["elements",{"_index":2278,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["elements.sort((a",{"_index":4790,"title":{},"body":{"classes/SubjectSource.html":{}}}],["elevation(2",{"_index":4307,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["ellipsis",{"_index":3269,"title":{},"body":{"components/MediaComponent.html":{},"components/MediaControlComponent.html":{}}}],["elm",{"_index":2342,"title":{},"body":{"components/FullscreenComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["elm.mozrequestfullscreen",{"_index":2346,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["elm.msrequestfullscreen",{"_index":2345,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["elm.requestfullscreen",{"_index":2344,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["elm.webkitrequestfullscreen",{"_index":2347,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["elmref",{"_index":1617,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["elref",{"_index":2328,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["email",{"_index":2729,"title":{},"body":{"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IUser.html":{},"classes/Judge.html":{},"components/MemberEditorComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/VenueEditorComponent.html":{}}}],["emit",{"_index":3728,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["emitevent",{"_index":1214,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{}}}],["empty",{"_index":1709,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["en",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["enable",{"_index":2051,"title":{},"body":{"components/DivisionLookupComponent.html":{},"modules/EventRoutingModule.html":{}}}],["enabled",{"_index":723,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["encapsulation",{"_index":3048,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["encodeuricomponent(loc.pathname",{"_index":458,"title":{},"body":{"components/AppComponent.html":{}}}],["encodeuricomponent(this.browser.window().location.pathname",{"_index":1003,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["encodeuricomponent(v",{"_index":1337,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["end",{"_index":1428,"title":{},"body":{"injectables/CommonService.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/MacroDialogComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"index.html":{}}}],["end.diff(start",{"_index":1436,"title":{},"body":{"injectables/CommonService.html":{}}}],["end.format('mmm",{"_index":1432,"title":{},"body":{"injectables/CommonService.html":{}}}],["end.issame(start",{"_index":1431,"title":{},"body":{"injectables/CommonService.html":{}}}],["enddate",{"_index":2200,"title":{},"body":{"components/EventComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{}}}],["endofline",{"_index":2871,"title":{},"body":{"components/InfoComponent.html":{}}}],["endpoint",{"_index":2391,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["endtime",{"_index":2782,"title":{},"body":{"interfaces/ITeamInDiscipline.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/SignoffReportComponent.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["engine",{"_index":5466,"title":{},"body":{"dependencies.html":{}}}],["engine/tokens",{"_index":5140,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["enough",{"_index":847,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ScheduleService.html":{}}}],["enter",{"_index":4012,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/UserEditorComponent.html":{}}}],["entered",{"_index":3975,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["entry",{"_index":1352,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/MemberEditorComponent.html":{}}}],["entrycomponents",{"_index":2222,"title":{},"body":{"modules/EventModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}}}],["enum",{"_index":2812,"title":{},"body":{"interfaces/IUser.html":{},"components/RegisterComponent.html":{}}}],["enumerations",{"_index":5505,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"classes/Logger.html":{},"injectables/MyHammerConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.allowregistrations",{"_index":1089,"title":{},"body":{"guards/CanActivateRegistration.html":{}}}],["environment.geoapikey",{"_index":735,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["environment.production",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Logger.html":{},"injectables/MyHammerConfig.html":{}}}],["environments/environment",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Logger.html":{},"injectables/MyHammerConfig.html":{}}}],["equal",{"_index":3972,"title":{},"body":{"components/PasswordComponent.html":{}}}],["err",{"_index":938,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ClubEditorComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["error",{"_index":260,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["error(...args",{"_index":3085,"title":{},"body":{"classes/Logger.html":{}}}],["error.error",{"_index":1016,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["error.status",{"_index":997,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["error.statustext",{"_index":1019,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["errordialogcomponent",{"_index":259,"title":{"components/ErrorDialogComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorhandler",{"_index":3100,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/ParticipantCache.html":{},"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{}}}],["errorhandlerservice",{"_index":804,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"guards/CanActivateRegistration.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"interfaces/ParticipantCache.html":{},"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{},"coverage.html":{}}}],["errormessage",{"_index":875,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["errormessage.error",{"_index":1018,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["errormessage.message.indexof",{"_index":995,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["errormessage.stack",{"_index":1021,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["errormessage.stack.replace(errormessage.message",{"_index":1022,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["errorpolicy",{"_index":2406,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["errors",{"_index":872,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["errorstatematcher",{"_index":3931,"title":{},"body":{"components/PasswordComponent.html":{},"components/ResetComponent.html":{}}}],["esc",{"_index":1757,"title":{},"body":{"components/DialogComponent.html":{},"components/DisplayComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["escape",{"_index":1245,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/FullscreenComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["event",{"_index":66,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"dependencies.html":{}}}],["event'},{'name",{"_index":262,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["event.clientx",{"_index":3911,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["event.clienty",{"_index":3913,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["event.component",{"_index":1949,"title":{},"body":{"components/DisplayComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"components/FullscreenComponent.html":{},"interfaces/ParticipantCache.html":{},"components/SignoffReportComponent.html":{}}}],["event.component.html",{"_index":2193,"title":{},"body":{"components/EventComponent.html":{}}}],["event.component.scss",{"_index":2192,"title":{},"body":{"components/EventComponent.html":{}}}],["event.container",{"_index":3606,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["event.container.data",{"_index":3608,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["event.container.data.foreach((div",{"_index":2101,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["event.ctrlkey",{"_index":2934,"title":{},"body":{"components/InfoComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["event.currentindex",{"_index":1884,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["event.key",{"_index":1756,"title":{},"body":{"components/DialogComponent.html":{},"components/InfoComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["event.option.value",{"_index":3519,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{}}}],["event.preventdefault",{"_index":2935,"title":{},"body":{"components/InfoComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreEditorComponent.html":{}}}],["event.previouscontainer",{"_index":3605,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["event.previousindex",{"_index":1883,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["event.srcevent.preventdefault",{"_index":5125,"title":{},"body":{"components/TroopsComponent.html":{}}}],["event.srcevent.stoppropagation",{"_index":5126,"title":{},"body":{"components/TroopsComponent.html":{}}}],["event.stoppropagation",{"_index":3906,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["event.target).files",{"_index":3353,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["event.target).getattribute('role",{"_index":1761,"title":{},"body":{"components/DialogComponent.html":{}}}],["event.target).id.split('_",{"_index":4236,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["event.target).nodename",{"_index":4259,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["event.target.closest(this",{"_index":3922,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["event.target.value",{"_index":4901,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["event.type",{"_index":2117,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["event.value",{"_index":1530,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["event[k",{"_index":1924,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{}}}],["eventcomponent",{"_index":261,"title":{"components/EventComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventemitter",{"_index":1733,"title":{},"body":{"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TroopEditorComponent.html":{},"interfaces/UrlActivity.html":{}}}],["eventmodule",{"_index":2216,"title":{"modules/EventModule.html":{}},"body":{"modules/EventModule.html":{},"modules.html":{},"overview.html":{}}}],["eventroutingmodule",{"_index":2220,"title":{"modules/EventRoutingModule.html":{}},"body":{"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["events",{"_index":2214,"title":{},"body":{"components/EventComponent.html":{},"components/SaveButtonComponent.html":{},"components/VenueEditorComponent.html":{}}}],["eventservice",{"_index":4843,"title":{},"body":{"components/TeamsComponent.html":{}}}],["everything",{"_index":1015,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["everywhere",{"_index":5369,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["evt",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["evt.key",{"_index":1149,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/FullscreenComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["evt.preventdefault",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["evt.stoppropagation",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["exact",{"_index":4610,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["exactly",{"_index":3974,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["exceeded",{"_index":4149,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["exception",{"_index":880,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["exec.value",{"_index":4125,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["execute",{"_index":930,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/HttpCacheInterceptor.html":{}}}],["executed",{"_index":898,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/HttpCacheInterceptor.html":{}}}],["executing",{"_index":2653,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["executions",{"_index":3254,"title":{},"body":{"components/MediaComponent.html":{}}}],["executiontime",{"_index":121,"title":{},"body":{"components/AdvancedComponent.html":{},"injectables/ScheduleService.html":{},"components/TeamsComponent.html":{}}}],["executiontime.value",{"_index":132,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["exist",{"_index":1044,"title":{},"body":{"injectables/BrowserService.html":{},"components/SaveButtonComponent.html":{}}}],["existing",{"_index":1095,"title":{},"body":{"guards/CanActivateRegistration.html":{},"components/MemberEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{}}}],["exists",{"_index":2594,"title":{},"body":{"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/TotalByScoreGroup.html":{},"interfaces/TournamentType.html":{}}}],["expanded",{"_index":2254,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["expansionrow",{"_index":2249,"title":{"interfaces/ExpansionRow.html":{}},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"coverage.html":{}}}],["expansionsource",{"_index":2259,"title":{"classes/ExpansionSource.html":{}},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"coverage.html":{}}}],["expiration",{"_index":925,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/UserService.html":{}}}],["expire",{"_index":2810,"title":{},"body":{"interfaces/IUser.html":{}}}],["explain",{"_index":4629,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["explisitly",{"_index":3294,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["export",{"_index":98,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AdvancedModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{}}}],["exportas",{"_index":4894,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["exported",{"_index":700,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["exports",{"_index":355,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{},"overview.html":{}}}],["express",{"_index":5138,"title":{},"body":{"interceptors/UniversalInterceptor.html":{},"dependencies.html":{}}}],["extends",{"_index":712,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"interfaces/IGymnast.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"components/MacroDialogComponent.html":{},"injectables/MyHammerConfig.html":{},"classes/SubjectSource.html":{},"directives/ToCaseDirective.html":{}}}],["extra",{"_index":5617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":4281,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["fa",{"_index":539,"title":{},"body":{"components/AppComponent.html":{},"components/HelpBlockComponent.html":{}}}],["factories",{"_index":702,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["fade",{"_index":3400,"title":{},"body":{"injectables/MediaService.html":{}}}],["failed",{"_index":2631,"title":{},"body":{"interfaces/HttpAction.html":{},"injectables/HttpStateService.html":{}}}],["fallback",{"_index":3308,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["false",{"_index":77,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"guards/CanActivateRegistration.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"modules/GraphQLModule.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/RegisterComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TroopsComponent.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":2942,"title":{},"body":{"components/InfoComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["fb",{"_index":43,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/LoginComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["features",{"_index":522,"title":{},"body":{"components/AppComponent.html":{}}}],["feedback",{"_index":626,"title":{},"body":{"components/AppComponent.html":{}}}],["female",{"_index":3529,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":5619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetchpolicy",{"_index":1342,"title":{},"body":{"components/ClubLookupComponent.html":{},"modules/GraphQLModule.html":{}}}],["ff",{"_index":3739,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["ffc9c9",{"_index":4617,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["ffff9c",{"_index":4614,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["field",{"_index":219,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["fields",{"_index":4258,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["fieldset",{"_index":3533,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AdvancedModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"coverage.html":{}}}],["file.name",{"_index":3419,"title":{},"body":{"injectables/MediaService.html":{}}}],["fileadded",{"_index":3282,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["fileadded($event",{"_index":3317,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["filelist",{"_index":3352,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["filelist.length",{"_index":3354,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["filename",{"_index":2754,"title":{},"body":{"interfaces/IMedia.html":{},"injectables/MediaService.html":{}}}],["fill",{"_index":4294,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["filter",{"_index":623,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(g",{"_index":4567,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["filter(j",{"_index":4392,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["filter(p",{"_index":3872,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["filter(s",{"_index":4214,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{}}}],["filterbydivisionanddiscipline",{"_index":4671,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["filterbydivisionanddiscipline(division",{"_index":4682,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["filtered",{"_index":4685,"title":{},"body":{"components/SignoffReportComponent.html":{},"components/VenueEditorComponent.html":{}}}],["filteredjudgelist",{"_index":4341,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["filteredmembers",{"_index":3549,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["filterfn",{"_index":3550,"title":{},"body":{"components/MemberSelectorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["final",{"_index":4277,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["finally",{"_index":2471,"title":{},"body":{"injectables/GraphService.html":{},"index.html":{}}}],["find",{"_index":3266,"title":{},"body":{"components/MediaComponent.html":{}}}],["findindexof",{"_index":2295,"title":{},"body":{"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["findindexof(element",{"_index":2287,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["findmissingdefaults",{"_index":1819,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["fired",{"_index":1324,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["first",{"_index":2566,"title":{},"body":{"components/HomeComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/ScoreEditorComponent.html":{},"interfaces/TournamentType.html":{}}}],["fix",{"_index":3193,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["fixed",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"components/DialogComponent.html":{},"components/FullscreenComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["fixedval",{"_index":4248,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["flag",{"_index":628,"title":{},"body":{"components/AppComponent.html":{},"components/MediaControlComponent.html":{},"dependencies.html":{}}}],["flaws",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["flex",{"_index":558,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["float",{"_index":599,"title":{},"body":{"components/AppComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["floor",{"_index":167,"title":{},"body":{"components/AdvancedComponent.html":{},"components/MacroDialogComponent.html":{}}}],["fn",{"_index":1294,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{},"components/MemberSelectorComponent.html":{},"classes/SubjectSource.html":{}}}],["fn.call(host",{"_index":4799,"title":{},"body":{"classes/SubjectSource.html":{}}}],["focus",{"_index":3734,"title":{},"body":{"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["following",{"_index":5580,"title":{},"body":{"index.html":{}}}],["font",{"_index":196,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ContextMenuComponent.html":{},"components/DisplayComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/InfoComponent.html":{},"components/MacroDialogComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/TournamentComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["footer",{"_index":618,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ErrorDialogComponent.html":{},"components/LoginComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["force",{"_index":1947,"title":{},"body":{"components/DisplayComponent.html":{},"components/FullscreenComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"components/MediaComponent.html":{}}}],["forgot",{"_index":3132,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":218,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionLookupComponent.html":{},"components/LoginComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TeamsComponent.html":{},"components/UserEditorComponent.html":{}}}],["form.isdirty",{"_index":4289,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["form>footer>div.warning",{"_index":4330,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["formarray",{"_index":4370,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["formatted_address",{"_index":5339,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["formbuilder",{"_index":44,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/LoginComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["formcontrol",{"_index":1186,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/ResetComponent.html":{}}}],["formdata",{"_index":3417,"title":{},"body":{"injectables/MediaService.html":{}}}],["formdata.append('clubid",{"_index":3420,"title":{},"body":{"injectables/MediaService.html":{}}}],["formdata.append('disciplineid",{"_index":3422,"title":{},"body":{"injectables/MediaService.html":{}}}],["formdata.append('disciplinename",{"_index":3423,"title":{},"body":{"injectables/MediaService.html":{}}}],["formdata.append('media",{"_index":3418,"title":{},"body":{"injectables/MediaService.html":{}}}],["formdata.append('teamid",{"_index":3421,"title":{},"body":{"injectables/MediaService.html":{}}}],["formgroup",{"_index":73,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/LoginComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["formgroupdirective",{"_index":3936,"title":{},"body":{"components/PasswordComponent.html":{},"components/ResetComponent.html":{}}}],["formsmodule",{"_index":1365,"title":{},"body":{"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/EventModule.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{}}}],["formval",{"_index":3951,"title":{},"body":{"components/PasswordComponent.html":{},"components/ScoreGroupEditorComponent.html":{}}}],["formval.id",{"_index":4403,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["formval.judges.map((judge",{"_index":4400,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["formval.max",{"_index":4405,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["formval.min",{"_index":4406,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["formval.name",{"_index":4404,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["formval.oldpassword",{"_index":3954,"title":{},"body":{"components/PasswordComponent.html":{}}}],["formval.operation",{"_index":4408,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["formval.password}\")}`).subscribe",{"_index":3955,"title":{},"body":{"components/PasswordComponent.html":{}}}],["formval.type",{"_index":4407,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["forward(operation",{"_index":2378,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["forwardref",{"_index":1271,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{},"directives/ToCaseDirective.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":3264,"title":{},"body":{"components/MediaComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{}}}],["foundjudge",{"_index":4431,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["framework",{"_index":647,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"index.html":{}}}],["fri",{"_index":3804,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["fromvenue",{"_index":5358,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["frontend",{"_index":5547,"title":{},"body":{"index.html":{}}}],["full",{"_index":760,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/EventRoutingModule.html":{},"components/ScoreEditorComponent.html":{}}}],["fullscreen",{"_index":1957,"title":{},"body":{"components/DisplayComponent.html":{},"components/FullscreenComponent.html":{}}}],["fullscreen'},{'name",{"_index":264,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["fullscreen.component.html",{"_index":2322,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["fullscreen.component.scss",{"_index":2321,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["fullscreencomponent",{"_index":263,"title":{"components/FullscreenComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["function",{"_index":701,"title":{},"body":{"modules/AppModule.html":{},"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{},"components/FullscreenComponent.html":{},"injectables/MyHammerConfig.html":{},"directives/ToCaseDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":613,"title":{},"body":{"components/AppComponent.html":{}}}],["functions",{"_index":5221,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["future",{"_index":2534,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TournamentType.html":{}}}],["future').tournaments",{"_index":2581,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["future.tournaments",{"_index":2575,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["future.tournaments.length",{"_index":2576,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["g",{"_index":3596,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["g.gender",{"_index":5091,"title":{},"body":{"components/TroopsComponent.html":{}}}],["g.group.type",{"_index":4749,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["g.id",{"_index":3624,"title":{},"body":{"components/MemberSelectorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{}}}],["g.operation",{"_index":4568,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["g.scoregroup.type",{"_index":4238,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["g.type",{"_index":4583,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["gain",{"_index":3995,"title":{},"body":{"components/RegisterComponent.html":{}}}],["gap",{"_index":4606,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["gender",{"_index":1998,"title":{},"body":{"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"interfaces/IGymnast.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/TroopsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gender.female",{"_index":5094,"title":{},"body":{"components/TroopsComponent.html":{}}}],["gender.male",{"_index":3502,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["genderctrl",{"_index":3480,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["genderctrl.setvalue(lastmember",{"_index":3500,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["genderdivision",{"_index":5009,"title":{},"body":{"components/TroopsComponent.html":{}}}],["genderdivision(team",{"_index":5023,"title":{},"body":{"components/TroopsComponent.html":{}}}],["genderdivisions",{"_index":2059,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["gendergroup",{"_index":5047,"title":{},"body":{"components/TroopsComponent.html":{}}}],["genders",{"_index":3551,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["generate",{"_index":5116,"title":{},"body":{"components/TroopsComponent.html":{}}}],["generateteams",{"_index":5010,"title":{},"body":{"components/TroopsComponent.html":{}}}],["generator",{"_index":3969,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["generic",{"_index":2167,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["genericclickhandler(event",{"_index":1760,"title":{},"body":{"components/DialogComponent.html":{}}}],["geo",{"_index":5374,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["geoapikey",{"_index":5620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geometry",{"_index":5341,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["get(query",{"_index":2423,"title":{},"body":{"injectables/GraphService.html":{}}}],["get(url",{"_index":2668,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["getadds",{"_index":4367,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["getall",{"_index":1966,"title":{},"body":{"injectables/DisplayService.html":{}}}],["getall(tournamentid",{"_index":1971,"title":{},"body":{"injectables/DisplayService.html":{}}}],["getaudio",{"_index":3408,"title":{},"body":{"injectables/MediaService.html":{}}}],["getavailableslots",{"_index":4837,"title":{},"body":{"components/TeamsComponent.html":{}}}],["getavg",{"_index":4165,"title":{},"body":{"classes/ScoreContainer.html":{}}}],["getbydiscipline",{"_index":4672,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["getbydiscipline(name",{"_index":4684,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["getbydivision",{"_index":4673,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["getbydivision(name",{"_index":4687,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["getbyname",{"_index":1449,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["getbyname('scheduleexecutiontime",{"_index":4853,"title":{},"body":{"components/TeamsComponent.html":{}}}],["getbyname(name",{"_index":1455,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["getcachekey(participant",{"_index":3832,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["getcalendarlink",{"_index":2528,"title":{},"body":{"components/HomeComponent.html":{}}}],["getcalendarlink(tournament",{"_index":2539,"title":{},"body":{"components/HomeComponent.html":{}}}],["getcanadddefaults",{"_index":1863,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["getcanupload",{"_index":3335,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["getclub",{"_index":3587,"title":{},"body":{"components/MemberSelectorComponent.html":{},"components/RegisterComponent.html":{},"components/TroopsComponent.html":{}}}],["getclubname",{"_index":1195,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["getcontainer",{"_index":1652,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["getcurrentlang",{"_index":438,"title":{},"body":{"components/AppComponent.html":{}}}],["getcurrentsort",{"_index":4780,"title":{},"body":{"classes/SubjectSource.html":{}}}],["getcurrentuser",{"_index":1656,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/TroopEditorComponent.html":{},"injectables/UserService.html":{}}}],["getdata",{"_index":2412,"title":{},"body":{"injectables/GraphService.html":{},"components/TeamsComponent.html":{}}}],["getdata(querystr",{"_index":2426,"title":{},"body":{"injectables/GraphService.html":{}}}],["getdatespan",{"_index":2529,"title":{},"body":{"components/HomeComponent.html":{},"components/SignoffReportComponent.html":{}}}],["getdatespan(tournament",{"_index":2541,"title":{},"body":{"components/HomeComponent.html":{}}}],["getdefaultvaluekeys",{"_index":87,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["getdefaultvalues",{"_index":85,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["getdescription",{"_index":2530,"title":{},"body":{"components/HomeComponent.html":{}}}],["getdescription(tournament",{"_index":2543,"title":{},"body":{"components/HomeComponent.html":{}}}],["getdisciplinenames",{"_index":4704,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["getdisciplines(tournamentid:${this.parent.tournamentid}){id,name,scoregroups{id,type,judgecount,operation,judges{sortnumber,judge{id,name",{"_index":4712,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["getdisciplines(tournamentid:${this.parent.tournamentid}){id,name,sortorder}}`).subscribe",{"_index":3811,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["getdisciplines(tournamentid:${this.tournamentid}){id,scoregroups{id,name,type,operation,judges{sortnumber,judge{id,name",{"_index":4553,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["getdisplay",{"_index":1967,"title":{},"body":{"injectables/DisplayService.html":{}}}],["getdisplay(tournamentid",{"_index":1974,"title":{},"body":{"injectables/DisplayService.html":{}}}],["getdivisionnames",{"_index":4702,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["geterror",{"_index":2181,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["getfilteredgymnasts",{"_index":3554,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["getfuture",{"_index":2564,"title":{},"body":{"components/HomeComponent.html":{}}}],["getgrandtotal",{"_index":4190,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["getgymnasts",{"_index":3590,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["gethasended",{"_index":1664,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["gethasfreeslots",{"_index":4841,"title":{},"body":{"components/TeamsComponent.html":{}}}],["gethasfuture",{"_index":2560,"title":{},"body":{"components/HomeComponent.html":{}}}],["gethashelp",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["gethaspast",{"_index":2562,"title":{},"body":{"components/HomeComponent.html":{}}}],["gethasscores",{"_index":1668,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["gethasstarted",{"_index":1666,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["gethastournaments",{"_index":2558,"title":{},"body":{"components/HomeComponent.html":{}}}],["getisopen",{"_index":1745,"title":{},"body":{"components/DialogComponent.html":{}}}],["getispaused",{"_index":3412,"title":{},"body":{"injectables/MediaService.html":{}}}],["getispublished",{"_index":1662,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["getistraining",{"_index":1660,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["getitem",{"_index":1066,"title":{},"body":{"injectables/BrowserService.html":{},"miscellaneous/variables.html":{}}}],["getjudges",{"_index":4369,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["getlatitude",{"_index":5318,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["getlocationhref",{"_index":436,"title":{},"body":{"components/AppComponent.html":{}}}],["getlongitude",{"_index":5320,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["getmaindefinition",{"_index":2370,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["getmaindefinition(query",{"_index":2398,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["getme",{"_index":5203,"title":{},"body":{"injectables/UserService.html":{}}}],["getme(noreport",{"_index":5210,"title":{},"body":{"injectables/UserService.html":{}}}],["getmedia",{"_index":3332,"title":{},"body":{"components/MediaControlComponent.html":{},"injectables/MediaService.html":{}}}],["getmedia(clubid",{"_index":3391,"title":{},"body":{"injectables/MediaService.html":{}}}],["getorganizer",{"_index":3990,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getoverlay",{"_index":1650,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["getparticipant",{"_index":1654,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["getrealrows",{"_index":2318,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["getredirectto",{"_index":3107,"title":{},"body":{"components/LoginComponent.html":{}}}],["getrolenames",{"_index":5167,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["getrows",{"_index":31,"title":{},"body":{"components/AdvancedComponent.html":{},"classes/SubjectSource.html":{}}}],["getrows(v",{"_index":60,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["getschedule(tournamentid:${this.parent.tournamentid},type:${participationtype.live},scorable:true",{"_index":4713,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["getschedule(tournamentid:${this.tournamentid},type:${participationtype.live},scorable:true",{"_index":4554,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["getscoregroupfromform",{"_index":4348,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["getscoregroups(disciplineid:${this.discipline.id})${this.scoregroupquery}}`).subscribe(res",{"_index":4510,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["getscoregroups(disciplineid:${this.participant.disciplineid}){id,name,type,operation,judgecount,max,min",{"_index":4201,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["getscores(participantid:${this.participant.id})${this.scorequery",{"_index":4202,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["getselected",{"_index":4485,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["getselection",{"_index":2857,"title":{},"body":{"components/InfoComponent.html":{}}}],["getsubtracts",{"_index":4368,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["gettakenslots",{"_index":4839,"title":{},"body":{"components/TeamsComponent.html":{}}}],["getteamcount",{"_index":5055,"title":{},"body":{"components/TroopsComponent.html":{}}}],["getteams",{"_index":5053,"title":{},"body":{"components/TroopsComponent.html":{}}}],["getteams(tournamentid:${this.parent.tournamentid",{"_index":4856,"title":{},"body":{"components/TeamsComponent.html":{}}}],["getticks",{"_index":3699,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["getting",{"_index":5529,"title":{"index.html":{}},"body":{}}],["gettitle",{"_index":3283,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["gettoggletitle",{"_index":3593,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["gettooltip",{"_index":3689,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["gettotal",{"_index":4163,"title":{},"body":{"classes/ScoreContainer.html":{}}}],["gettournament",{"_index":1658,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["gettournamentday",{"_index":4109,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["gettournamentday(tournament",{"_index":4111,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["gettournaments",{"_index":2551,"title":{},"body":{"components/HomeComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{}}}],["gettournaments{id,name,schedulecount",{"_index":1513,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["gettranslator",{"_index":902,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["gettroopsuggestion",{"_index":4962,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["gettypes",{"_index":2556,"title":{},"body":{"components/HomeComponent.html":{}}}],["getvalue",{"_index":1309,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/MultirangeComponent.html":{}}}],["getvaluehigh",{"_index":3695,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["getvaluelow",{"_index":3691,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["getvenuename",{"_index":5317,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["getwhatsplaying",{"_index":3410,"title":{},"body":{"injectables/MediaService.html":{}}}],["github",{"_index":5566,"title":{},"body":{"index.html":{}}}],["give",{"_index":862,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["given",{"_index":2120,"title":{},"body":{"components/DivisionsComponent.html":{},"injectables/HttpCacheService.html":{},"components/MediaControlComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/TroopsComponent.html":{}}}],["global",{"_index":1509,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"interceptors/HttpCacheInterceptor.html":{}}}],["go",{"_index":1007,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/DisciplineEditorComponent.html":{},"components/DisplayComponent.html":{},"components/FullscreenComponent.html":{},"components/HomeComponent.html":{},"components/MemberSelectorComponent.html":{}}}],["goal",{"_index":5539,"title":{},"body":{"index.html":{}}}],["goback",{"_index":1167,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["gql",{"_index":986,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/GraphService.html":{}}}],["gql`${query",{"_index":2459,"title":{},"body":{"injectables/GraphService.html":{}}}],["gql`${querystr",{"_index":2465,"title":{},"body":{"injectables/GraphService.html":{}}}],["gradient(ellipse",{"_index":604,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["gradient(to",{"_index":596,"title":{},"body":{"components/AppComponent.html":{},"components/MultirangeComponent.html":{}}}],["grandtotal",{"_index":4173,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["graph",{"_index":840,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules.html":{}}}],["graph.service",{"_index":3413,"title":{},"body":{"injectables/MediaService.html":{}}}],["graphql",{"_index":827,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"dependencies.html":{}}}],["graphql.module",{"_index":696,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["graphqlmodule",{"_index":641,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"injectables/MyHammerConfig.html":{},"modules.html":{},"overview.html":{}}}],["graphqlsuburi",{"_index":5400,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphqluri",{"_index":2373,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/HttpStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphservice",{"_index":1108,"title":{"injectables/GraphService.html":{}},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{}}}],["grayscale(100",{"_index":624,"title":{},"body":{"components/AppComponent.html":{}}}],["green",{"_index":512,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["grid",{"_index":4602,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["group",{"_index":310,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/IScoreContainer.html":{},"interfaces/ITeamInDiscipline.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{}}}],["group.avg",{"_index":4274,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["group.discipline",{"_index":4513,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["group.disciplineid",{"_index":1914,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["group.id",{"_index":4211,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["group.scoregroup.name",{"_index":4272,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["group.scoregroup.type}}{{score.judgeindex",{"_index":4273,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["group.scores.find(s",{"_index":4240,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["group.total",{"_index":4243,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["group.tournamentid",{"_index":1906,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{}}}],["grouped",{"_index":4215,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["groupedscores",{"_index":4168,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["groupname",{"_index":4691,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["groupname).total",{"_index":4750,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["groupname.charat(0",{"_index":4744,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["groupname.match(/\\d+/g",{"_index":4751,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["groups",{"_index":1908,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["guard",{"_index":1077,"title":{"guards/CanActivateRegistration.html":{},"guards/RoleGuard.html":{}},"body":{"modules/ConfigureRoutingModule.html":{},"modules/EventRoutingModule.html":{},"coverage.html":{}}}],["guard.ts",{"_index":4041,"title":{},"body":{"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["guard.ts:12",{"_index":4046,"title":{},"body":{"guards/RoleGuard.html":{}}}],["guard.ts:16",{"_index":4047,"title":{},"body":{"guards/RoleGuard.html":{}}}],["guardian",{"_index":3530,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["guardian1",{"_index":2730,"title":{},"body":{"interfaces/IGymnast.html":{},"components/MemberEditorComponent.html":{}}}],["guardian1email",{"_index":2731,"title":{},"body":{"interfaces/IGymnast.html":{},"components/MemberEditorComponent.html":{}}}],["guardian1phone",{"_index":2732,"title":{},"body":{"interfaces/IGymnast.html":{},"components/MemberEditorComponent.html":{}}}],["guardian2",{"_index":2733,"title":{},"body":{"interfaces/IGymnast.html":{},"components/MemberEditorComponent.html":{}}}],["guardian2email",{"_index":2734,"title":{},"body":{"interfaces/IGymnast.html":{},"components/MemberEditorComponent.html":{}}}],["guardian2phone",{"_index":2735,"title":{},"body":{"interfaces/IGymnast.html":{},"components/MemberEditorComponent.html":{}}}],["guards",{"_index":1078,"title":{},"body":{"guards/CanActivateRegistration.html":{},"modules/ConfigureRoutingModule.html":{},"guards/RoleGuard.html":{},"overview.html":{}}}],["gymnast",{"_index":3534,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["gymnastic",{"_index":2589,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["gymnasts",{"_index":2713,"title":{},"body":{"interfaces/IClub.html":{},"interfaces/ITroop.html":{},"components/MemberSelectorComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["gymnasts(v",{"_index":3600,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["gymnasts.length",{"_index":3638,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["gymnastschange",{"_index":3560,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["gymsystems",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LogoutComponent.html":{},"injectables/MyHammerConfig.html":{}}}],["gymsystems${str.length",{"_index":4058,"title":{},"body":{"injectables/SEOService.html":{}}}],["gymsystems.org",{"_index":740,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["gymsystems/client",{"_index":5530,"title":{},"body":{"index.html":{}}}],["h",{"_index":2938,"title":{},"body":{"components/InfoComponent.html":{}}}],["h1",{"_index":2625,"title":{},"body":{"components/HomeComponent.html":{},"components/ScorecardsComponent.html":{}}}],["h2",{"_index":2944,"title":{},"body":{"components/InfoComponent.html":{},"components/MediaComponent.html":{},"components/ScorecardsComponent.html":{}}}],["h3",{"_index":3144,"title":{},"body":{"components/LoginComponent.html":{},"components/MemberSelectorComponent.html":{}}}],["hammer",{"_index":749,"title":{},"body":{"modules/AppModule.html":{},"components/ClubLookupComponent.html":{},"injectables/MyHammerConfig.html":{},"components/VenueEditorComponent.html":{}}}],["hammer(element",{"_index":716,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["hammer_gesture_config",{"_index":651,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["hammergestureconfig",{"_index":650,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["hammerjs",{"_index":5489,"title":{},"body":{"dependencies.html":{}}}],["hand",{"_index":2612,"title":{},"body":{"components/HomeComponent.html":{}}}],["handleerror",{"_index":795,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["handleerror(req",{"_index":874,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["handler",{"_index":861,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ErrorHandlerService.html":{}}}],["handler.service",{"_index":911,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"guards/CanActivateRegistration.html":{},"components/LoginComponent.html":{},"interfaces/ParticipantCache.html":{},"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{}}}],["handler.service.ts",{"_index":2166,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:10",{"_index":2180,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:12",{"_index":2179,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:13",{"_index":2174,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:17",{"_index":2178,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:35",{"_index":2175,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["happen",{"_index":3829,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["hasbackdrop",{"_index":3908,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["hasended",{"_index":1627,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["hasfreeslots",{"_index":4813,"title":{},"body":{"components/TeamsComponent.html":{}}}],["hasfuture",{"_index":2532,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["hashelp",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["hasmedia",{"_index":3284,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["hasn't",{"_index":3861,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["haspast",{"_index":2533,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["hasscores",{"_index":1629,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["hasstarted",{"_index":1628,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/TeamsComponent.html":{}}}],["hastournaments",{"_index":2531,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["hastraining",{"_index":3786,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["having",{"_index":2246,"title":{},"body":{"modules/EventRoutingModule.html":{}}}],["head",{"_index":2698,"title":{},"body":{"injectables/HttpStateService.html":{},"components/InfoComponent.html":{},"miscellaneous/enumerations.html":{}}}],["header",{"_index":193,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubEditorComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionsComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreEditorComponent.html":{},"injectables/UserService.html":{}}}],["header>div",{"_index":4621,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["header>h3",{"_index":4329,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["headerlink.concat(stdlink",{"_index":2400,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["headers",{"_index":2375,"title":{},"body":{"modules/GraphQLModule.html":{},"components/InfoComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{}}}],["headers.length",{"_index":2929,"title":{},"body":{"components/InfoComponent.html":{}}}],["height",{"_index":179,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DisplayComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/TroopsComponent.html":{},"components/VenueEditorComponent.html":{}}}],["help",{"_index":266,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["helpblockcomponent",{"_index":265,"title":{"components/HelpBlockComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["helpblocks",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["helpblocks.length",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["helpborder",{"_index":2513,"title":{},"body":{"components/HelpBlockComponent.html":{}}}],["helpcolor",{"_index":2512,"title":{},"body":{"components/HelpBlockComponent.html":{}}}],["here",{"_index":5384,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["hgroup",{"_index":2215,"title":{},"body":{"components/EventComponent.html":{}}}],["hidden",{"_index":2617,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["hide",{"_index":868,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"directives/IfAuthDirective.html":{}}}],["hierarchical",{"_index":3257,"title":{},"body":{"components/MediaComponent.html":{}}}],["high",{"_index":3719,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["high/low",{"_index":3723,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["highref",{"_index":3661,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["home",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["home'},{'name",{"_index":269,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["home.component.html",{"_index":2526,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["home.component.scss",{"_index":2525,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["homecomponent",{"_index":268,"title":{"components/HomeComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":1356,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionLookupComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{}}}],["hostlistener",{"_index":1121,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FullscreenComponent.html":{},"components/InfoComponent.html":{},"components/MemberEditorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["hostlistener('click",{"_index":1759,"title":{},"body":{"components/DialogComponent.html":{}}}],["hostlistener('input",{"_index":4899,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["hostlistener('keydown",{"_index":2932,"title":{},"body":{"components/InfoComponent.html":{}}}],["hostlistener('keyup",{"_index":1147,"title":{},"body":{"components/ClubComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["hostlistener('window:click",{"_index":3920,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["hostlistener('window:keydown",{"_index":2349,"title":{},"body":{"components/FullscreenComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["hostlistener('window:keyup",{"_index":1244,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/TournamentComponent.html":{}}}],["hostlisteners",{"_index":1105,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FullscreenComponent.html":{},"components/InfoComponent.html":{},"components/MacroDialogComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["hours",{"_index":4844,"title":{},"body":{"components/TeamsComponent.html":{}}}],["hover",{"_index":554,"title":{},"body":{"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/HelpBlockComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["html",{"_index":222,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"dependencies.html":{}}}],["htmlelement",{"_index":714,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["htmllinkelement",{"_index":4071,"title":{},"body":{"injectables/SEOService.html":{}}}],["http",{"_index":47,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubLookupComponent.html":{},"injectables/ConfigurationService.html":{},"injectables/DisplayService.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"interfaces/HttpAction.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpStateService.html":{},"injectables/LoadIndicatorService.html":{},"injectables/MediaService.html":{},"components/SaveButtonComponent.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{},"components/VenueEditorComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["http_interceptors",{"_index":656,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/MyHammerConfig.html":{}}}],["httpaction",{"_index":2628,"title":{"interfaces/HttpAction.html":{}},"body":{"interfaces/HttpAction.html":{},"injectables/HttpStateService.html":{},"components/SaveButtonComponent.html":{},"coverage.html":{}}}],["httpbatchlink",{"_index":2366,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httpbatchlinkmodule",{"_index":2365,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httpcacheinterceptor",{"_index":643,"title":{"interceptors/HttpCacheInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/MyHammerConfig.html":{},"coverage.html":{},"overview.html":{}}}],["httpcacheservice",{"_index":1969,"title":{"injectables/HttpCacheService.html":{}},"body":{"injectables/DisplayService.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"coverage.html":{}}}],["httpclient",{"_index":48,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ConfigurationService.html":{},"injectables/DisplayService.html":{},"injectables/GraphService.html":{},"injectables/MediaService.html":{},"injectables/MyHammerConfig.html":{},"injectables/UserService.html":{},"components/VenueEditorComponent.html":{}}}],["httpclientmodule",{"_index":655,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["httpevent",{"_index":904,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/HttpCacheInterceptor.html":{}}}],["httphandler",{"_index":887,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/HttpCacheInterceptor.html":{},"interceptors/UniversalInterceptor.html":{}}}],["httpinterceptor",{"_index":889,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/HttpCacheInterceptor.html":{},"interceptors/UniversalInterceptor.html":{}}}],["httplink",{"_index":2359,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["httplinkmodule",{"_index":2358,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httploaderfactory",{"_index":727,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":703,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{},"miscellaneous/functions.html":{}}}],["httpmethod",{"_index":2633,"title":{},"body":{"interfaces/HttpAction.html":{},"injectables/HttpStateService.html":{},"components/SaveButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["httpmethod.delete",{"_index":2697,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["httpmethod.get",{"_index":2693,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["httpmethod.head",{"_index":2699,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["httpmethod.options",{"_index":2701,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["httpmethod.patch",{"_index":2700,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["httpmethod.post",{"_index":2695,"title":{},"body":{"injectables/HttpStateService.html":{},"components/SaveButtonComponent.html":{}}}],["httpmethod.put",{"_index":2696,"title":{},"body":{"injectables/HttpStateService.html":{},"components/SaveButtonComponent.html":{}}}],["httprequest",{"_index":812,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpStateService.html":{},"interceptors/UniversalInterceptor.html":{}}}],["httpresponse",{"_index":813,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/GraphService.html":{},"injectables/HttpStateService.html":{},"injectables/UserService.html":{}}}],["https://github.com/apollographql/react",{"_index":941,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://github.com/leaverou/multirange",{"_index":3655,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["https://xkpasswd.net/s",{"_index":3970,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["httpstateservice",{"_index":806,"title":{"injectables/HttpStateService.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"injectables/HttpStateService.html":{},"components/SaveButtonComponent.html":{},"coverage.html":{}}}],["human",{"_index":882,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["i.judge.id",{"_index":4395,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["i18n",{"_index":705,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["i['id",{"_index":2489,"title":{},"body":{"injectables/GraphService.html":{}}}],["ibelongstoclub",{"_index":2709,"title":{"interfaces/IBelongsToClub.html":{}},"body":{"interfaces/IBelongsToClub.html":{},"interfaces/IGymnast.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"coverage.html":{}}}],["iclub",{"_index":1122,"title":{"interfaces/IClub.html":{}},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IGymnast.html":{},"interfaces/ITroop.html":{},"components/MediaComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"coverage.html":{}}}],["icon",{"_index":629,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ContextMenuComponent.html":{},"components/DivisionLookupComponent.html":{},"components/EventComponent.html":{},"components/MemberSelectorComponent.html":{},"dependencies.html":{}}}],["iconfiguration",{"_index":75,"title":{"interfaces/IConfiguration.html":{}},"body":{"components/AdvancedComponent.html":{},"injectables/ConfigurationService.html":{},"interfaces/IConfiguration.html":{},"coverage.html":{}}}],["icreatedby",{"_index":2717,"title":{"interfaces/ICreatedBy.html":{}},"body":{"interfaces/ICreatedBy.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/IVenue.html":{},"coverage.html":{}}}],["id",{"_index":1207,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"modules/EventRoutingModule.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"interfaces/IClub.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"classes/Judge.html":{},"components/MemberEditorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/RegisterComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/VenueEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["id,name,birthyear,gender",{"_index":3613,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["id,name,description_en,description_no}`).subscribe(res",{"_index":2896,"title":{},"body":{"components/InfoComponent.html":{}}}],["id,name,email,role,activated,clubid,club{id,name",{"_index":5166,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["id,name,gymnasts{id,name,gender,birthyear}}`).subscribe(result",{"_index":4992,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["id,name}`).subscribe(res",{"_index":1238,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["id,name}`).subscribe(result",{"_index":4437,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["id,participantid,value,judgeindex,scoregroupid,scoregroup{id,name,type",{"_index":4188,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["identification",{"_index":849,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["identifier",{"_index":3296,"title":{},"body":{"components/MediaControlComponent.html":{},"components/ScoreEditorComponent.html":{},"coverage.html":{}}}],["identifier[1",{"_index":4239,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["identifier[2",{"_index":4242,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["identify",{"_index":463,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["identifying",{"_index":835,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["idiscipline",{"_index":1777,"title":{"interfaces/IDiscipline.html":{}},"body":{"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"interfaces/IDiscipline.html":{},"interfaces/IMedia.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"components/MediaComponent.html":{},"injectables/MediaService.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"coverage.html":{}}}],["idivision",{"_index":1989,"title":{"interfaces/IDivision.html":{}},"body":{"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"interfaces/IDivision.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TroopsComponent.html":{},"coverage.html":{}}}],["idx",{"_index":1886,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/ScoreSystemComponent.html":{}}}],["id}').subscribe",{"_index":1917,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/RegisterComponent.html":{}}}],["id}').subscribe(message",{"_index":1951,"title":{},"body":{"components/DisplayComponent.html":{}}}],["id}').subscribe(res",{"_index":2339,"title":{},"body":{"components/FullscreenComponent.html":{},"components/TeamsComponent.html":{}}}],["id}`).subscribe(res",{"_index":1907,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["id}`).subscribe(result",{"_index":1798,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["ifauthdirective",{"_index":340,"title":{"directives/IfAuthDirective.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ignore",{"_index":2407,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["igymnast",{"_index":2714,"title":{"interfaces/IGymnast.html":{}},"body":{"interfaces/IClub.html":{},"interfaces/IGymnast.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/TroopsComponent.html":{},"coverage.html":{}}}],["ijudge",{"_index":2723,"title":{"interfaces/IJudge.html":{}},"body":{"interfaces/IDiscipline.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IScoreGroup.html":{},"classes/Judge.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScorecardsComponent.html":{},"coverage.html":{}}}],["ijudgeinscoregroup",{"_index":2722,"title":{"interfaces/IJudgeInScoreGroup.html":{}},"body":{"interfaces/IDiscipline.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IScoreGroup.html":{},"classes/Judge.html":{},"coverage.html":{}}}],["image",{"_index":594,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["imedia",{"_index":2750,"title":{"interfaces/IMedia.html":{}},"body":{"interfaces/IMedia.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"interfaces/ParticipantCache.html":{},"coverage.html":{}}}],["img",{"_index":622,"title":{},"body":{"components/AppComponent.html":{}}}],["immediatelly",{"_index":2467,"title":{},"body":{"injectables/GraphService.html":{}}}],["implementation",{"_index":1346,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"interfaces/IJudge.html":{},"interfaces/IScoreContainer.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"components/SaveButtonComponent.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["implmentation",{"_index":890,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["import",{"_index":89,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AdvancedModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{}}}],["import('./views/configure/configure.module').then(m",{"_index":766,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./views/event/event.module').then(m",{"_index":768,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":568,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{}}}],["imports",{"_index":367,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["include",{"_index":1261,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DialogComponent.html":{},"components/LoginComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["increase",{"_index":3114,"title":{},"body":{"components/LoginComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["increment",{"_index":3752,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator.service.ts",{"_index":2955,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{},"coverage.html":{}}}],["indicator.service.ts:102",{"_index":2980,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:14",{"_index":3012,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:15",{"_index":3007,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:16",{"_index":3005,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:17",{"_index":3006,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:19",{"_index":3001,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:20",{"_index":3002,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:21",{"_index":3000,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:24",{"_index":3011,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:25",{"_index":3008,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:26",{"_index":3010,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:27",{"_index":3003,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:28",{"_index":3009,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:34",{"_index":2978,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:56",{"_index":2982,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:70",{"_index":2999,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:81",{"_index":2995,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:82",{"_index":2997,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:83",{"_index":2993,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["indicator.service.ts:90",{"_index":2986,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["infinite",{"_index":3065,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AdvancedModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{}}}],["info'},{'name",{"_index":271,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["info.component.html",{"_index":2854,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.component.scss",{"_index":2853,"title":{},"body":{"components/InfoComponent.html":{}}}],["info/info.component",{"_index":4939,"title":{},"body":{"modules/TournamentModule.html":{}}}],["infocomponent",{"_index":270,"title":{"components/InfoComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["information",{"_index":878,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["infotext",{"_index":2855,"title":{},"body":{"components/InfoComponent.html":{}}}],["inherit",{"_index":627,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ContextMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{}}}],["inherited",{"_index":2303,"title":{},"body":{"classes/ExpansionSource.html":{},"components/MacroDialogComponent.html":{}}}],["init",{"_index":1232,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["initiated",{"_index":5240,"title":{},"body":{"injectables/UserService.html":{}}}],["inject",{"_index":1060,"title":{},"body":{"injectables/BrowserService.html":{},"components/ContextMenuComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/SEOService.html":{},"components/ScoreEditorComponent.html":{},"interceptors/UniversalInterceptor.html":{}}}],["inject(document",{"_index":4057,"title":{},"body":{"injectables/SEOService.html":{},"components/ScoreEditorComponent.html":{}}}],["inject(mat_dialog_data",{"_index":1646,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ErrorDialogComponent.html":{}}}],["inject(request",{"_index":5142,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["injectable",{"_index":654,"title":{"injectables/BrowserService.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"injectables/DisplayService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GraphService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"injectables/LoadIndicatorService.html":{},"injectables/MediaService.html":{},"injectables/MemberStateService.html":{},"injectables/MyHammerConfig.html":{},"injectables/SEOService.html":{},"injectables/ScheduleService.html":{},"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"injectables/DisplayService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GraphService.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"injectables/LoadIndicatorService.html":{},"injectables/MediaService.html":{},"injectables/MemberStateService.html":{},"injectables/MyHammerConfig.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"injectables/ScheduleService.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":1032,"title":{},"body":{"injectables/BrowserService.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"injectables/DisplayService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GraphService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"injectables/LoadIndicatorService.html":{},"injectables/MediaService.html":{},"injectables/MemberStateService.html":{},"injectables/MyHammerConfig.html":{},"injectables/SEOService.html":{},"injectables/ScheduleService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injected",{"_index":917,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["injector",{"_index":807,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["inline",{"_index":212,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/DivisionLookupComponent.html":{},"components/HelpBlockComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["inmemory",{"_index":2369,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["inmemorycache",{"_index":2368,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["input",{"_index":1313,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"directives/IfAuthDirective.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"directives/ToCaseDirective.html":{},"components/TroopEditorComponent.html":{}}}],["input($event",{"_index":4884,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["input:${this.jsontogql(data",{"_index":2455,"title":{},"body":{"injectables/GraphService.html":{}}}],["input[apptocase",{"_index":343,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["input[type=\"file",{"_index":3270,"title":{},"body":{"components/MediaComponent.html":{},"components/MediaControlComponent.html":{}}}],["input[type=\"range",{"_index":3733,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["inputheight",{"_index":3732,"title":{},"body":{"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["inputs",{"_index":1285,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"directives/IfAuthDirective.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"directives/ToCaseDirective.html":{},"components/TroopEditorComponent.html":{}}}],["insert",{"_index":3163,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["insert(macro",{"_index":3170,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["inset",{"_index":589,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["inside",{"_index":871,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MacroDialogComponent.html":{}}}],["install",{"_index":5540,"title":{},"body":{"index.html":{}}}],["instance",{"_index":5562,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":2493,"title":{},"body":{"injectables/GraphService.html":{}}}],["instantion",{"_index":750,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["instead",{"_index":2652,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["integration",{"_index":5574,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":796,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/HttpCacheInterceptor.html":{},"interceptors/UniversalInterceptor.html":{}}}],["intercept(req",{"_index":885,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/HttpCacheInterceptor.html":{},"interceptors/UniversalInterceptor.html":{}}}],["intercepting",{"_index":2635,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["interceptor",{"_index":745,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/HttpCacheInterceptor.html":{},"interceptors/UniversalInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{},"coverage.html":{}}}],["interceptors",{"_index":789,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/HttpCacheInterceptor.html":{},"interceptors/UniversalInterceptor.html":{}}}],["interface",{"_index":2248,"title":{"interfaces/ExpansionRow.html":{},"interfaces/HttpAction.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"interfaces/ParticipantCache.html":{},"interfaces/RoleData.html":{},"interfaces/TotalByScoreGroup.html":{},"interfaces/TournamentType.html":{},"interfaces/UrlActivity.html":{}},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/ParticipantCache.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"classes/ScoreContainer.html":{},"interfaces/TotalByScoreGroup.html":{},"interfaces/TournamentType.html":{},"interfaces/UrlActivity.html":{},"coverage.html":{}}}],["interfaces",{"_index":2250,"title":{},"body":{"interfaces/ExpansionRow.html":{},"interfaces/HttpAction.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"interfaces/ParticipantCache.html":{},"interfaces/RoleData.html":{},"interfaces/TotalByScoreGroup.html":{},"interfaces/TournamentType.html":{},"interfaces/UrlActivity.html":{},"overview.html":{}}}],["interval",{"_index":3439,"title":{},"body":{"injectables/MediaService.html":{}}}],["invalid",{"_index":3945,"title":{},"body":{"components/PasswordComponent.html":{},"components/ResetComponent.html":{}}}],["invalidate",{"_index":2661,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["invalidate(url",{"_index":2670,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["invalidateall",{"_index":2662,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["invalidateall(urlpart",{"_index":2672,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["invalidatecache",{"_index":1968,"title":{},"body":{"injectables/DisplayService.html":{}}}],["invalidatecache(participant",{"_index":3834,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["invalidated",{"_index":2639,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["isadding",{"_index":1162,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DivisionsComponent.html":{}}}],["ischanged",{"_index":2858,"title":{},"body":{"components/InfoComponent.html":{}}}],["iscomplete",{"_index":2632,"title":{},"body":{"interfaces/HttpAction.html":{},"injectables/HttpStateService.html":{}}}],["iscore",{"_index":2759,"title":{"interfaces/IScore.html":{}},"body":{"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/ITeamInDiscipline.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"coverage.html":{}}}],["iscorecontainer",{"_index":2764,"title":{"interfaces/IScoreContainer.html":{}},"body":{"interfaces/IScoreContainer.html":{},"classes/ScoreContainer.html":{},"coverage.html":{}}}],["iscoregroup",{"_index":1857,"title":{"interfaces/IScoreGroup.html":{}},"body":{"components/DisciplinesComponent.html":{},"interfaces/IDiscipline.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeamInDiscipline.html":{},"classes/Judge.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"coverage.html":{}}}],["isdelete",{"_index":955,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["isdeleting",{"_index":2961,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["isdeletingfrom",{"_index":2974,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["isdeletingfrom(url",{"_index":2992,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["isdisabled",{"_index":2037,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["isedit",{"_index":1163,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["iserrorstate(control",{"_index":3946,"title":{},"body":{"components/PasswordComponent.html":{},"components/ResetComponent.html":{}}}],["isexpansiondetailrow",{"_index":2274,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["isgroup",{"_index":4674,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["isgroup(groupname",{"_index":4689,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["islistening",{"_index":4083,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["isloading",{"_index":26,"title":{},"body":{"components/AdvancedComponent.html":{},"components/HomeComponent.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/ParticipantCache.html":{},"components/TeamsComponent.html":{},"interfaces/TournamentType.html":{},"interfaces/UrlActivity.html":{}}}],["isloadingfrom",{"_index":2975,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["isloadingfrom(url",{"_index":2994,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["isloadingmembers",{"_index":3552,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["isnan(this.valuehigh",{"_index":3720,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["isnan(this.valuelow",{"_index":3721,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["isnewday",{"_index":3777,"title":{},"body":{"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{}}}],["isnewday(participant",{"_index":3840,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["isnewday(tournament",{"_index":4114,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["isopen",{"_index":1724,"title":{},"body":{"components/DialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["isopen(value",{"_index":1749,"title":{},"body":{"components/DialogComponent.html":{}}}],["ispaused",{"_index":3389,"title":{},"body":{"injectables/MediaService.html":{}}}],["isplatformbrowser",{"_index":1062,"title":{},"body":{"injectables/BrowserService.html":{}}}],["isplatformbrowser(this.platformid",{"_index":1075,"title":{},"body":{"injectables/BrowserService.html":{}}}],["isplaying",{"_index":2755,"title":{},"body":{"interfaces/IMedia.html":{},"components/MediaControlComponent.html":{}}}],["isprimarymedia",{"_index":3285,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["ispublished",{"_index":1626,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["issave",{"_index":953,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["issaving",{"_index":2962,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"components/SaveButtonComponent.html":{},"interfaces/UrlActivity.html":{}}}],["issavingfrom",{"_index":2976,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["issavingfrom(url",{"_index":2996,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["isselected",{"_index":5011,"title":{},"body":{"components/TroopsComponent.html":{}}}],["isselected(team",{"_index":5026,"title":{},"body":{"components/TroopsComponent.html":{}}}],["issue",{"_index":921,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["istraining",{"_index":1625,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["isvisible(participant",{"_index":3842,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["it's",{"_index":869,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["italic",{"_index":2859,"title":{},"body":{"components/InfoComponent.html":{},"components/MacroDialogComponent.html":{},"components/TournamentComponent.html":{}}}],["iteam",{"_index":2715,"title":{"interfaces/ITeam.html":{}},"body":{"interfaces/IClub.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IMedia.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"components/TeamsComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"coverage.html":{}}}],["iteamindiscipline",{"_index":1403,"title":{"interfaces/ITeamInDiscipline.html":{}},"body":{"injectables/CommonService.html":{},"components/ContextMenuComponent.html":{},"interfaces/IScore.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"coverage.html":{}}}],["item",{"_index":1301,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/MacroDialogComponent.html":{},"components/MemberEditorComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["item.name",{"_index":1345,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["item.startnumber",{"_index":4753,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["item.team.name",{"_index":4754,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["item.total",{"_index":4756,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["items",{"_index":3185,"title":{},"body":{"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{}}}],["itournament",{"_index":1393,"title":{"interfaces/ITournament.html":{}},"body":{"injectables/CommonService.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DisplayComponent.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IMedia.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/IVenue.html":{},"components/InfoComponent.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"coverage.html":{}}}],["itournamenttimes",{"_index":2801,"title":{"interfaces/ITournamentTimes.html":{}},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"coverage.html":{}}}],["itroop",{"_index":2737,"title":{"interfaces/ITroop.html":{}},"body":{"interfaces/IGymnast.html":{},"interfaces/ITeam.html":{},"interfaces/ITroop.html":{},"components/MemberEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"coverage.html":{}}}],["iuser",{"_index":431,"title":{"interfaces/IUser.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ContextMenuComponent.html":{},"interfaces/IClub.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"injectables/MyHammerConfig.html":{},"interfaces/ParticipantCache.html":{},"components/RegisterComponent.html":{},"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["ivenue",{"_index":2802,"title":{"interfaces/IVenue.html":{}},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/IVenue.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{}}}],["j",{"_index":3864,"title":{},"body":{"interfaces/ParticipantCache.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["j.id",{"_index":4396,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["j.name.tolowercase().indexof(newjudge.name.tolowercase",{"_index":4433,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["j.name.tolowercase().indexof(v.tolowercase",{"_index":4393,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["j.scoregroupid",{"_index":4505,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["join",{"_index":4019,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamsComponent.html":{},"components/UserEditorComponent.html":{}}}],["js",{"_index":5479,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":706,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["json.parse(browserservice.sessionstorage().getitem('currentuser",{"_index":709,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["json.parse(config.value",{"_index":4493,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["json.parse(defaults.value",{"_index":2095,"title":{},"body":{"components/DivisionsComponent.html":{},"components/MediaComponent.html":{},"components/TroopsComponent.html":{}}}],["json.parse(error.error",{"_index":1017,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["json.parse(errormessage.message",{"_index":996,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["json.parse(json.stringify(this.defaultscoregroups",{"_index":1911,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["json.parse(json.stringify(this.disciplines",{"_index":3248,"title":{},"body":{"components/MediaComponent.html":{}}}],["json.parse(res.value",{"_index":1517,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["json.parse(values",{"_index":109,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["json.stringify([this.tournament.description_en",{"_index":2893,"title":{},"body":{"components/InfoComponent.html":{}}}],["json.stringify(res",{"_index":4011,"title":{},"body":{"components/RegisterComponent.html":{}}}],["json.stringify(this.currentuser",{"_index":5224,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(user",{"_index":5225,"title":{},"body":{"injectables/UserService.html":{}}}],["jsontogql",{"_index":2413,"title":{},"body":{"injectables/GraphService.html":{}}}],["jsontogql(val",{"_index":2429,"title":{},"body":{"injectables/GraphService.html":{}}}],["judge",{"_index":1891,"title":{"classes/Judge.html":{}},"body":{"components/DisciplinesComponent.html":{},"components/EventComponent.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"classes/Judge.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"coverage.html":{}}}],["judge.club",{"_index":4597,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["judge.discipline",{"_index":4595,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["judge.division",{"_index":4594,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["judge.id",{"_index":4445,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["judge.judge.name",{"_index":4447,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["judge.name",{"_index":1892,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["judge.scoregroup",{"_index":4401,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["judge.startno",{"_index":4596,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["judgearray",{"_index":4383,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["judgecount",{"_index":2775,"title":{},"body":{"interfaces/IScoreGroup.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["judgedisplay",{"_index":4349,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["judgedisplay(judge",{"_index":4359,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["judgeform",{"_index":4342,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["judgeindex",{"_index":2761,"title":{},"body":{"interfaces/IScore.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["judgeingroup.judge.name",{"_index":4736,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["judgeinscoregroup",{"_index":4399,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["judgelist",{"_index":4343,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["judges",{"_index":1820,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"interfaces/IDiscipline.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IScoreGroup.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{}}}],["judges(discipline",{"_index":1843,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["judges(discipline).join",{"_index":1931,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["judges(discipline).length",{"_index":1930,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["judges(scheduleitem",{"_index":4543,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["judges.add(judge.name",{"_index":1893,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["judgesfordivisionanddiscipline",{"_index":4675,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["judgesfordivisionanddiscipline(division",{"_index":4692,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["judgesplain",{"_index":1900,"title":{},"body":{"components/DisciplinesComponent.html":{},"interfaces/IDiscipline.html":{}}}],["judgesplain{id,name",{"_index":1859,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["judges{judgeid",{"_index":4411,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["judges{sortnumber,judge{id,name",{"_index":4482,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["justify",{"_index":2624,"title":{},"body":{"components/HomeComponent.html":{},"components/MultirangeComponent.html":{},"components/ScorecardsComponent.html":{}}}],["jwt",{"_index":662,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/MyHammerConfig.html":{},"dependencies.html":{}}}],["jwthelperservice",{"_index":803,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["jwtmodule",{"_index":660,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["jwtmodule.forroot",{"_index":736,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["k",{"_index":1415,"title":{},"body":{"injectables/CommonService.html":{},"injectables/GraphService.html":{},"components/VenueEditorComponent.html":{}}}],["k.min",{"_index":5088,"title":{},"body":{"components/TroopsComponent.html":{}}}],["keep",{"_index":837,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/GraphService.html":{}}}],["keepopen",{"_index":4956,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["key",{"_index":68,"title":{},"body":{"components/AdvancedComponent.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/ParticipantCache.html":{},"interfaces/UrlActivity.html":{},"miscellaneous/variables.html":{}}}],["key.indexof(urlpart",{"_index":2681,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["keyboardevent",{"_index":1112,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/FullscreenComponent.html":{},"components/InfoComponent.html":{},"components/MacroDialogComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["keydown",{"_index":2864,"title":{},"body":{"components/InfoComponent.html":{}}}],["keydown(event",{"_index":2866,"title":{},"body":{"components/InfoComponent.html":{}}}],["keyframes",{"_index":3074,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["keyup",{"_index":1106,"title":{},"body":{"components/ClubComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/MacroDialogComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["keyup(event",{"_index":1737,"title":{},"body":{"components/DialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["keyup(evt",{"_index":1111,"title":{},"body":{"components/ClubComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["kind",{"_index":2397,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["know",{"_index":4021,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["k}id",{"_index":2500,"title":{},"body":{"injectables/GraphService.html":{}}}],["label",{"_index":215,"title":{},"body":{"components/AdvancedComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MediaControlComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["label.media",{"_index":3267,"title":{},"body":{"components/MediaComponent.html":{}}}],["label=\"delete",{"_index":4286,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["label=\"media",{"_index":1255,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["label=\"members",{"_index":1251,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["label=\"rollback",{"_index":4288,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["label=\"statistics",{"_index":1256,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["label=\"teams",{"_index":1253,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["labelheight",{"_index":4331,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["landscape",{"_index":4600,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["lang",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.match(/no|nb|no",{"_index":504,"title":{},"body":{"components/AppComponent.html":{}}}],["language",{"_index":509,"title":{},"body":{"components/AppComponent.html":{},"components/SaveButtonComponent.html":{}}}],["large",{"_index":630,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["largest",{"_index":3199,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["last",{"_index":743,"title":{},"body":{"modules/AppModule.html":{},"components/MemberEditorComponent.html":{},"injectables/MyHammerConfig.html":{},"interfaces/ParticipantCache.html":{},"components/SignoffReportComponent.html":{},"components/TroopsComponent.html":{}}}],["lastmember",{"_index":3494,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["lastmember.birthyear",{"_index":3498,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["lastmember.gender",{"_index":3501,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["lasttime",{"_index":4133,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["later",{"_index":2609,"title":{},"body":{"components/HomeComponent.html":{}}}],["latitude",{"_index":2827,"title":{},"body":{"interfaces/IVenue.html":{},"components/VenueEditorComponent.html":{}}}],["launch",{"_index":5558,"title":{},"body":{"index.html":{}}}],["lazy",{"_index":763,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["lds",{"_index":3054,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["left",{"_index":566,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DivisionsComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/RegisterComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["legend",{"_index":221,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AdvancedModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"overview.html":{}}}],["len",{"_index":1398,"title":{},"body":{"injectables/CommonService.html":{}}}],["letter",{"_index":4622,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["level",{"_index":1008,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["li",{"_index":576,"title":{},"body":{"components/AppComponent.html":{},"components/MacroDialogComponent.html":{}}}],["liberation",{"_index":4323,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["libs",{"_index":648,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{}}}],["lighten($text",{"_index":184,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/MultirangeComponent.html":{}}}],["limited",{"_index":5610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["line",{"_index":633,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ContextMenuComponent.html":{},"components/DisplayComponent.html":{},"components/EventComponent.html":{},"components/InfoComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["line:deprecation",{"_index":4235,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["line:no",{"_index":4888,"title":{},"body":{"directives/ToCaseDirective.html":{},"miscellaneous/variables.html":{}}}],["linear",{"_index":595,"title":{},"body":{"components/AppComponent.html":{},"components/MultirangeComponent.html":{}}}],["link",{"_index":2360,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/SEOService.html":{},"dependencies.html":{}}}],["link.setattribute('href",{"_index":4076,"title":{},"body":{"injectables/SEOService.html":{}}}],["link.setattribute('rel",{"_index":4074,"title":{},"body":{"injectables/SEOService.html":{}}}],["list",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"components/ClubComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ContextMenuComponent.html":{},"modules/EventRoutingModule.html":{},"components/HomeComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/MacroDialogComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreSystemComponent.html":{},"components/TournamentComponent.html":{},"interfaces/UrlActivity.html":{},"components/UsersComponent.html":{}}}],["list'},{'name",{"_index":273,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["list.component.html",{"_index":3781,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["list.component.scss",{"_index":3782,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["list/context",{"_index":2233,"title":{},"body":{"modules/EventModule.html":{}}}],["list/list.component",{"_index":2225,"title":{},"body":{"modules/EventModule.html":{},"modules/EventRoutingModule.html":{}}}],["list/score",{"_index":2235,"title":{},"body":{"modules/EventModule.html":{}}}],["listcomponent",{"_index":272,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listed",{"_index":2611,"title":{},"body":{"components/HomeComponent.html":{}}}],["listen",{"_index":2414,"title":{},"body":{"injectables/GraphService.html":{},"injectables/LoadIndicatorService.html":{},"components/SaveButtonComponent.html":{},"interfaces/UrlActivity.html":{}}}],["listen(channel",{"_index":2431,"title":{},"body":{"injectables/GraphService.html":{}}}],["literal",{"_index":2675,"title":{},"body":{"injectables/HttpCacheService.html":{},"components/InfoComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/UserService.html":{}}}],["live",{"_index":5524,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lng",{"_index":2856,"title":{},"body":{"components/InfoComponent.html":{}}}],["load",{"_index":2694,"title":{},"body":{"injectables/HttpStateService.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{}}}],["loadavailablemembers",{"_index":3555,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["loadchildren",{"_index":765,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaddata",{"_index":3286,"title":{},"body":{"components/MediaControlComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["loaddisciplines",{"_index":1822,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["loaddisplay",{"_index":2324,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["loaddisplay(force",{"_index":2331,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["loaddivisions",{"_index":2062,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["loaded",{"_index":764,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":667,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/MyHammerConfig.html":{},"dependencies.html":{}}}],["loadindicatorservice",{"_index":2952,"title":{"injectables/LoadIndicatorService.html":{}},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{},"coverage.html":{}}}],["loading",{"_index":3018,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{}}}],["loadobservable",{"_index":2963,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["loadobservers",{"_index":2964,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["loadpreview",{"_index":1488,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["loadschedule",{"_index":3814,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["loadscoregroups",{"_index":4455,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["loadspinnercomponent",{"_index":274,"title":{"components/LoadSpinnerComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadteams",{"_index":4809,"title":{},"body":{"components/TeamsComponent.html":{},"components/TroopsComponent.html":{}}}],["loc",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["locale",{"_index":682,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["locale_id",{"_index":653,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["localeno",{"_index":684,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["localhost",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["localhost:3000/api/graph",{"_index":5622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost:4200",{"_index":5551,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":1046,"title":{},"body":{"injectables/BrowserService.html":{}}}],["location",{"_index":3203,"title":{},"body":{"components/MacroDialogComponent.html":{},"components/TournamentComponent.html":{},"components/VenueEditorComponent.html":{}}}],["location.protocol.replace('http",{"_index":2385,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["locationhref",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["lodash",{"_index":1201,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["lodging",{"_index":2791,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{}}}],["lodingcostperhead",{"_index":2792,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{}}}],["log",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"modules/EventRoutingModule.html":{},"classes/Logger.html":{}}}],["log(...args",{"_index":3087,"title":{},"body":{"classes/Logger.html":{}}}],["logged",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/ParticipantCache.html":{}}}],["logger",{"_index":453,"title":{"classes/Logger.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/DisciplinesComponent.html":{},"injectables/GraphService.html":{},"classes/Logger.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/ScheduleService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["logger.debug('%c",{"_index":507,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["logger.debug(event",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["logger.debug(message",{"_index":981,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["logger.log(ex",{"_index":2470,"title":{},"body":{"injectables/GraphService.html":{}}}],["logger.log(macro.name",{"_index":3218,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["logger.log(media",{"_index":3247,"title":{},"body":{"components/MediaComponent.html":{}}}],["logging",{"_index":3154,"title":{},"body":{"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{},"index.html":{}}}],["logic",{"_index":3183,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["logically",{"_index":1043,"title":{},"body":{"injectables/BrowserService.html":{}}}],["login",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":276,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["login(credentials",{"_index":5212,"title":{},"body":{"injectables/UserService.html":{}}}],["login.component.html",{"_index":3096,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":3095,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":275,"title":{"components/LoginComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":3098,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":621,"title":{},"body":{"components/AppComponent.html":{}}}],["logout",{"_index":762,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LogoutComponent.html":{},"injectables/UserService.html":{}}}],["logout'].some(u",{"_index":956,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["logout'},{'name",{"_index":278,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["logout.component.html",{"_index":3148,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.component.scss",{"_index":3147,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logoutcomponent",{"_index":277,"title":{"components/LogoutComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["longitude",{"_index":2828,"title":{},"body":{"interfaces/IVenue.html":{},"components/VenueEditorComponent.html":{}}}],["look",{"_index":3259,"title":{},"body":{"components/MediaComponent.html":{}}}],["lookup",{"_index":1272,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{},"components/VenueEditorComponent.html":{}}}],["lookup'},{'name",{"_index":238,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["lookup.component",{"_index":1609,"title":{},"body":{"modules/ConfigureSharedModule.html":{},"modules/SharedModule.html":{}}}],["lookup.component.html",{"_index":1274,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["lookup.component.scss",{"_index":1273,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts",{"_index":1267,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{},"coverage.html":{}}}],["lookup.component.ts:17",{"_index":2028,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:18",{"_index":2027,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:19",{"_index":1287,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:20",{"_index":2029,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:22",{"_index":1308,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:23",{"_index":1307,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:24",{"_index":1306,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:26",{"_index":1305,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:27",{"_index":1310,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["lookup.component.ts:28",{"_index":1312,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:29",{"_index":2026,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:33",{"_index":2031,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:35",{"_index":1286,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["lookup.component.ts:40",{"_index":1291,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["lookup.component.ts:45",{"_index":2030,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:49",{"_index":2038,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:56",{"_index":2032,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:59",{"_index":2034,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:60",{"_index":2036,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["lookup.component.ts:62",{"_index":1290,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["lookup.component.ts:66",{"_index":1302,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["lookup.component.ts:71",{"_index":1304,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["lookup.component.ts:77",{"_index":1293,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["lookup.component.ts:81",{"_index":1295,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["lookup.component.ts:82",{"_index":1289,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["lookup.component.ts:86",{"_index":1298,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["lookup/club",{"_index":1266,"title":{},"body":{"components/ClubLookupComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["lookup/division",{"_index":1608,"title":{},"body":{"modules/ConfigureSharedModule.html":{},"components/DivisionLookupComponent.html":{},"coverage.html":{}}}],["low",{"_index":3710,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["lower",{"_index":4903,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["lowercase",{"_index":1200,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["lowered",{"_index":4024,"title":{},"body":{"components/RegisterComponent.html":{}}}],["lowref",{"_index":3662,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["lsaquo",{"_index":1537,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["m",{"_index":983,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["m.configuremodule",{"_index":767,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.disciplineid",{"_index":4867,"title":{},"body":{"components/TeamsComponent.html":{}}}],["m.eventmodule",{"_index":769,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.reduce((prev",{"_index":987,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["macro",{"_index":280,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["macro.desc",{"_index":3222,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["macro.header",{"_index":3220,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["macro.name",{"_index":3221,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["macrodialogcomponent",{"_index":279,"title":{"components/MacroDialogComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["macros",{"_index":3162,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["made",{"_index":5376,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["main",{"_index":609,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/HomeComponent.html":{},"components/ScorecardsComponent.html":{}}}],["mainjudge",{"_index":4578,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["mainjudge.name",{"_index":4586,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["make",{"_index":2591,"title":{},"body":{"components/HomeComponent.html":{},"components/InfoComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/SaveButtonComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopsComponent.html":{}}}],["makeid",{"_index":1385,"title":{},"body":{"injectables/CommonService.html":{}}}],["makeid(len",{"_index":1395,"title":{},"body":{"injectables/CommonService.html":{}}}],["making",{"_index":5616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["male",{"_index":3528,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["managing",{"_index":2587,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["manually",{"_index":5572,"title":{},"body":{"index.html":{}}}],["many",{"_index":2741,"title":{},"body":{"interfaces/IJudgeInScoreGroup.html":{},"components/MacroDialogComponent.html":{},"components/TroopsComponent.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":785,"title":{},"body":{"modules/AppServerModule.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubLookupComponent.html":{},"injectables/GraphService.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/UserService.html":{},"components/VenueEditorComponent.html":{},"dependencies.html":{}}}],["map(d",{"_index":4865,"title":{},"body":{"components/TeamsComponent.html":{}}}],["map(k",{"_index":1413,"title":{},"body":{"injectables/CommonService.html":{}}}],["map(p",{"_index":3875,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["map(result",{"_index":2655,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["map(v",{"_index":1327,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["mapfromarray",{"_index":2415,"title":{},"body":{"injectables/GraphService.html":{}}}],["mapfromarray(arr",{"_index":2435,"title":{},"body":{"injectables/GraphService.html":{}}}],["mapfromobject",{"_index":2416,"title":{},"body":{"injectables/GraphService.html":{}}}],["mapfromobject(obj",{"_index":2438,"title":{},"body":{"injectables/GraphService.html":{}}}],["margin",{"_index":190,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DialogComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{}}}],["markdeleted",{"_index":2783,"title":{},"body":{"interfaces/ITeamInDiscipline.html":{},"interfaces/ParticipantCache.html":{},"components/SignoffReportComponent.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["markdown",{"_index":671,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/TournamentModule.html":{},"dependencies.html":{}}}],["markdowntohtmlmodule",{"_index":670,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/TournamentModule.html":{}}}],["markerdragend",{"_index":5303,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["markerdragend($event",{"_index":5309,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["mat",{"_index":217,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ContextMenuComponent.html":{},"components/DivisionLookupComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/VenueComponent.html":{}}}],["mat_dialog_data",{"_index":1670,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ErrorDialogComponent.html":{}}}],["matautocomplete",{"_index":1297,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/VenueEditorComponent.html":{}}}],["matautocompletemodule",{"_index":677,"title":{},"body":{"modules/AppModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureSharedModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["matautocompleteselectedevent",{"_index":3456,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["matbuttonmodule",{"_index":378,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["matcardmodule",{"_index":675,"title":{},"body":{"modules/AppModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["match",{"_index":985,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["matcheckboxmodule",{"_index":1368,"title":{},"body":{"modules/ClubModule.html":{},"modules/DivisionsModule.html":{},"modules/TournamentModule.html":{}}}],["matcher",{"_index":3926,"title":{},"body":{"components/PasswordComponent.html":{},"components/ResetComponent.html":{}}}],["matching",{"_index":346,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AdvancedModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":4932,"title":{},"body":{"modules/TournamentModule.html":{}}}],["matdialog",{"_index":2173,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/ParticipantCache.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{}}}],["matdialogmodule",{"_index":680,"title":{},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}}}],["matdialogref",{"_index":1632,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{}}}],["material",{"_index":741,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["matexpansionmodule",{"_index":2224,"title":{},"body":{"modules/EventModule.html":{}}}],["matformfieldmodule",{"_index":376,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["math.ceil(score.value",{"_index":4249,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["math.max(...ages",{"_index":5085,"title":{},"body":{"components/TroopsComponent.html":{}}}],["math.max(low",{"_index":3724,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["math.min(...ages",{"_index":5083,"title":{},"body":{"components/TroopsComponent.html":{}}}],["math.min(low",{"_index":3725,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["matinputmodule",{"_index":377,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/ClubModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["matlistmodule",{"_index":681,"title":{},"body":{"modules/AppModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{}}}],["matmenumodule",{"_index":2223,"title":{},"body":{"modules/EventModule.html":{},"modules/TournamentModule.html":{}}}],["matnativedatemodule",{"_index":4933,"title":{},"body":{"modules/TournamentModule.html":{}}}],["matoptionmodule",{"_index":678,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigureModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["matprogressbarmodule",{"_index":4658,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressspinnermodule",{"_index":1553,"title":{},"body":{"modules/ConfigureModule.html":{},"modules/EventModule.html":{},"modules/TournamentModule.html":{}}}],["matselectchange",{"_index":1500,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["matselectmodule",{"_index":1552,"title":{},"body":{"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{}}}],["matslidetogglemodule",{"_index":679,"title":{},"body":{"modules/AppModule.html":{},"modules/ClubModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{}}}],["matsnackbar",{"_index":809,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["matsnackbarmodule",{"_index":676,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["matsort",{"_index":3652,"title":{},"body":{"injectables/MemberStateService.html":{}}}],["matsortmodule",{"_index":1366,"title":{},"body":{"modules/ClubModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["mattablemodule",{"_index":1367,"title":{},"body":{"modules/ClubModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["mattabsmodule",{"_index":375,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/ClubModule.html":{},"modules/TournamentModule.html":{}}}],["mattoolbarmodule",{"_index":4934,"title":{},"body":{"modules/TournamentModule.html":{}}}],["max",{"_index":194,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DialogComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDivision.html":{},"interfaces/IScoreGroup.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/VenueComponent.html":{}}}],["maxage",{"_index":5084,"title":{},"body":{"components/TroopsComponent.html":{}}}],["maxyear",{"_index":3443,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["mc",{"_index":715,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["me.fb.group",{"_index":3117,"title":{},"body":{"components/LoginComponent.html":{}}}],["me.loginform",{"_index":3116,"title":{},"body":{"components/LoginComponent.html":{}}}],["me.queryparamssubscription",{"_index":3119,"title":{},"body":{"components/LoginComponent.html":{}}}],["me.redirectto",{"_index":3122,"title":{},"body":{"components/LoginComponent.html":{}}}],["me.role",{"_index":4917,"title":{},"body":{"components/TournamentComponent.html":{},"components/VenueComponent.html":{}}}],["me.roles[value",{"_index":2848,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["me.route.queryparams.subscribe(params",{"_index":3120,"title":{},"body":{"components/LoginComponent.html":{}}}],["me.translate.instant('access",{"_index":3187,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["me.translate.instant('apply",{"_index":3194,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["me.translate.instant('can",{"_index":3197,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["me.translate.instant('container",{"_index":3191,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["me.translate.instant('current",{"_index":3210,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["me.translate.instant('list",{"_index":3205,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["me.translate.instant('lists",{"_index":3204,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["me.translate.instant('logical",{"_index":3184,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["me.translate.instant('participant",{"_index":3212,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["me.translate.instant('the",{"_index":3201,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["me.translate.instant('tournament",{"_index":3200,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["means",{"_index":3258,"title":{},"body":{"components/MediaComponent.html":{}}}],["media",{"_index":284,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["media'},{'name",{"_index":282,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["media(media",{"_index":3339,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["media.component.html",{"_index":3232,"title":{},"body":{"components/MediaComponent.html":{}}}],["media.component.scss",{"_index":3231,"title":{},"body":{"components/MediaComponent.html":{}}}],["media.id).topromise",{"_index":3433,"title":{},"body":{"injectables/MediaService.html":{}}}],["media.originalname",{"_index":3378,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["media/media.component",{"_index":1380,"title":{},"body":{"modules/ClubModule.html":{}}}],["mediacomponent",{"_index":281,"title":{"components/MediaComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mediacontrolcomponent",{"_index":283,"title":{"components/MediaControlComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mediaservice",{"_index":3291,"title":{"injectables/MediaService.html":{}},"body":{"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"interfaces/ParticipantCache.html":{},"coverage.html":{}}}],["media{disciplineid",{"_index":4857,"title":{},"body":{"components/TeamsComponent.html":{}}}],["media{id",{"_index":3789,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["member",{"_index":287,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["member.club.id",{"_index":3514,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["member.clubid",{"_index":3513,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["member.id).subscribe(response",{"_index":3526,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["member.name",{"_index":3636,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["member[k",{"_index":3510,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["memberchanged",{"_index":3473,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["membereditorcomponent",{"_index":286,"title":{"components/MemberEditorComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["memberform",{"_index":3444,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["memberform.value.name",{"_index":3527,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["memberlist.length",{"_index":3495,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["memberlist[memberlist.length",{"_index":3496,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["memberlisthidden",{"_index":3557,"title":{},"body":{"components/MemberSelectorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["memberquery",{"_index":3445,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["memberreceived",{"_index":3450,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["memberreceived(member",{"_index":3459,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["members",{"_index":1252,"title":{},"body":{"components/ClubEditorComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/MemberSelectorComponent.html":{},"components/TroopsComponent.html":{}}}],["members'},{'name",{"_index":289,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["members(team",{"_index":5029,"title":{},"body":{"components/TroopsComponent.html":{}}}],["members.filter(this.filterfn[key",{"_index":3627,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["members.length",{"_index":3625,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["members.sort((a",{"_index":3628,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["members/:id",{"_index":1592,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["members/add",{"_index":1591,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["members/member",{"_index":1373,"title":{},"body":{"modules/ClubModule.html":{}}}],["members/members.component",{"_index":1372,"title":{},"body":{"modules/ClubModule.html":{}}}],["memberscomponent",{"_index":288,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["memberselectorcomponent",{"_index":290,"title":{"components/MemberSelectorComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["memberstateservice",{"_index":1363,"title":{"injectables/MemberStateService.html":{}},"body":{"modules/ClubModule.html":{},"injectables/MemberStateService.html":{},"coverage.html":{},"overview.html":{}}}],["membertemplate",{"_index":3558,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["menlo",{"_index":4325,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["menu",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ContextMenuComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["menu'},{'name",{"_index":246,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["menu.component",{"_index":2234,"title":{},"body":{"modules/EventModule.html":{},"interfaces/ParticipantCache.html":{}}}],["menu.component.html",{"_index":1615,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.scss",{"_index":1614,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts",{"_index":1613,"title":{},"body":{"components/ContextMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:13",{"_index":1651,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:17",{"_index":1653,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:21",{"_index":1649,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:22",{"_index":1655,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:23",{"_index":1657,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:24",{"_index":1659,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:27",{"_index":1661,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:28",{"_index":1663,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:29",{"_index":1665,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:30",{"_index":1667,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:31",{"_index":1669,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:34",{"_index":1635,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:37",{"_index":1648,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:41",{"_index":1647,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:43",{"_index":1641,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:48",{"_index":1638,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:52",{"_index":1639,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:59",{"_index":1643,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:67",{"_index":1636,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:68",{"_index":1640,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:70",{"_index":1637,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:71",{"_index":1644,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:73",{"_index":1645,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu.component.ts:74",{"_index":1642,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["menu/context",{"_index":1612,"title":{},"body":{"components/ContextMenuComponent.html":{},"modules/EventModule.html":{},"interfaces/ParticipantCache.html":{},"coverage.html":{}}}],["menus",{"_index":2241,"title":{},"body":{"modules/EventRoutingModule.html":{}}}],["message",{"_index":884,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ErrorHandlerService.html":{}}}],["met",{"_index":3299,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["meta",{"_index":2582,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/SEOService.html":{},"interfaces/TournamentType.html":{},"components/UserEditorComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"pipes/OrderByPipe.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"dependencies.html":{}}}],["method",{"_index":897,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/HttpAction.html":{},"injectables/HttpStateService.html":{},"injectables/LoadIndicatorService.html":{},"components/SaveButtonComponent.html":{},"interfaces/UrlActivity.html":{}}}],["method.ts",{"_index":5510,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methods",{"_index":29,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["methodtotype",{"_index":2965,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["middle",{"_index":4628,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["middleware",{"_index":5492,"title":{},"body":{"dependencies.html":{}}}],["mimetype",{"_index":2756,"title":{},"body":{"interfaces/IMedia.html":{}}}],["min",{"_index":169,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDivision.html":{},"interfaces/IScoreGroup.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/TournamentComponent.html":{}}}],["minage",{"_index":5082,"title":{},"body":{"components/TroopsComponent.html":{}}}],["minheight",{"_index":5064,"title":{},"body":{"components/TroopsComponent.html":{}}}],["minimum",{"_index":5584,"title":{},"body":{"index.html":{}}}],["minmax(70px",{"_index":4608,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["minutes",{"_index":4140,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["minyear",{"_index":3446,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["miscellaneous",{"_index":5504,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":545,"title":{},"body":{"components/AppComponent.html":{}}}],["mock",{"_index":1065,"title":{},"body":{"injectables/BrowserService.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":465,"title":{},"body":{"components/AppComponent.html":{},"components/MemberEditorComponent.html":{}}}],["model",{"_index":1508,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["model/iuser",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["modification",{"_index":2645,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["module",{"_index":348,"title":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{},"overview.html":{}}}],["modulemaploadermodule",{"_index":783,"title":{},"body":{"modules/AppServerModule.html":{}}}],["modules",{"_index":350,"title":{"modules.html":{}},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":909,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/CommonService.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"interfaces/ITeamInDiscipline.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/TeamsComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"interfaces/TournamentType.html":{},"components/TroopsComponent.html":{},"pipes/UtcDatePipe.html":{},"dependencies.html":{}}}],["moment().diff(moment(birthyear",{"_index":3634,"title":{},"body":{"components/MemberSelectorComponent.html":{},"components/TroopsComponent.html":{}}}],["moment().diff(moment(m.birthyear",{"_index":5120,"title":{},"body":{"components/TroopsComponent.html":{}}}],["moment().subtract(60",{"_index":3469,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["moment().subtract(8",{"_index":3464,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["moment(date).format('dd",{"_index":1423,"title":{},"body":{"injectables/CommonService.html":{}}}],["moment(lasttime).clone().add(addtime",{"_index":4139,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["moment(this.starttime(tournament",{"_index":4158,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["moment(tournament.enddate",{"_index":1429,"title":{},"body":{"injectables/CommonService.html":{}}}],["moment(tournament.enddate).format('yyyy",{"_index":1435,"title":{},"body":{"injectables/CommonService.html":{}}}],["moment(tournament.startdate",{"_index":1427,"title":{},"body":{"injectables/CommonService.html":{}}}],["moment(tournament.startdate).hour(+tournament.times[0].time.split(',')[0",{"_index":4156,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["moment(tournament.startdate).hour(+tournament.times[0][type].split(',')[0]).minute(0",{"_index":4131,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["moment(tournament.startdate).hour(+tournament.times[currentday].time.split(',')[1",{"_index":4159,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["moment(tournament.startdate).hour(+tournament.times[currentday][type].split(',')[1",{"_index":4147,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["moment.ismoment(obj[k",{"_index":2495,"title":{},"body":{"injectables/GraphService.html":{}}}],["moment.moment",{"_index":1422,"title":{},"body":{"injectables/CommonService.html":{},"injectables/ScheduleService.html":{}}}],["mono",{"_index":4324,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["monospace",{"_index":4327,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["month",{"_index":1430,"title":{},"body":{"injectables/CommonService.html":{}}}],["more",{"_index":834,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ClubLookupComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/ScheduleService.html":{}}}],["mortem",{"_index":1233,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["mouseevent",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/DialogComponent.html":{},"components/MacroDialogComponent.html":{},"interfaces/ParticipantCache.html":{},"components/VenueEditorComponent.html":{}}}],["mousex",{"_index":3910,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["mousey",{"_index":3912,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["move",{"_index":4151,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["moveiteminarray",{"_index":1868,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["moveiteminarray(event.container.data",{"_index":1882,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["moz",{"_index":3737,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["multi",{"_index":747,"title":{},"body":{"modules/AppModule.html":{},"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{},"injectables/MyHammerConfig.html":{},"directives/ToCaseDirective.html":{},"miscellaneous/variables.html":{}}}],["multirange",{"_index":3656,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["multirange'},{'name",{"_index":293,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["multirange.component.html",{"_index":3658,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["multirange.component.scss",{"_index":3657,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["multirangecomponent",{"_index":292,"title":{"components/MultirangeComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["music",{"_index":3401,"title":{},"body":{"injectables/MediaService.html":{}}}],["mutate",{"_index":2408,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["mutation",{"_index":844,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{}}}],["mutationoptions",{"_index":2442,"title":{},"body":{"injectables/GraphService.html":{}}}],["myhammerconfig",{"_index":711,"title":{"injectables/MyHammerConfig.html":{}},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{},"coverage.html":{}}}],["mysql",{"_index":5583,"title":{},"body":{"index.html":{}}}],["n",{"_index":2485,"title":{},"body":{"injectables/GraphService.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["n/a",{"_index":2692,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name.length",{"_index":1339,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["naming",{"_index":838,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["national",{"_index":5517,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nav",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ContextMenuComponent.html":{}}}],["navbar",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["navheight",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["navstate",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["nb",{"_index":505,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["nbsp",{"_index":4276,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["nbsp;tournaments",{"_index":2613,"title":{},"body":{"components/HomeComponent.html":{}}}],["need",{"_index":4020,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["needed",{"_index":950,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MultirangeComponent.html":{}}}],["needs",{"_index":3973,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["negotiated",{"_index":5380,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["negpad",{"_index":4314,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["nescessary",{"_index":818,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["networinterceptor",{"_index":2984,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["network",{"_index":2405,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["never",{"_index":3828,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["new",{"_index":151,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"modules/GraphQLModule.html":{},"components/HomeComponent.html":{},"injectables/HttpStateService.html":{},"injectables/LoadIndicatorService.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/SignoffReportComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"coverage.html":{}}}],["newconfig",{"_index":141,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["newjudge",{"_index":4428,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["newjudge.id",{"_index":4430,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["newlang",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["newurl",{"_index":5145,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["next",{"_index":886,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ConfigureDisplayComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"components/MacroDialogComponent.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"directives/ToCaseDirective.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/variables.html":{}}}],["next(idx",{"_index":3901,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["next.handle(req).pipe",{"_index":932,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/HttpCacheInterceptor.html":{}}}],["next.handle(serverreq",{"_index":5149,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["nexttime",{"_index":4112,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["nexttime.add(1",{"_index":4152,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["nexttime.diff(endtime",{"_index":4148,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["nexttime.diff(starttime",{"_index":4157,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["ng",{"_index":1472,"title":{},"body":{"components/ConfigureComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/MacroDialogComponent.html":{},"components/MemberEditorComponent.html":{}}}],["ng2",{"_index":1604,"title":{},"body":{"modules/ConfigureSharedModule.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{}}}],["ng_value_accessor",{"_index":1269,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{},"directives/ToCaseDirective.html":{},"miscellaneous/variables.html":{}}}],["ngaftercontentchecked",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["ngafterviewinit",{"_index":4170,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["ngfactory",{"_index":786,"title":{},"body":{"modules/AppServerModule.html":{},"dependencies.html":{}}}],["ngform",{"_index":3937,"title":{},"body":{"components/PasswordComponent.html":{},"components/ResetComponent.html":{}}}],["ngmodule",{"_index":368,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["ngonchanges",{"_index":1823,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/MediaControlComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["ngonchanges(change",{"_index":3324,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["ngonchanges(changes",{"_index":1847,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["ngondestroy",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/ClubComponent.html":{},"components/ClubLookupComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthDirective.html":{},"components/LoginComponent.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{}}}],["ngoninit",{"_index":32,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["nguniversal/express",{"_index":5139,"title":{},"body":{"interceptors/UniversalInterceptor.html":{},"dependencies.html":{}}}],["nguniversal/module",{"_index":784,"title":{},"body":{"modules/AppServerModule.html":{},"dependencies.html":{}}}],["ngx",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"guards/CanActivateRegistration.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MyHammerConfig.html":{},"interfaces/ParticipantCache.html":{},"components/RegisterComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"modules/SharedModule.html":{},"components/TeamsComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopsComponent.html":{},"components/VenueEditorComponent.html":{},"dependencies.html":{}}}],["nobuttons",{"_index":1725,"title":{},"body":{"components/DialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["nocache",{"_index":2637,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["node",{"_index":1064,"title":{},"body":{"injectables/BrowserService.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":543,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/DialogComponent.html":{},"components/EventComponent.html":{},"components/HelpBlockComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/MediaComponent.html":{},"components/MemberEditorComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["noop",{"_index":4097,"title":{},"body":{"components/SaveButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noreport",{"_index":5176,"title":{},"body":{"components/UserEditorComponent.html":{},"injectables/UserService.html":{}}}],["normal",{"_index":1964,"title":{},"body":{"components/DisplayComponent.html":{},"components/EventComponent.html":{}}}],["nothing",{"_index":833,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["notified",{"_index":822,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["notify",{"_index":817,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["notifysubscribers",{"_index":2685,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["notifysubscribers(req",{"_index":2687,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["now",{"_index":958,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["now.format('hh:mm:ss",{"_index":963,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["nowrap",{"_index":3268,"title":{},"body":{"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["nth",{"_index":3066,"title":{},"body":{"components/LoadSpinnerComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["null",{"_index":69,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AppModule.html":{},"injectables/BrowserService.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"injectables/GraphService.html":{},"injectables/HttpStateService.html":{},"interfaces/IJudge.html":{},"directives/IfAuthDirective.html":{},"classes/Judge.html":{},"components/LogoutComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"injectables/MemberStateService.html":{},"injectables/MyHammerConfig.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":1396,"title":{},"body":{"injectables/CommonService.html":{},"components/ConfigureDisplayComponent.html":{},"components/DisciplinesComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScorecardsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/VenueEditorComponent.html":{}}}],["number:'1.2",{"_index":4275,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{}}}],["number:'1.3",{"_index":4270,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{}}}],["number:\\'1.2",{"_index":4337,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{}}}],["number:\\'1.3",{"_index":4336,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{}}}],["numbers",{"_index":4320,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["numeric",{"_index":3196,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["numpadadd",{"_index":1150,"title":{},"body":{"components/ClubComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{}}}],["o",{"_index":1418,"title":{},"body":{"injectables/CommonService.html":{}}}],["o.active",{"_index":5366,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["obj",{"_index":1401,"title":{},"body":{"injectables/CommonService.html":{},"injectables/GraphService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"components/MemberEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["obj.body",{"_index":2707,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["obj.url",{"_index":2706,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["obj[k",{"_index":1416,"title":{},"body":{"injectables/CommonService.html":{},"injectables/GraphService.html":{},"components/MemberEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["obj[k]).replace(/\\n/gm",{"_index":2502,"title":{},"body":{"injectables/GraphService.html":{}}}],["obj[k].gettime",{"_index":2494,"title":{},"body":{"injectables/GraphService.html":{}}}],["obj[k].reduce((s",{"_index":2487,"title":{},"body":{"injectables/GraphService.html":{}}}],["obj[k].todate",{"_index":2497,"title":{},"body":{"injectables/GraphService.html":{}}}],["obj[k]['id",{"_index":2499,"title":{},"body":{"injectables/GraphService.html":{}}}],["object",{"_index":1050,"title":{},"body":{"injectables/BrowserService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GraphService.html":{},"injectables/LoadIndicatorService.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":1414,"title":{},"body":{"injectables/CommonService.html":{},"injectables/GraphService.html":{}}}],["object.assign(res",{"_index":1419,"title":{},"body":{"injectables/CommonService.html":{}}}],["object.keys(obj).reduce((str",{"_index":2483,"title":{},"body":{"injectables/GraphService.html":{}}}],["object.keys(result).length",{"_index":2656,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["object.keys(this.cache).foreach(key",{"_index":2680,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["object.keys(this.defaultvalues",{"_index":111,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["object.keys(this.filterfn).foreach(key",{"_index":3626,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["object.keys(this.venueform.controls).reduce((obj",{"_index":5349,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["object.keys(v).length",{"_index":138,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["object.keys(v[0]).length",{"_index":136,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["objects",{"_index":1038,"title":{},"body":{"injectables/BrowserService.html":{}}}],["oblique",{"_index":4318,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["observable",{"_index":891,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ConfigurationService.html":{},"injectables/DisplayService.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"injectables/GraphService.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/LoadIndicatorService.html":{},"injectables/MediaService.html":{},"classes/SubjectSource.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{}}}],["observable'][url",{"_index":3039,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["observable.create((observer",{"_index":2463,"title":{},"body":{"injectables/GraphService.html":{}}}],["observable.create(observer",{"_index":2475,"title":{},"body":{"injectables/GraphService.html":{}}}],["observe",{"_index":5245,"title":{},"body":{"injectables/UserService.html":{}}}],["observer",{"_index":2447,"title":{},"body":{"injectables/GraphService.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["observer.complete",{"_index":2473,"title":{},"body":{"injectables/GraphService.html":{}}}],["observer.next(res",{"_index":2472,"title":{},"body":{"injectables/GraphService.html":{}}}],["of(this.cache.get(req.urlwithparams",{"_index":2654,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["of(this.currentuserreceived(null",{"_index":5248,"title":{},"body":{"injectables/UserService.html":{}}}],["og:description",{"_index":4068,"title":{},"body":{"injectables/SEOService.html":{}}}],["og:title",{"_index":4065,"title":{},"body":{"injectables/SEOService.html":{}}}],["og:url",{"_index":4067,"title":{},"body":{"injectables/SEOService.html":{}}}],["ok",{"_index":1764,"title":{},"body":{"components/DialogComponent.html":{},"components/ErrorDialogComponent.html":{},"components/PasswordComponent.html":{}}}],["okclicked",{"_index":1722,"title":{},"body":{"components/DialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["old",{"_index":3959,"title":{},"body":{"components/PasswordComponent.html":{}}}],["oldlng",{"_index":2898,"title":{},"body":{"components/InfoComponent.html":{}}}],["oldpassword",{"_index":3939,"title":{},"body":{"components/PasswordComponent.html":{}}}],["omit",{"_index":1386,"title":{},"body":{"injectables/CommonService.html":{}}}],["omit(obj",{"_index":1399,"title":{},"body":{"injectables/CommonService.html":{}}}],["onblur",{"_index":4171,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["onblur(event",{"_index":4181,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["onchange",{"_index":1774,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["onchange($event",{"_index":1784,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{}}}],["onchange(values",{"_index":4475,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["onchanges",{"_index":1810,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/MediaControlComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["onclick($event",{"_index":3921,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["onclose",{"_index":4172,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["onclose(res",{"_index":4183,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["ondestroy",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/ClubComponent.html":{},"components/ClubLookupComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthDirective.html":{},"components/LoginComponent.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/TeamsComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{}}}],["one",{"_index":1351,"title":{},"body":{"components/ClubLookupComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/ResetComponent.html":{},"components/ScoreEditorComponent.html":{},"interfaces/UrlActivity.html":{}}}],["oneof",{"_index":4034,"title":{},"body":{"components/ResetComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["oninput($event",{"_index":4900,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["onkey(event",{"_index":1755,"title":{},"body":{"components/DialogComponent.html":{}}}],["onkeydown(event",{"_index":4252,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["onkeydown(evt",{"_index":2350,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["onkeypress(event",{"_index":2933,"title":{},"body":{"components/InfoComponent.html":{}}}],["onkeyup(evt",{"_index":1148,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["onmediachanged",{"_index":3233,"title":{},"body":{"components/MediaComponent.html":{}}}],["onmediachanged(media",{"_index":3237,"title":{},"body":{"components/MediaComponent.html":{}}}],["onpress",{"_index":5012,"title":{},"body":{"components/TroopsComponent.html":{}}}],["onpress($event",{"_index":5032,"title":{},"body":{"components/TroopsComponent.html":{}}}],["onrendercomplete",{"_index":4537,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["onteamsreceived",{"_index":5013,"title":{},"body":{"components/TroopsComponent.html":{}}}],["onteamsreceived(teams",{"_index":5034,"title":{},"body":{"components/TroopsComponent.html":{}}}],["op",{"_index":4584,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["opacity",{"_index":2515,"title":{},"body":{"components/HelpBlockComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/TeamsComponent.html":{},"components/TroopsComponent.html":{}}}],["open",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"components/DialogComponent.html":{},"miscellaneous/variables.html":{}}}],["opendialog",{"_index":1723,"title":{},"body":{"components/DialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["opens",{"_index":4017,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{}}}],["operates",{"_index":829,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["operation",{"_index":948,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"injectables/HttpStateService.html":{},"interfaces/IScoreGroup.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"miscellaneous/enumerations.html":{}}}],["operation.addition",{"_index":4196,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["operation.extensions",{"_index":2377,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["operation.getcontext().headers",{"_index":2376,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["operationdefinition",{"_index":2399,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["operationdefinitionnode",{"_index":2372,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["operations",{"_index":4344,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["operation}`).subscribe(result",{"_index":4412,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["option",{"_index":3751,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["optional",{"_index":55,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/IUser.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":2392,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"injectables/HttpStateService.html":{},"injectables/UserService.html":{},"components/VenueEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["options)).subscribe(res",{"_index":2466,"title":{},"body":{"injectables/GraphService.html":{}}}],["options)).valuechanges",{"_index":2461,"title":{},"body":{"injectables/GraphService.html":{}}}],["options['context",{"_index":5234,"title":{},"body":{"injectables/UserService.html":{}}}],["opts",{"_index":2188,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["order",{"_index":2745,"title":{},"body":{"interfaces/IJudgeInScoreGroup.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{},"index.html":{}}}],["orderby",{"_index":3763,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["orderbypipe",{"_index":3759,"title":{"pipes/OrderByPipe.html":{}},"body":{"pipes/OrderByPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["ordering",{"_index":2746,"title":{},"body":{"interfaces/IJudgeInScoreGroup.html":{}}}],["organize",{"_index":4015,"title":{},"body":{"components/RegisterComponent.html":{}}}],["organized",{"_index":4925,"title":{},"body":{"components/TournamentComponent.html":{}}}],["organizer",{"_index":2814,"title":{},"body":{"interfaces/IUser.html":{},"components/RegisterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["organizers",{"_index":2242,"title":{},"body":{"modules/EventRoutingModule.html":{}}}],["origin",{"_index":615,"title":{},"body":{"components/AppComponent.html":{}}}],["original",{"_index":2659,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{},"components/InfoComponent.html":{}}}],["originalname",{"_index":2757,"title":{},"body":{"interfaces/IMedia.html":{},"injectables/MediaService.html":{}}}],["originalvalue",{"_index":2023,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["out",{"_index":365,"title":{},"body":{"modules/AdvancedModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ClubComponent.html":{},"modules/ClubModule.html":{},"components/ConfigureComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"components/HomeComponent.html":{},"components/LogoutComponent.html":{},"injectables/MediaService.html":{},"components/MemberSelectorComponent.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{},"overview.html":{}}}],["outline",{"_index":4333,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["output",{"_index":1748,"title":{},"body":{"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TroopEditorComponent.html":{},"index.html":{}}}],["outputs",{"_index":1726,"title":{},"body":{"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TroopEditorComponent.html":{}}}],["over",{"_index":2902,"title":{},"body":{"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/PasswordComponent.html":{},"interfaces/UrlActivity.html":{}}}],["overflow",{"_index":2616,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["overlay",{"_index":1624,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["overlaymodule",{"_index":2231,"title":{},"body":{"modules/EventModule.html":{}}}],["overview",{"_index":5596,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":3273,"title":{},"body":{"components/MediaComponent.html":{}}}],["p.add(c.divisionname",{"_index":4708,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["p.add(s.disciplinename",{"_index":4709,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["p.endtime",{"_index":3874,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["p.starttime",{"_index":3873,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["package",{"_index":2983,"title":{"dependencies.html":{}},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["packaged",{"_index":1565,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["padding",{"_index":202,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DisplayComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/RegisterComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["page",{"_index":1139,"title":{},"body":{"components/ClubComponent.html":{},"components/HomeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"interfaces/TournamentType.html":{}}}],["pagedown",{"_index":4265,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["pagetracking",{"_index":730,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["pageup",{"_index":4266,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["pane",{"_index":1673,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["panel",{"_index":205,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ClubEditorComponent.html":{},"components/DialogComponent.html":{},"components/DisplayComponent.html":{},"components/LoginComponent.html":{},"components/MediaComponent.html":{}}}],["panelclass",{"_index":3023,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/ParticipantCache.html":{},"interfaces/UrlActivity.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1980,"title":{},"body":{"injectables/DisplayService.html":{}}}],["params.displayid",{"_index":2338,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["params.fromname",{"_index":5346,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["params.id",{"_index":2205,"title":{},"body":{"components/EventComponent.html":{},"components/MemberEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["params.u",{"_index":3121,"title":{},"body":{"components/LoginComponent.html":{}}}],["parent",{"_index":1942,"title":{},"body":{"components/DisplayComponent.html":{},"components/FullscreenComponent.html":{},"components/InfoComponent.html":{},"components/MediaComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{}}}],["parsefloat(fixedval",{"_index":4251,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["parsefloat(participant.total",{"_index":3848,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["parsefloat(this.participant.total",{"_index":1683,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["parsefloat(this.venueform.getrawvalue().latitude",{"_index":5328,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["parsefloat(this.venueform.getrawvalue().longitude",{"_index":5330,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["parseint(groupname.charat(1",{"_index":4745,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["parseint(response.headers.get('expiration",{"_index":5230,"title":{},"body":{"injectables/UserService.html":{}}}],["parser",{"_index":2440,"title":{},"body":{"injectables/GraphService.html":{}}}],["part",{"_index":3849,"title":{},"body":{"interfaces/ParticipantCache.html":{},"components/VenueEditorComponent.html":{}}}],["participant",{"_index":1407,"title":{},"body":{"injectables/CommonService.html":{},"components/ContextMenuComponent.html":{},"interfaces/IScore.html":{},"components/MacroDialogComponent.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{}}}],["participant's",{"_index":3889,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["participant.calculatedstarttime",{"_index":3835,"title":{},"body":{"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{}}}],["participant.calculatedstarttime.todate",{"_index":4128,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["participant.disciplineid",{"_index":3845,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["participant.disciplinename",{"_index":1444,"title":{},"body":{"injectables/CommonService.html":{},"components/ScoreEditorComponent.html":{}}}],["participant.divisionname",{"_index":1443,"title":{},"body":{"injectables/CommonService.html":{},"components/ScoreEditorComponent.html":{}}}],["participant.endtime",{"_index":3883,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["participant.id",{"_index":3825,"title":{},"body":{"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{}}}],["participant.id}){id,endtime}}`).subscribe(res",{"_index":3885,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["participant.id}){id,publishtime}}`).subscribe(res",{"_index":3891,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["participant.id}){id,starttime}}`).subscribe(res",{"_index":3879,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["participant.markdeleted",{"_index":3852,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["participant.publishtime",{"_index":3850,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["participant.scorable",{"_index":3853,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["participant.scores",{"_index":4722,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["participant.scores.find(s",{"_index":4746,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["participant.scores.map(s",{"_index":4723,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["participant.sortnumber",{"_index":3833,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["participant.startnumber",{"_index":4267,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["participant.starttime",{"_index":3858,"title":{},"body":{"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{}}}],["participant.team.name",{"_index":1442,"title":{},"body":{"injectables/CommonService.html":{},"components/ScoreEditorComponent.html":{}}}],["participant.totalbyscoregroup.find(g",{"_index":4748,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["participant.type",{"_index":1445,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{}}}],["participantcache",{"_index":3775,"title":{"interfaces/ParticipantCache.html":{}},"body":{"interfaces/ParticipantCache.html":{},"coverage.html":{}}}],["participantid",{"_index":2762,"title":{},"body":{"interfaces/IScore.html":{},"components/ScoreEditorComponent.html":{}}}],["participants",{"_index":3206,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["participate",{"_index":4013,"title":{},"body":{"components/RegisterComponent.html":{}}}],["participationtype",{"_index":1405,"title":{},"body":{"injectables/CommonService.html":{},"components/ContextMenuComponent.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"miscellaneous/enumerations.html":{}}}],["participationtype.live",{"_index":3859,"title":{},"body":{"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{}}}],["participationtype.training",{"_index":1679,"title":{},"body":{"components/ContextMenuComponent.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{}}}],["participationtype.training).length",{"_index":3821,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["participationtypes",{"_index":3797,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["particular",{"_index":5611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":2811,"title":{},"body":{"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{}}}],["password'},{'name",{"_index":295,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["password.component.html",{"_index":3925,"title":{},"body":{"components/PasswordComponent.html":{}}}],["password.component.scss",{"_index":3924,"title":{},"body":{"components/PasswordComponent.html":{}}}],["password/password.component",{"_index":5168,"title":{},"body":{"components/UserEditorComponent.html":{},"modules/UsersModule.html":{}}}],["passwordcomponent",{"_index":294,"title":{"components/PasswordComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["passwords",{"_index":3971,"title":{},"body":{"components/PasswordComponent.html":{}}}],["past",{"_index":2577,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["past']).subscribe",{"_index":2597,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["past.tournaments",{"_index":2578,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["past.tournaments.length",{"_index":2579,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["patch",{"_index":1328,"title":{},"body":{"components/ClubLookupComponent.html":{},"injectables/HttpStateService.html":{},"miscellaneous/enumerations.html":{}}}],["path",{"_index":758,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/EventRoutingModule.html":{}}}],["pathmatch",{"_index":759,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/EventRoutingModule.html":{}}}],["pause",{"_index":3384,"title":{},"body":{"injectables/MediaService.html":{}}}],["per",{"_index":3256,"title":{},"body":{"components/MediaComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["perform",{"_index":3209,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["performance",{"_index":3215,"title":{},"body":{"components/MacroDialogComponent.html":{},"components/ScorecardsComponent.html":{}}}],["permission",{"_index":3295,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["persist",{"_index":5590,"title":{},"body":{"index.html":{}}}],["persistance",{"_index":820,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["person",{"_index":5377,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["person.name",{"_index":4448,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["phone",{"_index":2736,"title":{},"body":{"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"classes/Judge.html":{},"components/MemberEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["pipe",{"_index":672,"title":{"pipes/OrderByPipe.html":{},"pipes/UtcDatePipe.html":{}},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"modules/TournamentModule.html":{},"pipes/UtcDatePipe.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["pipe(debouncetime(400",{"_index":2479,"title":{},"body":{"injectables/GraphService.html":{}}}],["pipe(map((res",{"_index":5246,"title":{},"body":{"injectables/UserService.html":{}}}],["pipe(map(res",{"_index":5236,"title":{},"body":{"injectables/UserService.html":{}}}],["pipes",{"_index":3760,"title":{},"body":{"pipes/OrderByPipe.html":{},"modules/SharedModule.html":{},"pipes/UtcDatePipe.html":{},"overview.html":{}}}],["pipes/order",{"_index":4648,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/utc",{"_index":4653,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":3767,"title":{},"body":{"pipes/OrderByPipe.html":{},"pipes/UtcDatePipe.html":{}}}],["place",{"_index":1005,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["placeholder",{"_index":2025,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["places",{"_index":2988,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["plan",{"_index":4014,"title":{},"body":{"components/RegisterComponent.html":{}}}],["platform_id",{"_index":1061,"title":{},"body":{"injectables/BrowserService.html":{}}}],["platformid",{"_index":1052,"title":{},"body":{"injectables/BrowserService.html":{}}}],["play",{"_index":3287,"title":{},"body":{"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/VenueEditorComponent.html":{}}}],["play(media",{"_index":3394,"title":{},"body":{"injectables/MediaService.html":{}}}],["played",{"_index":3253,"title":{},"body":{"components/MediaComponent.html":{}}}],["please",{"_index":3958,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["point",{"_index":4264,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["pointer",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/EventComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["polyfill",{"_index":5481,"title":{},"body":{"dependencies.html":{}}}],["pop",{"_index":161,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["portrait",{"_index":4757,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["position",{"_index":527,"title":{},"body":{"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{}}}],["position(team",{"_index":4767,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["possible",{"_index":1410,"title":{},"body":{"injectables/CommonService.html":{},"components/TroopsComponent.html":{}}}],["post",{"_index":831,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ClubEditorComponent.html":{},"injectables/GraphService.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpStateService.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{},"miscellaneous/enumerations.html":{}}}],["post(query",{"_index":2441,"title":{},"body":{"injectables/GraphService.html":{}}}],["post/put",{"_index":853,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["poste2e",{"_index":5592,"title":{},"body":{"index.html":{}}}],["pre",{"_index":1231,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ErrorDialogComponent.html":{}}}],["press",{"_index":1958,"title":{},"body":{"components/DisplayComponent.html":{},"components/MemberSelectorComponent.html":{}}}],["prev",{"_index":2770,"title":{},"body":{"interfaces/IScoreContainer.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{}}}],["prev.concat(curr.scores.map(s",{"_index":4226,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["prev.find(card",{"_index":4735,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["prev.indexof(curr",{"_index":989,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["prev.push",{"_index":4738,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["prev.value",{"_index":4247,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["prevcard",{"_index":4571,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["prevcard.scoretype",{"_index":4576,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["prevcard.type.push",{"_index":4574,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["prevcard.type.push(current.type",{"_index":4737,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["prevent",{"_index":2240,"title":{},"body":{"modules/EventRoutingModule.html":{},"injectables/UserService.html":{}}}],["preview",{"_index":1485,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"components/InfoComponent.html":{}}}],["previewselected",{"_index":1489,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["previewselected($event",{"_index":1499,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["previous",{"_index":1490,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreEditorComponent.html":{}}}],["previous.starttime",{"_index":3868,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["previousstarted",{"_index":3867,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["primary",{"_index":533,"title":{},"body":{"components/AppComponent.html":{},"components/HelpBlockComponent.html":{},"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["primarybordercolor",{"_index":3059,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["primarydark",{"_index":1474,"title":{},"body":{"components/ConfigureComponent.html":{}}}],["primarylight",{"_index":3224,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["print",{"_index":619,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["print{@page",{"_index":4599,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["private",{"_index":113,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["privileges",{"_index":3115,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{}}}],["production",{"_index":5607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":5531,"title":{},"body":{"index.html":{}}}],["promise",{"_index":1846,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"injectables/MediaService.html":{}}}],["promise((resolve",{"_index":4986,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["promises",{"_index":5104,"title":{},"body":{"components/TroopsComponent.html":{}}}],["propagatevaluechange",{"_index":1278,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["properties.includes(k",{"_index":1412,"title":{},"body":{"injectables/CommonService.html":{}}}],["property",{"_index":3769,"title":{},"body":{"pipes/OrderByPipe.html":{},"injectables/SEOService.html":{}}}],["protected",{"_index":2971,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{}}}],["protractor",{"_index":5576,"title":{},"body":{"index.html":{}}}],["provide",{"_index":725,"title":{},"body":{"modules/AppModule.html":{},"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{},"modules/GraphQLModule.html":{},"injectables/MyHammerConfig.html":{},"components/RegisterComponent.html":{},"directives/ToCaseDirective.html":{},"components/UserEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":1069,"title":{},"body":{"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"injectables/DisplayService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GraphService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"injectables/LoadIndicatorService.html":{},"injectables/MediaService.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"injectables/ScheduleService.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":354,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"components/DivisionLookupComponent.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"modules/GraphQLModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"directives/ToCaseDirective.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{},"overview.html":{}}}],["provides",{"_index":1039,"title":{},"body":{"injectables/BrowserService.html":{}}}],["providesbanquet",{"_index":2793,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{}}}],["provideslodging",{"_index":2794,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{}}}],["providestransport",{"_index":2795,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{}}}],["proxy",{"_index":5491,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ps",{"_index":5591,"title":{},"body":{"index.html":{}}}],["public",{"_index":1616,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ErrorDialogComponent.html":{},"classes/ExpansionSource.html":{},"injectables/HttpStateService.html":{},"interfaces/IScoreContainer.html":{},"injectables/LoadIndicatorService.html":{},"components/PasswordComponent.html":{},"classes/ScoreContainer.html":{},"classes/SubjectSource.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{}}}],["publish",{"_index":1621,"title":{},"body":{"components/ContextMenuComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["publish(participant",{"_index":3887,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["published",{"_index":1712,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/MacroDialogComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreEditorComponent.html":{}}}],["publishedtime",{"_index":3208,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["publishtime",{"_index":2784,"title":{},"body":{"interfaces/ITeamInDiscipline.html":{},"interfaces/ParticipantCache.html":{},"components/SignoffReportComponent.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["pull",{"_index":5559,"title":{},"body":{"index.html":{}}}],["push",{"_index":5567,"title":{},"body":{"index.html":{}}}],["put",{"_index":2638,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpStateService.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{},"miscellaneous/enumerations.html":{}}}],["pwa",{"_index":155,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["pwa.closed",{"_index":157,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["px",{"_index":1688,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["q",{"_index":2702,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["q.indexof('mutation{delete",{"_index":2705,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["q.indexof('mutation{save",{"_index":2704,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["queries",{"_index":899,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["query",{"_index":836,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ClubLookupComponent.html":{},"components/EventComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"components/MemberSelectorComponent.html":{},"interfaces/TournamentType.html":{}}}],["querylist",{"_index":3779,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["queryoptions",{"_index":2424,"title":{},"body":{"injectables/GraphService.html":{}}}],["queryparams",{"_index":1001,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"components/VenueEditorComponent.html":{}}}],["queryparamssubscription",{"_index":3099,"title":{},"body":{"components/LoginComponent.html":{}}}],["queryselectorall",{"_index":1076,"title":{},"body":{"injectables/BrowserService.html":{}}}],["querystr",{"_index":2428,"title":{},"body":{"injectables/GraphService.html":{},"injectables/MediaService.html":{}}}],["querystr.push(`clubid",{"_index":3425,"title":{},"body":{"injectables/MediaService.html":{}}}],["querystr.push(`disciplineid",{"_index":3427,"title":{},"body":{"injectables/MediaService.html":{}}}],["querystr.push(`disciplinename",{"_index":3428,"title":{},"body":{"injectables/MediaService.html":{}}}],["querystr.push(`teamid",{"_index":3426,"title":{},"body":{"injectables/MediaService.html":{}}}],["r).expanded",{"_index":2291,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["r.formatted_address",{"_index":5340,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["r.geometry",{"_index":5342,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["r.hasownproperty('detailrow')).foreach(r",{"_index":2290,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["r.id",{"_index":5170,"title":{},"body":{"components/UserEditorComponent.html":{},"components/UsersComponent.html":{}}}],["r?\\n|\\r/gm",{"_index":1441,"title":{},"body":{"injectables/CommonService.html":{}}}],["radial",{"_index":603,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["radius",{"_index":187,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/MediaComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["range",{"_index":3731,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["re",{"_index":2126,"title":{},"body":{"components/DivisionsComponent.html":{},"components/MemberSelectorComponent.html":{}}}],["reaching",{"_index":5538,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":371,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["read",{"_index":3784,"title":{},"body":{"interfaces/ParticipantCache.html":{},"components/VenueEditorComponent.html":{}}}],["readable",{"_index":883,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["readonly",{"_index":4373,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["real",{"_index":870,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["really",{"_index":858,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["realrows",{"_index":2262,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["reason",{"_index":5589,"title":{},"body":{"index.html":{}}}],["recall",{"_index":4039,"title":{},"body":{"components/ResetComponent.html":{}}}],["received",{"_index":3217,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["reconnect",{"_index":2393,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["records",{"_index":3766,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["records.length",{"_index":3771,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["records.sort((a",{"_index":3772,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["recruit",{"_index":3641,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["rect",{"_index":4219,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["rect.top",{"_index":4222,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["red",{"_index":1715,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["redirect",{"_index":771,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{}}}],["redirected",{"_index":1138,"title":{},"body":{"components/ClubComponent.html":{}}}],["redirectto",{"_index":772,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/EventRoutingModule.html":{},"components/LoginComponent.html":{}}}],["redirectto(value",{"_index":3112,"title":{},"body":{"components/LoginComponent.html":{}}}],["reduce",{"_index":2490,"title":{},"body":{"injectables/GraphService.html":{}}}],["reduce((prev",{"_index":4733,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["reduce((res",{"_index":1417,"title":{},"body":{"injectables/CommonService.html":{}}}],["reduce((scorecards",{"_index":4569,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["references",{"_index":2491,"title":{},"body":{"injectables/GraphService.html":{}}}],["referred",{"_index":5370,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["reflect",{"_index":5496,"title":{},"body":{"dependencies.html":{}}}],["regards",{"_index":4016,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{}}}],["register",{"_index":519,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MemberSelectorComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":297,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["register.component.html",{"_index":3979,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":3978,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":296,"title":{"components/RegisterComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerform",{"_index":3980,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerlocaledata",{"_index":683,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["registerlocaledata(localeno",{"_index":686,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["registeronchange",{"_index":1280,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["registeronchange(fn",{"_index":1292,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["registerontouched",{"_index":1281,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["registerontouched(fn",{"_index":2033,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["registerred",{"_index":1129,"title":{},"body":{"components/ClubComponent.html":{},"components/MemberSelectorComponent.html":{},"components/RegisterComponent.html":{},"components/TournamentComponent.html":{}}}],["registration",{"_index":4018,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamsComponent.html":{},"components/UserEditorComponent.html":{}}}],["registrationcomplete",{"_index":3981,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registrationcomplete(res",{"_index":3986,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registrations",{"_index":1093,"title":{},"body":{"guards/CanActivateRegistration.html":{}}}],["reject",{"_index":4987,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["relation",{"_index":2742,"title":{},"body":{"interfaces/IJudgeInScoreGroup.html":{}}}],["relative",{"_index":610,"title":{},"body":{"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DialogComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{}}}],["relativeto",{"_index":1141,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/FullscreenComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["relly",{"_index":852,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["reload",{"_index":2644,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["remedies",{"_index":1010,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["removal",{"_index":821,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["remove",{"_index":2123,"title":{},"body":{"components/DivisionsComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{}}}],["remove(media",{"_index":3396,"title":{},"body":{"injectables/MediaService.html":{}}}],["removefromteam",{"_index":3451,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["removefromteam(troop",{"_index":3462,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["removeitem",{"_index":1068,"title":{},"body":{"injectables/BrowserService.html":{},"miscellaneous/variables.html":{}}}],["removejudge",{"_index":4350,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["removejudge(index",{"_index":4362,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["removeurl",{"_index":2977,"title":{},"body":{"injectables/LoadIndicatorService.html":{}}}],["removeurl(type",{"_index":2998,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["renderdisplaytemplates",{"_index":1939,"title":{},"body":{"components/DisplayComponent.html":{}}}],["renderdisplaytemplates(force",{"_index":1945,"title":{},"body":{"components/DisplayComponent.html":{}}}],["renderer",{"_index":1633,"title":{},"body":{"components/ContextMenuComponent.html":{},"directives/ToCaseDirective.html":{}}}],["renderer2",{"_index":1634,"title":{},"body":{"components/ContextMenuComponent.html":{},"directives/ToCaseDirective.html":{}}}],["rent",{"_index":5379,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["rental",{"_index":5290,"title":{},"body":{"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["rentalcost",{"_index":2829,"title":{},"body":{"interfaces/IVenue.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["repeat",{"_index":3744,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["repeat(3",{"_index":4604,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["repeatpassword",{"_index":3940,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["replace",{"_index":1446,"title":{},"body":{"injectables/CommonService.html":{}}}],["replaces",{"_index":2380,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["replaysubject",{"_index":1198,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["replaysubject(1",{"_index":1189,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["report",{"_index":4666,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report'},{'name",{"_index":315,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["report.component",{"_index":2230,"title":{},"body":{"modules/EventModule.html":{},"modules/EventRoutingModule.html":{}}}],["report.component.html",{"_index":4668,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.scss",{"_index":4667,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts",{"_index":4665,"title":{},"body":{"components/SignoffReportComponent.html":{},"coverage.html":{}}}],["report.component.ts:118",{"_index":4681,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:132",{"_index":4683,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:136",{"_index":4697,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:149",{"_index":4690,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:18",{"_index":4700,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:19",{"_index":4701,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:20",{"_index":4699,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:21",{"_index":4698,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:23",{"_index":4703,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:27",{"_index":4705,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:31",{"_index":4706,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:33",{"_index":4679,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:43",{"_index":4694,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:76",{"_index":4695,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:83",{"_index":4688,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:89",{"_index":4686,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report.component.ts:95",{"_index":4693,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["report/signoff",{"_index":2229,"title":{},"body":{"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"components/SignoffReportComponent.html":{},"coverage.html":{}}}],["represent",{"_index":4022,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{}}}],["representative",{"_index":3133,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["representing",{"_index":3255,"title":{},"body":{"components/MediaComponent.html":{}}}],["req",{"_index":854,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpStateService.html":{},"interceptors/UniversalInterceptor.html":{}}}],["req.body",{"_index":939,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.body.extensions",{"_index":969,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.body.extensions.noreport",{"_index":970,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.body.query",{"_index":940,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.body.query.match(/([\\w\\d]+\\([\\w\\s:\\d",{"_index":984,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.body.query.replace(/,.?__typename:.?\"[a",{"_index":943,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":5148,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["req.headers.has('nocache",{"_index":2649,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["req.headers.has('noreport",{"_index":968,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.method",{"_index":2648,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpStateService.html":{}}}],["req.url",{"_index":982,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/HttpStateService.html":{},"interceptors/UniversalInterceptor.html":{}}}],["req.url.startswith",{"_index":5147,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["request",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubLookupComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"interceptors/UniversalInterceptor.html":{},"components/VenueEditorComponent.html":{}}}],["requests",{"_index":828,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/HttpCacheInterceptor.html":{}}}],["required",{"_index":3957,"title":{},"body":{"components/PasswordComponent.html":{}}}],["requires",{"_index":699,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/MyHammerConfig.html":{}}}],["reroute",{"_index":3149,"title":{},"body":{"components/LogoutComponent.html":{}}}],["reroute(err",{"_index":3151,"title":{},"body":{"components/LogoutComponent.html":{}}}],["res",{"_index":125,"title":{},"body":{"components/AdvancedComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfigureDisplayComponent.html":{},"components/FullscreenComponent.html":{},"injectables/HttpStateService.html":{},"components/RegisterComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["res.body",{"_index":967,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["res.body.errors",{"_index":976,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["res.body.errors.length",{"_index":977,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["res.body.errors[0].message",{"_index":978,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["res.data",{"_index":2451,"title":{},"body":{"injectables/GraphService.html":{}}}],["res.data.getclubs",{"_index":1344,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["res.data.publish.publishtime",{"_index":3892,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["res.data.start.starttime",{"_index":3880,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["res.data.stop.endtime",{"_index":3886,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["res.getdisciplines",{"_index":4555,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["res.getdivisions",{"_index":2044,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["res.getgymnasts",{"_index":3617,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["res.getgymnasts.filter(m",{"_index":5119,"title":{},"body":{"components/TroopsComponent.html":{}}}],["res.getgymnasts.length",{"_index":3618,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["res.getjudges",{"_index":4397,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["res.getschedule.map(participant",{"_index":4721,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["res.getschedule.sort((a",{"_index":4556,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["res.getscoregroups",{"_index":4204,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["res.getscores.map(s",{"_index":4205,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["res.gettournaments",{"_index":1515,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["res.gettroops.filter(t",{"_index":3506,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["res.id",{"_index":4007,"title":{},"body":{"components/RegisterComponent.html":{}}}],["res.media",{"_index":3431,"title":{},"body":{"injectables/MediaService.html":{}}}],["res.savedisciplines.foreach(d",{"_index":1910,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["res.savescoregroups",{"_index":4508,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["res.savetournament",{"_index":2897,"title":{},"body":{"components/InfoComponent.html":{}}}],["res.status",{"_index":971,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/HttpStateService.html":{}}}],["res.tournament",{"_index":4717,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["res.type",{"_index":934,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["res.url.indexof(u",{"_index":957,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["res.value",{"_index":1516,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"components/TeamsComponent.html":{}}}],["res.version",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["resembling",{"_index":2679,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["reset",{"_index":364,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"components/MultirangeComponent.html":{},"components/ResetComponent.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"components/TroopsComponent.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{},"overview.html":{}}}],["reset'},{'name",{"_index":299,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["reset.component.html",{"_index":4027,"title":{},"body":{"components/ResetComponent.html":{}}}],["reset.component.scss",{"_index":4026,"title":{},"body":{"components/ResetComponent.html":{}}}],["resetcomponent",{"_index":298,"title":{"components/ResetComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resolve(result.savetroop",{"_index":4995,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["resolves",{"_index":2740,"title":{},"body":{"interfaces/IJudgeInScoreGroup.html":{}}}],["response",{"_index":816,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/UserService.html":{}}}],["response.body",{"_index":5223,"title":{},"body":{"injectables/UserService.html":{}}}],["response.headers",{"_index":5227,"title":{},"body":{"injectables/UserService.html":{}}}],["response.headers.has('authorization",{"_index":5228,"title":{},"body":{"injectables/UserService.html":{}}}],["responsetype",{"_index":147,"title":{},"body":{"components/AdvancedComponent.html":{},"injectables/DisplayService.html":{}}}],["responsible",{"_index":5378,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["rest",{"_index":848,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/UserService.html":{}}}],["restart",{"_index":3385,"title":{},"body":{"injectables/MediaService.html":{}}}],["restrictions",{"_index":3965,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["result",{"_index":345,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AdvancedModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.club.troopcount",{"_index":4978,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["result.name",{"_index":3129,"title":{},"body":{"components/LoginComponent.html":{}}}],["result.results.map(r",{"_index":5338,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["result.savedisciplines",{"_index":1903,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["result.savedivisions",{"_index":2107,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["result.type",{"_index":2657,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["results",{"_index":347,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AdvancedModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results'},{'name",{"_index":301,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["results/results.component",{"_index":2228,"title":{},"body":{"modules/EventModule.html":{},"modules/EventRoutingModule.html":{}}}],["resultscomponent",{"_index":300,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ret",{"_index":3956,"title":{},"body":{"components/PasswordComponent.html":{}}}],["retreive",{"_index":3487,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["retreiving",{"_index":1036,"title":{},"body":{"injectables/BrowserService.html":{}}}],["return",{"_index":110,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionsComponent.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IScoreContainer.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"pipes/UtcDatePipe.html":{},"components/VenueEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["returnfocus",{"_index":2860,"title":{},"body":{"components/InfoComponent.html":{}}}],["returnfocus(start",{"_index":2875,"title":{},"body":{"components/InfoComponent.html":{}}}],["returns",{"_index":58,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["returnval",{"_index":2445,"title":{},"body":{"injectables/GraphService.html":{}}}],["reuse",{"_index":1226,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["reused",{"_index":4439,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["revenue",{"_index":5383,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["rgba($primary",{"_index":2620,"title":{},"body":{"components/HomeComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["rgba($primarydark",{"_index":607,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["rgba($text",{"_index":3379,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["rgba($warning",{"_index":3538,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/TeamsComponent.html":{}}}],["rgba(0",{"_index":588,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(0,0,0,0.1",{"_index":3272,"title":{},"body":{"components/MediaComponent.html":{},"components/SignoffReportComponent.html":{}}}],["rgba(0,0,0,0.35",{"_index":4293,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["rgba(255",{"_index":591,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(black",{"_index":582,"title":{},"body":{"components/AppComponent.html":{},"components/DialogComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["rgba(blue",{"_index":3648,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["rgba(red",{"_index":3650,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["rgba(white",{"_index":540,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(white,0.4",{"_index":2622,"title":{},"body":{"components/HomeComponent.html":{}}}],["right",{"_index":201,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DialogComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["ring",{"_index":3055,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["role",{"_index":1123,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"modules/EventRoutingModule.html":{},"interfaces/IUser.html":{},"directives/IfAuthDirective.html":{},"components/MemberEditorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/RegisterComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"miscellaneous/enumerations.html":{}}}],["role.admin",{"_index":1132,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"interfaces/IUser.html":{},"interfaces/ParticipantCache.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopsComponent.html":{},"components/VenueComponent.html":{},"miscellaneous/variables.html":{}}}],["role.admin.valueof",{"_index":1590,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["role.club",{"_index":2819,"title":{},"body":{"interfaces/IUser.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["role.club.valueof",{"_index":1583,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["role.name",{"_index":5194,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["role.organizer",{"_index":1693,"title":{},"body":{"components/ContextMenuComponent.html":{},"interfaces/IUser.html":{},"interfaces/ParticipantCache.html":{},"components/RegisterComponent.html":{},"components/ScoreEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["role.organizer.valueof",{"_index":1584,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["role.secretariat",{"_index":2818,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/ParticipantCache.html":{},"miscellaneous/variables.html":{}}}],["role.secretariat.valueof",{"_index":2238,"title":{},"body":{"modules/EventRoutingModule.html":{}}}],["role.user",{"_index":2820,"title":{},"body":{"interfaces/IUser.html":{},"components/UserEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["role.user.valueof",{"_index":1596,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["role=\"dialogcontainer",{"_index":1765,"title":{},"body":{"components/DialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["roledata",{"_index":1569,"title":{"interfaces/RoleData.html":{}},"body":{"modules/ConfigureRoutingModule.html":{},"modules/EventRoutingModule.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["roleguard",{"_index":1568,"title":{"guards/RoleGuard.html":{}},"body":{"modules/ConfigureRoutingModule.html":{},"modules/EventRoutingModule.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["rolename",{"_index":5253,"title":{},"body":{"components/UsersComponent.html":{}}}],["rolename(user",{"_index":5257,"title":{},"body":{"components/UsersComponent.html":{}}}],["rolenames",{"_index":2817,"title":{},"body":{"interfaces/IUser.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolenames.filter(r",{"_index":5169,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["rolenames.find(r",{"_index":5262,"title":{},"body":{"components/UsersComponent.html":{}}}],["roles",{"_index":1164,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ContextMenuComponent.html":{},"directives/IfAuthDirective.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreEditorComponent.html":{},"components/UserEditorComponent.html":{}}}],["roles.admin",{"_index":1247,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/UserEditorComponent.html":{}}}],["roles.organizer",{"_index":1707,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["rollback",{"_index":1622,"title":{},"body":{"components/ContextMenuComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreEditorComponent.html":{}}}],["root",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"injectables/DisplayService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GraphService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"injectables/LoadIndicatorService.html":{},"injectables/MediaService.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"injectables/ScheduleService.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":229,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["rotate(0deg",{"_index":3075,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["rotate(360deg",{"_index":3076,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["rotate(45deg",{"_index":2522,"title":{},"body":{"components/HelpBlockComponent.html":{},"components/SaveButtonComponent.html":{}}}],["rounded",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"components/InfoComponent.html":{}}}],["roundtrip",{"_index":5618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":801,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/LoginComponent.html":{},"components/MemberEditorComponent.html":{},"guards/RoleGuard.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["route.data['role",{"_index":4043,"title":{},"body":{"interfaces/RoleData.html":{},"guards/RoleGuard.html":{}}}],["router",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/FullscreenComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MemberEditorComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["routermodule",{"_index":754,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventRoutingModule.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{}}}],["routermodule.forchild(routes",{"_index":1597,"title":{},"body":{"modules/ConfigureRoutingModule.html":{},"modules/EventRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":773,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1085,"title":{},"body":{"guards/CanActivateRegistration.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{}}}],["routes",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/EventRoutingModule.html":{},"injectables/MyHammerConfig.html":{}}}],["routing.module",{"_index":687,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigureModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{}}}],["routing.module.ts",{"_index":753,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/EventRoutingModule.html":{}}}],["row",{"_index":2275,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/TeamsComponent.html":{},"components/TroopsComponent.html":{}}}],["row.hasownproperty('detailrow",{"_index":2276,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["rowindex",{"_index":3905,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["rows",{"_index":2268,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"interfaces/ParticipantCache.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"classes/SubjectSource.html":{}}}],["rows.push(element",{"_index":2270,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["rsaquo",{"_index":1538,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["run",{"_index":2389,"title":{},"body":{"modules/GraphQLModule.html":{},"index.html":{}}}],["runnable",{"_index":3747,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["rxjs",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/ConfigurationService.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpStateService.html":{},"directives/IfAuthDirective.html":{},"injectables/LoadIndicatorService.html":{},"components/LoginComponent.html":{},"injectables/MediaService.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":908,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ClubLookupComponent.html":{},"injectables/GraphService.html":{},"interceptors/HttpCacheInterceptor.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TeamsComponent.html":{},"injectables/UserService.html":{},"components/VenueEditorComponent.html":{}}}],["s",{"_index":1144,"title":{},"body":{"components/ClubComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"injectables/GraphService.html":{},"components/InfoComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{}}}],["s.disciplineid",{"_index":4502,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["s.disciplinename",{"_index":4729,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["s.divisionname",{"_index":4726,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["s.id",{"_index":3896,"title":{},"body":{"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/ScoreSystemComponent.html":{}}}],["s.judgeindex",{"_index":4241,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{}}}],["s.judges",{"_index":4503,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["s.judges.map(j",{"_index":4504,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["s.length",{"_index":2488,"title":{},"body":{"injectables/GraphService.html":{}}}],["s.operation",{"_index":4732,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["s.scoregroup",{"_index":4206,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{}}}],["s.scoregroup.type",{"_index":4747,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["s.scoregroupid",{"_index":4208,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{}}}],["s.type",{"_index":3820,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["s.unsubscribe",{"_index":1145,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubLookupComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{}}}],["safety",{"_index":1042,"title":{},"body":{"injectables/BrowserService.html":{}}}],["same",{"_index":2390,"title":{},"body":{"modules/GraphQLModule.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["sanitizer",{"_index":2538,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["sat",{"_index":3805,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["save",{"_index":33,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpStateService.html":{},"interfaces/IJudgeInScoreGroup.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["save${type",{"_index":2454,"title":{},"body":{"injectables/GraphService.html":{}}}],["save(configuration",{"_index":1457,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["save(keepopen",{"_index":4954,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["savebuttoncomponent",{"_index":302,"title":{"components/SaveButtonComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["saved",{"_index":961,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["savedata",{"_index":2417,"title":{},"body":{"injectables/GraphService.html":{}}}],["savedata(type",{"_index":2444,"title":{},"body":{"injectables/GraphService.html":{}}}],["savedisciplines",{"_index":1824,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["savedivisions",{"_index":2063,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["saveobservable",{"_index":2966,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["saveobservers",{"_index":2967,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["savescoregroups",{"_index":4456,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["savetroop",{"_index":5108,"title":{},"body":{"components/TroopsComponent.html":{}}}],["savetroop(troop",{"_index":5113,"title":{},"body":{"components/TroopsComponent.html":{}}}],["scaffolding",{"_index":5533,"title":{},"body":{"index.html":{}}}],["scale(1",{"_index":3738,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["scale(1.2",{"_index":617,"title":{},"body":{"components/AppComponent.html":{}}}],["schedule",{"_index":1588,"title":{},"body":{"modules/ConfigureRoutingModule.html":{},"components/EventComponent.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"components/MacroDialogComponent.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["schedule'},{'name",{"_index":305,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["schedule.filter(s",{"_index":3819,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["schedule.findindex(s",{"_index":4132,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["schedule.foreach(participant",{"_index":3823,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["schedule/schedule.component",{"_index":4938,"title":{},"body":{"modules/TournamentModule.html":{}}}],["schedule[idx",{"_index":4134,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["schedulecomponent",{"_index":304,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["schedulecount",{"_index":2796,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{}}}],["scheduled",{"_index":3214,"title":{},"body":{"components/MacroDialogComponent.html":{},"components/ScorecardsComponent.html":{}}}],["scheduleexecutiontime",{"_index":129,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["scheduleitem",{"_index":4540,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["scheduleitem.disciplineid",{"_index":4564,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["scheduleitem.disciplinename",{"_index":4590,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["scheduleitem.divisionname",{"_index":4589,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["scheduleitem.startnumber",{"_index":4587,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["scheduleitem.team.name",{"_index":4588,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["schedulequery",{"_index":3787,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["scheduleservice",{"_index":3780,"title":{"injectables/ScheduleService.html":{}},"body":{"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"coverage.html":{}}}],["scheduletrainingtime",{"_index":130,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["scorable",{"_index":2008,"title":{},"body":{"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"interfaces/IDivision.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ParticipantCache.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["score",{"_index":172,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["score(participant",{"_index":3847,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["score(team",{"_index":4769,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["score.judgecount",{"_index":4524,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["score.judgeindex",{"_index":4245,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["score.max",{"_index":4525,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["score.min",{"_index":4526,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["score.name",{"_index":4522,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["score.scoregroup.max",{"_index":4261,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["score.scoregroup.min",{"_index":4260,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["score.type",{"_index":4523,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["score.value",{"_index":4244,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{}}}],["scoreboard",{"_index":2606,"title":{},"body":{"components/HomeComponent.html":{}}}],["scorecards",{"_index":1589,"title":{},"body":{"modules/ConfigureRoutingModule.html":{},"components/ScorecardsComponent.html":{}}}],["scorecards'},{'name",{"_index":307,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["scorecards.component.html",{"_index":4535,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["scorecards.component.scss",{"_index":4534,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["scorecards.find(card",{"_index":4572,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["scorecards.push(this.createcard(judge.judge",{"_index":4577,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["scorecards/scorecards.component",{"_index":4940,"title":{},"body":{"modules/TournamentModule.html":{}}}],["scorecardscomponent",{"_index":306,"title":{"components/ScorecardsComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scorechanged",{"_index":4352,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["scorecontainer",{"_index":2768,"title":{"classes/ScoreContainer.html":{}},"body":{"interfaces/IScoreContainer.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"coverage.html":{}}}],["scorecontainer(group.id",{"_index":4213,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["scoreeditorcomponent",{"_index":308,"title":{"components/ScoreEditorComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scoreform",{"_index":4345,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["scorefromgroupname",{"_index":4676,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["scorefromgroupname(item",{"_index":4755,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["scorefromgroupname(participant",{"_index":4696,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["scoregroup",{"_index":2744,"title":{},"body":{"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{}}}],["scoregroup.judges",{"_index":4570,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["scoregroup.type",{"_index":4575,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["scoregroupeditorcomponent",{"_index":309,"title":{"components/ScoreGroupEditorComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scoregroupid",{"_index":2748,"title":{},"body":{"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{}}}],["scoregrouplist",{"_index":4457,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["scoregrouplistchanged",{"_index":4459,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["scoregroupquery",{"_index":4453,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["scoregroups",{"_index":1909,"title":{},"body":{"components/DisciplinesComponent.html":{},"interfaces/IDiscipline.html":{},"interfaces/IJudge.html":{},"classes/Judge.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/SignoffReportComponent.html":{}}}],["scoregroups.concat",{"_index":1912,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["scoregroups.sort((a",{"_index":4740,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["scorequery",{"_index":4169,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["scores",{"_index":1710,"title":{},"body":{"components/ContextMenuComponent.html":{},"interfaces/IScoreContainer.html":{},"interfaces/ITeamInDiscipline.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["scoresystemcomponent",{"_index":311,"title":{"components/ScoreSystemComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scoresystemmodule",{"_index":361,"title":{"modules/ScoreSystemModule.html":{}},"body":{"modules/AdvancedModule.html":{},"modules/DisciplinesModule.html":{},"modules/ScoreSystemModule.html":{},"modules.html":{},"overview.html":{}}}],["scores{judgeindex,value,scoregroupid",{"_index":4715,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["scoretype",{"_index":4591,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["screens",{"_index":2244,"title":{},"body":{"modules/EventRoutingModule.html":{}}}],["seamlessly",{"_index":5555,"title":{},"body":{"index.html":{}}}],["second",{"_index":3314,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["secretariat",{"_index":2588,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IUser.html":{},"interfaces/ParticipantCache.html":{},"components/ScorecardsComponent.html":{},"interfaces/TournamentType.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["section",{"_index":189,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DivisionsComponent.html":{},"components/InfoComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["section.final",{"_index":4319,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["sections",{"_index":4306,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["security",{"_index":3960,"title":{},"body":{"components/PasswordComponent.html":{}}}],["see",{"_index":1009,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["seems",{"_index":3742,"title":{},"body":{"components/MultirangeComponent.html":{},"index.html":{}}}],["sel",{"_index":2039,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["sel.id",{"_index":2041,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["select",{"_index":1825,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"classes/ExpansionSource.html":{},"components/ScoreSystemComponent.html":{},"components/TroopsComponent.html":{}}}],["select(discipline",{"_index":1854,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["select(division",{"_index":2082,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["select(element",{"_index":2283,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["select(participant",{"_index":3856,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["select(scoregroup",{"_index":4478,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["select(team",{"_index":5036,"title":{},"body":{"components/TroopsComponent.html":{}}}],["selectable:hover",{"_index":3223,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["selected",{"_index":27,"title":{},"body":{"components/AdvancedComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreSystemComponent.html":{},"components/TroopsComponent.html":{}}}],["selected(scoregroup",{"_index":4490,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["selecteddiscipline",{"_index":3796,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["selecteduserid",{"_index":5152,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["selectedvenue",{"_index":5299,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["selection",{"_index":2881,"title":{},"body":{"components/InfoComponent.html":{},"components/MediaComponent.html":{},"components/TroopsComponent.html":{}}}],["selection.end",{"_index":2906,"title":{},"body":{"components/InfoComponent.html":{}}}],["selection.endofline",{"_index":2910,"title":{},"body":{"components/InfoComponent.html":{}}}],["selection.start",{"_index":2904,"title":{},"body":{"components/InfoComponent.html":{}}}],["selection.startofline",{"_index":2908,"title":{},"body":{"components/InfoComponent.html":{}}}],["selectionstate",{"_index":5014,"title":{},"body":{"components/TroopsComponent.html":{}}}],["selectmode",{"_index":5006,"title":{},"body":{"components/TroopsComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["selector'},{'name",{"_index":291,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["selector.component",{"_index":1607,"title":{},"body":{"modules/ConfigureSharedModule.html":{}}}],["selector.component.html",{"_index":3545,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.scss",{"_index":3544,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts",{"_index":3543,"title":{},"body":{"components/MemberSelectorComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["selector.component.ts:102",{"_index":3574,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:115",{"_index":3570,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:120",{"_index":3572,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:19",{"_index":3567,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:20",{"_index":3565,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:21",{"_index":3566,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:22",{"_index":3568,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:24",{"_index":3583,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:26",{"_index":3579,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:27",{"_index":3563,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:33",{"_index":3588,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:35",{"_index":3580,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:36",{"_index":3564,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:42",{"_index":3591,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:45",{"_index":3581,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:46",{"_index":3582,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:47",{"_index":3584,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:48",{"_index":3585,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:50",{"_index":3586,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:52",{"_index":3594,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:56",{"_index":3562,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:62",{"_index":3577,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:66",{"_index":3573,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:75",{"_index":3576,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:79",{"_index":3578,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector.component.ts:83",{"_index":3575,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["selector/member",{"_index":1606,"title":{},"body":{"modules/ConfigureSharedModule.html":{},"components/MemberSelectorComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["selenium",{"_index":5586,"title":{},"body":{"index.html":{}}}],["sent",{"_index":994,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/RegisterComponent.html":{}}}],["seo",{"_index":45,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ClubComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/UsersComponent.html":{}}}],["seoservice",{"_index":46,"title":{"injectables/SEOService.html":{}},"body":{"components/AdvancedComponent.html":{},"components/ClubComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["separate",{"_index":5577,"title":{},"body":{"index.html":{}}}],["served",{"_index":5575,"title":{},"body":{"index.html":{}}}],["server",{"_index":782,"title":{},"body":{"modules/AppServerModule.html":{},"interceptors/AuthInterceptor.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["servermodule",{"_index":781,"title":{},"body":{"modules/AppServerModule.html":{}}}],["serverreq",{"_index":5143,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["serversentevents",{"_index":2381,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["service",{"_index":1035,"title":{},"body":{"injectables/BrowserService.html":{},"index.html":{}}}],["services",{"_index":689,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["services/common.service",{"_index":2691,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["services/logger",{"_index":915,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["serviceworkermodule",{"_index":659,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["serviceworkermodule.register('/ngsw",{"_index":721,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["session",{"_index":5546,"title":{},"body":{"index.html":{}}}],["sessionstorage",{"_index":1047,"title":{},"body":{"injectables/BrowserService.html":{}}}],["set",{"_index":466,"title":{},"body":{"components/AppComponent.html":{},"components/ClubLookupComponent.html":{},"components/DialogComponent.html":{},"components/DisciplinesComponent.html":{},"interceptors/HttpCacheInterceptor.html":{},"directives/IfAuthDirective.html":{},"components/LoginComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"injectables/ScheduleService.html":{},"components/ScoreSystemComponent.html":{},"components/SignoffReportComponent.html":{},"classes/SubjectSource.html":{},"components/TroopEditorComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["set.add(group",{"_index":4720,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["setappifauth(value",{"_index":2845,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["setcanupload(flag",{"_index":3337,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["setclub(v",{"_index":3589,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["setcurrentsort(v",{"_index":4782,"title":{},"body":{"classes/SubjectSource.html":{}}}],["setcurrentuser(value",{"_index":4960,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["setdisabledstate",{"_index":2024,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":2035,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":2049,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["seterror",{"_index":2171,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["seterror(value",{"_index":2176,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["setgymnasts(v",{"_index":3592,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["setinterval",{"_index":3440,"title":{},"body":{"injectables/MediaService.html":{}}}],["setisopen(value",{"_index":1747,"title":{},"body":{"components/DialogComponent.html":{}}}],["setitem",{"_index":1067,"title":{},"body":{"injectables/BrowserService.html":{},"miscellaneous/variables.html":{}}}],["setlang",{"_index":2861,"title":{},"body":{"components/InfoComponent.html":{}}}],["setlang(lng",{"_index":2878,"title":{},"body":{"components/InfoComponent.html":{}}}],["setmedia(media",{"_index":3334,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["setredirectto(value",{"_index":3109,"title":{},"body":{"components/LoginComponent.html":{}}}],["setselected(scoregroup",{"_index":4487,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["setselectedaddress",{"_index":5304,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["setselectedaddress(v",{"_index":5313,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["setselectedclub",{"_index":1168,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["setselectedclub(club",{"_index":1183,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["setselectedjudge",{"_index":4351,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["setselectedjudge($event",{"_index":4364,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["settimeout",{"_index":128,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ErrorDialogComponent.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/MediaControlComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TroopEditorComponent.html":{},"interfaces/UrlActivity.html":{}}}],["settings",{"_index":166,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DisciplinesComponent.html":{},"components/EventComponent.html":{}}}],["settitle",{"_index":4050,"title":{},"body":{"injectables/SEOService.html":{}}}],["settitle(str",{"_index":4055,"title":{},"body":{"injectables/SEOService.html":{}}}],["setup",{"_index":1206,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"index.html":{}}}],["setvalue(v",{"_index":3688,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["setvalue(val",{"_index":1311,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["setvaluehigh(v",{"_index":3697,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["setvaluelow(v",{"_index":3693,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["sg.sortorder",{"_index":4499,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["shadow",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["shared",{"_index":4644,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/browser.service",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["shared/interceptors/auth.interceptor",{"_index":690,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["shared/interceptors/http",{"_index":645,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["shared/interceptors/universal.interceptor",{"_index":788,"title":{},"body":{"modules/AppServerModule.html":{}}}],["shared/services/api",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/services/graph.service",{"_index":5322,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["shared/services/logger",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/shared.module",{"_index":688,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["sharedmodule",{"_index":362,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"injectables/MyHammerConfig.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":614,"title":{},"body":{"components/AppComponent.html":{},"directives/IfAuthDirective.html":{},"interfaces/ParticipantCache.html":{}}}],["showhelp",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["showlabel",{"_index":3289,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["showonauth",{"_index":2847,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["showtraining",{"_index":3790,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["showtraining(v",{"_index":3793,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["side",{"_index":606,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["sidebar",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["signatures",{"_index":4760,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["signoff",{"_index":314,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["signoffreportcomponent",{"_index":313,"title":{"components/SignoffReportComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simplechanges",{"_index":1848,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/MediaControlComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["single",{"_index":4743,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["site",{"_index":562,"title":{},"body":{"components/AppComponent.html":{}}}],["situation",{"_index":1011,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["size",{"_index":510,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureComponent.html":{},"components/ContextMenuComponent.html":{},"components/DisplayComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/InfoComponent.html":{},"components/MacroDialogComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TournamentComponent.html":{},"injectables/UserService.html":{}}}],["sizing",{"_index":3057,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["skew",{"_index":3142,"title":{},"body":{"components/LoginComponent.html":{}}}],["skewy",{"_index":3138,"title":{},"body":{"components/LoginComponent.html":{}}}],["skipwhenexpired",{"_index":737,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["slide",{"_index":3531,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{}}}],["slider",{"_index":3736,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["small",{"_index":1962,"title":{},"body":{"components/DisplayComponent.html":{},"components/EventComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"index.html":{}}}],["snackbar",{"_index":808,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["sneaking",{"_index":5615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snyk",{"_index":5499,"title":{},"body":{"dependencies.html":{}}}],["solid",{"_index":183,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/MediaComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["somebody",{"_index":3962,"title":{},"body":{"components/PasswordComponent.html":{}}}],["something",{"_index":990,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/GraphService.html":{}}}],["sorry",{"_index":4875,"title":{},"body":{"components/TeamsComponent.html":{}}}],["sort",{"_index":2258,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"injectables/MemberStateService.html":{},"classes/SubjectSource.html":{}}}],["sort((a",{"_index":4216,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["sortchanged",{"_index":2294,"title":{},"body":{"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["sortdata",{"_index":2296,"title":{},"body":{"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["sortdata($event",{"_index":2277,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["sorted",{"_index":3207,"title":{},"body":{"components/MacroDialogComponent.html":{},"classes/SubjectSource.html":{},"components/TroopsComponent.html":{}}}],["sortnumber",{"_index":2749,"title":{},"body":{"interfaces/IJudgeInScoreGroup.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["sortorder",{"_index":1794,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IScoreGroup.html":{},"components/ScoreSystemComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AdvancedModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureRoutingModule.html":{},"modules/ConfigureSharedModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"modules/DisciplinesModule.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"modules/DivisionsModule.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"modules/EventModule.html":{},"modules/EventRoutingModule.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"dependencies.html":{}}}],["source.ts",{"_index":2252,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{},"coverage.html":{}}}],["source.ts:10",{"_index":4781,"title":{},"body":{"classes/SubjectSource.html":{}}}],["source.ts:11",{"_index":4774,"title":{},"body":{"classes/SubjectSource.html":{}}}],["source.ts:12",{"_index":2299,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["source.ts:13",{"_index":2319,"title":{},"body":{"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["source.ts:15",{"_index":2298,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["source.ts:17",{"_index":2301,"title":{},"body":{"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["source.ts:21",{"_index":4778,"title":{},"body":{"classes/SubjectSource.html":{}}}],["source.ts:26",{"_index":2308,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["source.ts:30",{"_index":2300,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["source.ts:32",{"_index":2312,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["source.ts:37",{"_index":2306,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["source.ts:40",{"_index":4776,"title":{},"body":{"classes/SubjectSource.html":{}}}],["source.ts:42",{"_index":2311,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["source.ts:47",{"_index":4777,"title":{},"body":{"classes/SubjectSource.html":{}}}],["source.ts:51",{"_index":2310,"title":{},"body":{"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["source.ts:55",{"_index":2307,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["source.ts:59",{"_index":2309,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["source.ts:7",{"_index":4779,"title":{},"body":{"classes/SubjectSource.html":{}}}],["source.ts:9",{"_index":4775,"title":{},"body":{"classes/SubjectSource.html":{}}}],["space",{"_index":2163,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["spacer",{"_index":560,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigureDisplayComponent.html":{}}}],["spacing",{"_index":4623,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["span",{"_index":210,"title":{},"body":{"components/AdvancedComponent.html":{},"components/MacroDialogComponent.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["spans",{"_index":4142,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["specific",{"_index":3017,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"components/MediaComponent.html":{},"interfaces/UrlActivity.html":{}}}],["spinner",{"_index":3024,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"interfaces/UrlActivity.html":{}}}],["spinner.component",{"_index":3013,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"modules/SharedModule.html":{},"interfaces/UrlActivity.html":{}}}],["spinner.component.html",{"_index":3051,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["spinner.component.scss",{"_index":3050,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["spinner.component.ts",{"_index":3047,"title":{},"body":{"components/LoadSpinnerComponent.html":{},"coverage.html":{}}}],["spinner.component.ts:8",{"_index":3052,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["spinner/load",{"_index":2954,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"modules/SharedModule.html":{},"interfaces/UrlActivity.html":{},"coverage.html":{}}}],["split",{"_index":2362,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["splitvalue",{"_index":2862,"title":{},"body":{"components/InfoComponent.html":{}}}],["splitvalue(value",{"_index":2880,"title":{},"body":{"components/InfoComponent.html":{}}}],["sports",{"_index":2590,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["src/.../app.module.ts",{"_index":5526,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../browser.service.ts",{"_index":5606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../classes.ts",{"_index":5506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../divisiontype.ts",{"_index":5507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":5603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":5604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../gender.ts",{"_index":5508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../graphql.module.ts",{"_index":5525,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../http",{"_index":5509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../index.ts",{"_index":5605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../iuser.ts",{"_index":5513,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../member",{"_index":5602,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../operation.ts",{"_index":5511,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../participationtype.ts",{"_index":5512,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../register.component.ts",{"_index":5514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../to",{"_index":5527,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":752,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:102",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:111",{"_index":428,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:120",{"_index":426,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:127",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":429,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":432,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":435,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":437,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":439,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":441,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:58",{"_index":425,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:83",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:93",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":644,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.module.ts:58",{"_index":3758,"title":{},"body":{"injectables/MyHammerConfig.html":{}}}],["src/app/app.server.module.ts",{"_index":780,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/graphql.module.ts",{"_index":2353,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/model/classes.ts",{"_index":5515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/model/divisiontype.ts",{"_index":5518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/model/gender.ts",{"_index":5519,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/model/ibelongstoclub.ts",{"_index":2710,"title":{},"body":{"interfaces/IBelongsToClub.html":{},"coverage.html":{}}}],["src/app/model/iclub.ts",{"_index":2712,"title":{},"body":{"interfaces/IClub.html":{},"coverage.html":{}}}],["src/app/model/iconfiguration.ts",{"_index":2716,"title":{},"body":{"interfaces/IConfiguration.html":{},"coverage.html":{}}}],["src/app/model/icreatedby.ts",{"_index":2718,"title":{},"body":{"interfaces/ICreatedBy.html":{},"coverage.html":{}}}],["src/app/model/idiscipline.ts",{"_index":2721,"title":{},"body":{"interfaces/IDiscipline.html":{},"coverage.html":{}}}],["src/app/model/idivision.ts",{"_index":2724,"title":{},"body":{"interfaces/IDivision.html":{},"coverage.html":{}}}],["src/app/model/igymnast.ts",{"_index":2725,"title":{},"body":{"interfaces/IGymnast.html":{},"coverage.html":{}}}],["src/app/model/ijudge.ts",{"_index":2738,"title":{},"body":{"interfaces/IJudge.html":{},"classes/Judge.html":{},"coverage.html":{}}}],["src/app/model/ijudge.ts:14",{"_index":2949,"title":{},"body":{"classes/Judge.html":{}}}],["src/app/model/ijudge.ts:15",{"_index":2950,"title":{},"body":{"classes/Judge.html":{}}}],["src/app/model/ijudge.ts:16",{"_index":2948,"title":{},"body":{"classes/Judge.html":{}}}],["src/app/model/ijudge.ts:17",{"_index":2951,"title":{},"body":{"classes/Judge.html":{}}}],["src/app/model/ijudge.ts:18",{"_index":2947,"title":{},"body":{"classes/Judge.html":{}}}],["src/app/model/ijudge.ts:19",{"_index":2946,"title":{},"body":{"classes/Judge.html":{}}}],["src/app/model/ijudgeinscoregroup.ts",{"_index":2739,"title":{},"body":{"interfaces/IJudgeInScoreGroup.html":{},"coverage.html":{}}}],["src/app/model/imedia.ts",{"_index":2751,"title":{},"body":{"interfaces/IMedia.html":{},"coverage.html":{}}}],["src/app/model/iscore.ts",{"_index":2760,"title":{},"body":{"interfaces/IScore.html":{},"coverage.html":{}}}],["src/app/model/iscoregroup.ts",{"_index":2774,"title":{},"body":{"interfaces/IScoreGroup.html":{},"coverage.html":{}}}],["src/app/model/iteam.ts",{"_index":2776,"title":{},"body":{"interfaces/ITeam.html":{},"coverage.html":{}}}],["src/app/model/iteamindiscipline.ts",{"_index":2778,"title":{},"body":{"interfaces/ITeamInDiscipline.html":{},"interfaces/TotalByScoreGroup.html":{},"coverage.html":{}}}],["src/app/model/itournament.ts",{"_index":2788,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"coverage.html":{}}}],["src/app/model/itroop.ts",{"_index":2807,"title":{},"body":{"interfaces/ITroop.html":{},"coverage.html":{}}}],["src/app/model/iuser.ts",{"_index":2808,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/model/ivenue.ts",{"_index":2821,"title":{},"body":{"interfaces/IVenue.html":{},"coverage.html":{}}}],["src/app/model/operation.ts",{"_index":5521,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/model/participationtype.ts",{"_index":5522,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/browser.service.ts",{"_index":1033,"title":{},"body":{"injectables/BrowserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/browser.service.ts:17",{"_index":1054,"title":{},"body":{"injectables/BrowserService.html":{}}}],["src/app/shared/browser.service.ts:21",{"_index":1057,"title":{},"body":{"injectables/BrowserService.html":{}}}],["src/app/shared/browser.service.ts:23",{"_index":1051,"title":{},"body":{"injectables/BrowserService.html":{}}}],["src/app/shared/browser.service.ts:27",{"_index":1058,"title":{},"body":{"injectables/BrowserService.html":{}}}],["src/app/shared/browser.service.ts:31",{"_index":1056,"title":{},"body":{"injectables/BrowserService.html":{}}}],["src/app/shared/browser.service.ts:35",{"_index":1059,"title":{},"body":{"injectables/BrowserService.html":{}}}],["src/app/shared/browser.service.ts:39",{"_index":1053,"title":{},"body":{"injectables/BrowserService.html":{}}}],["src/app/shared/components/club",{"_index":1265,"title":{},"body":{"components/ClubLookupComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/dialog/dialog.component.ts",{"_index":1716,"title":{},"body":{"components/DialogComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/dialog/dialog.component.ts:10",{"_index":1744,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/components/dialog/dialog.component.ts:12",{"_index":1731,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/components/dialog/dialog.component.ts:13",{"_index":1746,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/components/dialog/dialog.component.ts:15",{"_index":1734,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/components/dialog/dialog.component.ts:16",{"_index":1730,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/components/dialog/dialog.component.ts:20",{"_index":1741,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/components/dialog/dialog.component.ts:22",{"_index":1743,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/components/dialog/dialog.component.ts:26",{"_index":1740,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/components/dialog/dialog.component.ts:31",{"_index":1742,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/components/dialog/dialog.component.ts:37",{"_index":1738,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/components/dialog/dialog.component.ts:44",{"_index":1736,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/components/dialog/dialog.component.ts:50",{"_index":1739,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/components/dialog/dialog.component.ts:9",{"_index":1732,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/components/error",{"_index":2135,"title":{},"body":{"components/ErrorDialogComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/help",{"_index":2505,"title":{},"body":{"components/HelpBlockComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/load",{"_index":2953,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"components/LoadSpinnerComponent.html":{},"interfaces/UrlActivity.html":{},"coverage.html":{}}}],["src/app/shared/components/media",{"_index":3274,"title":{},"body":{"components/MediaControlComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts",{"_index":3653,"title":{},"body":{"components/MultirangeComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:12",{"_index":3673,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:13",{"_index":3672,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:14",{"_index":3671,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:18",{"_index":3674,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:28",{"_index":3687,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:29",{"_index":3690,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:35",{"_index":3675,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:37",{"_index":3686,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:38",{"_index":3682,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:39",{"_index":3692,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:40",{"_index":3694,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:49",{"_index":3684,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:50",{"_index":3680,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:51",{"_index":3696,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:52",{"_index":3698,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:61",{"_index":3700,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:63",{"_index":3670,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:68",{"_index":3678,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:73",{"_index":3676,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/multirange/multirange.component.ts:89",{"_index":3677,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["src/app/shared/components/save",{"_index":4078,"title":{},"body":{"components/SaveButtonComponent.html":{},"coverage.html":{}}}],["src/app/shared/directives/auth/if",{"_index":2830,"title":{},"body":{"directives/IfAuthDirective.html":{},"coverage.html":{}}}],["src/app/shared/directives/to",{"_index":4878,"title":{},"body":{"directives/ToCaseDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/guards/role",{"_index":4040,"title":{},"body":{"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/app/shared/interceptors/auth.interceptor.ts",{"_index":790,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/interceptors/auth.interceptor.ts:101",{"_index":814,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/shared/interceptors/auth.interceptor.ts:120",{"_index":856,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/shared/interceptors/auth.interceptor.ts:151",{"_index":876,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/shared/interceptors/auth.interceptor.ts:24",{"_index":901,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/shared/interceptors/auth.interceptor.ts:25",{"_index":903,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/shared/interceptors/auth.interceptor.ts:30",{"_index":810,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/shared/interceptors/auth.interceptor.ts:45",{"_index":888,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/shared/interceptors/auth.interceptor.ts:62",{"_index":893,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/shared/interceptors/auth.interceptor.ts:77",{"_index":895,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/shared/interceptors/error",{"_index":2165,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/shared/interceptors/http",{"_index":2629,"title":{},"body":{"interfaces/HttpAction.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/interceptors/universal.interceptor.ts",{"_index":5134,"title":{},"body":{"interceptors/UniversalInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/interceptors/universal.interceptor.ts:11",{"_index":5137,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["src/app/shared/interceptors/universal.interceptor.ts:7",{"_index":5136,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["src/app/shared/pipes/order",{"_index":3761,"title":{},"body":{"pipes/OrderByPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/utc",{"_index":5270,"title":{},"body":{"pipes/UtcDatePipe.html":{},"coverage.html":{}}}],["src/app/shared/services/api/configuration/configuration.service.ts",{"_index":1448,"title":{},"body":{"injectables/ConfigurationService.html":{},"coverage.html":{}}}],["src/app/shared/services/api/configuration/configuration.service.ts:16",{"_index":1452,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["src/app/shared/services/api/configuration/configuration.service.ts:23",{"_index":1456,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["src/app/shared/services/api/configuration/configuration.service.ts:30",{"_index":1458,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["src/app/shared/services/api/configuration/configuration.service.ts:37",{"_index":1454,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["src/app/shared/services/api/configuration/configuration.service.ts:9",{"_index":1451,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["src/app/shared/services/api/display/display.service.ts",{"_index":1965,"title":{},"body":{"injectables/DisplayService.html":{},"coverage.html":{}}}],["src/app/shared/services/api/display/display.service.ts:11",{"_index":1977,"title":{},"body":{"injectables/DisplayService.html":{}}}],["src/app/shared/services/api/display/display.service.ts:17",{"_index":1973,"title":{},"body":{"injectables/DisplayService.html":{}}}],["src/app/shared/services/api/display/display.service.ts:28",{"_index":1976,"title":{},"body":{"injectables/DisplayService.html":{}}}],["src/app/shared/services/api/display/display.service.ts:7",{"_index":1970,"title":{},"body":{"injectables/DisplayService.html":{}}}],["src/app/shared/services/api/schedule/schedule.service.ts",{"_index":4108,"title":{},"body":{"injectables/ScheduleService.html":{},"coverage.html":{}}}],["src/app/shared/services/api/schedule/schedule.service.ts:13",{"_index":4120,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/api/schedule/schedule.service.ts:14",{"_index":4118,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/api/schedule/schedule.service.ts:15",{"_index":4110,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/api/schedule/schedule.service.ts:26",{"_index":4117,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/api/schedule/schedule.service.ts:54",{"_index":4113,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/api/schedule/schedule.service.ts:63",{"_index":4115,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/api/user/user.service.ts",{"_index":5198,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/shared/services/api/user/user.service.ts:13",{"_index":5219,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/api/user/user.service.ts:14",{"_index":5218,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/api/user/user.service.ts:15",{"_index":5205,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/api/user/user.service.ts:23",{"_index":5209,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/api/user/user.service.ts:42",{"_index":5216,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/api/user/user.service.ts:53",{"_index":5207,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/api/user/user.service.ts:68",{"_index":5211,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/api/user/user.service.ts:80",{"_index":5213,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/api/user/user.service.ts:88",{"_index":5214,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/common.service.ts",{"_index":1382,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/app/shared/services/common.service.ts:12",{"_index":1397,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/services/common.service.ts:21",{"_index":1400,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/services/common.service.ts:31",{"_index":1394,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/services/common.service.ts:46",{"_index":1390,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/services/common.service.ts:53",{"_index":1406,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/services/common.service.ts:8",{"_index":1388,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/services/expansion",{"_index":2251,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"coverage.html":{}}}],["src/app/shared/services/graph.service.ts",{"_index":2410,"title":{},"body":{"injectables/GraphService.html":{},"coverage.html":{}}}],["src/app/shared/services/graph.service.ts:123",{"_index":2436,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/app/shared/services/graph.service.ts:14",{"_index":2418,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/app/shared/services/graph.service.ts:17",{"_index":2427,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/app/shared/services/graph.service.ts:21",{"_index":2422,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/app/shared/services/graph.service.ts:26",{"_index":2446,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/app/shared/services/graph.service.ts:31",{"_index":2425,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/app/shared/services/graph.service.ts:37",{"_index":2443,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/app/shared/services/graph.service.ts:53",{"_index":2420,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/app/shared/services/graph.service.ts:69",{"_index":2433,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/app/shared/services/graph.service.ts:76",{"_index":2430,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/app/shared/services/graph.service.ts:83",{"_index":2439,"title":{},"body":{"injectables/GraphService.html":{}}}],["src/app/shared/services/index.ts",{"_index":5432,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/services/logger.ts",{"_index":3077,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{}}}],["src/app/shared/services/logger.ts:10",{"_index":3088,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/shared/services/logger.ts:13",{"_index":3086,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/shared/services/logger.ts:17",{"_index":3082,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/shared/services/logger.ts:4",{"_index":3084,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/shared/services/media.service.ts",{"_index":3380,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["src/app/shared/services/media.service.ts:10",{"_index":3409,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/shared/services/media.service.ts:105",{"_index":3402,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/shared/services/media.service.ts:12",{"_index":3407,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/shared/services/media.service.ts:13",{"_index":3411,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/shared/services/media.service.ts:15",{"_index":3406,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/shared/services/media.service.ts:16",{"_index":3390,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/shared/services/media.service.ts:23",{"_index":3404,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/shared/services/media.service.ts:37",{"_index":3392,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/shared/services/media.service.ts:49",{"_index":3397,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/shared/services/media.service.ts:56",{"_index":3395,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/shared/services/media.service.ts:71",{"_index":3399,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/shared/services/media.service.ts:89",{"_index":3393,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/shared/services/media.service.ts:9",{"_index":3405,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/shared/services/media.service.ts:97",{"_index":3398,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/shared/services/seo.service.ts",{"_index":4048,"title":{},"body":{"injectables/SEOService.html":{},"coverage.html":{}}}],["src/app/shared/services/seo.service.ts:10",{"_index":4056,"title":{},"body":{"injectables/SEOService.html":{}}}],["src/app/shared/services/seo.service.ts:30",{"_index":4054,"title":{},"body":{"injectables/SEOService.html":{}}}],["src/app/shared/services/seo.service.ts:6",{"_index":4052,"title":{},"body":{"injectables/SEOService.html":{}}}],["src/app/shared/services/subject",{"_index":4773,"title":{},"body":{"classes/SubjectSource.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":4643,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/views/configure/_shared/_shared.module.ts",{"_index":1602,"title":{},"body":{"modules/ConfigureSharedModule.html":{}}}],["src/app/views/configure/_shared/division",{"_index":2021,"title":{},"body":{"components/DivisionLookupComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/_shared/member",{"_index":3542,"title":{},"body":{"components/MemberSelectorComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts",{"_index":10,"title":{},"body":{"components/AdvancedComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts:16",{"_index":84,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts:17",{"_index":76,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts:18",{"_index":79,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts:19",{"_index":78,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts:20",{"_index":74,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts:21",{"_index":72,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts:22",{"_index":86,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts:29",{"_index":88,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts:31",{"_index":50,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts:35",{"_index":63,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts:60",{"_index":61,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts:65",{"_index":67,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts:72",{"_index":64,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["src/app/views/configure/advanced/advanced.component.ts:81",{"_index":57,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["src/app/views/configure/advanced/advanced.module.ts",{"_index":366,"title":{},"body":{"modules/AdvancedModule.html":{}}}],["src/app/views/configure/club/club",{"_index":1154,"title":{},"body":{"components/ClubEditorComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/club/club.component.ts",{"_index":1099,"title":{},"body":{"components/ClubComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/club/club.component.ts:17",{"_index":1119,"title":{},"body":{"components/ClubComponent.html":{}}}],["src/app/views/configure/club/club.component.ts:18",{"_index":1120,"title":{},"body":{"components/ClubComponent.html":{}}}],["src/app/views/configure/club/club.component.ts:20",{"_index":1109,"title":{},"body":{"components/ClubComponent.html":{}}}],["src/app/views/configure/club/club.component.ts:30",{"_index":1116,"title":{},"body":{"components/ClubComponent.html":{}}}],["src/app/views/configure/club/club.component.ts:44",{"_index":1115,"title":{},"body":{"components/ClubComponent.html":{}}}],["src/app/views/configure/club/club.component.ts:48",{"_index":1114,"title":{},"body":{"components/ClubComponent.html":{}}}],["src/app/views/configure/club/club.component.ts:53",{"_index":1113,"title":{},"body":{"components/ClubComponent.html":{}}}],["src/app/views/configure/club/club.module.ts",{"_index":1364,"title":{},"body":{"modules/ClubModule.html":{}}}],["src/app/views/configure/club/media/media.component.ts",{"_index":3230,"title":{},"body":{"components/MediaComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/club/media/media.component.ts:15",{"_index":3240,"title":{},"body":{"components/MediaComponent.html":{}}}],["src/app/views/configure/club/media/media.component.ts:16",{"_index":3239,"title":{},"body":{"components/MediaComponent.html":{}}}],["src/app/views/configure/club/media/media.component.ts:17",{"_index":3235,"title":{},"body":{"components/MediaComponent.html":{}}}],["src/app/views/configure/club/media/media.component.ts:23",{"_index":3236,"title":{},"body":{"components/MediaComponent.html":{}}}],["src/app/views/configure/club/media/media.component.ts:29",{"_index":3238,"title":{},"body":{"components/MediaComponent.html":{}}}],["src/app/views/configure/club/members/member",{"_index":3442,"title":{},"body":{"components/MemberEditorComponent.html":{},"injectables/MemberStateService.html":{},"coverage.html":{}}}],["src/app/views/configure/club/members/members.component.ts",{"_index":5437,"title":{},"body":{"coverage.html":{}}}],["src/app/views/configure/club/statistics/statistics.component.ts",{"_index":4761,"title":{},"body":{"components/StatisticsComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/club/statistics/statistics.component.ts:10",{"_index":4765,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/views/configure/club/statistics/statistics.component.ts:13",{"_index":4766,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/views/configure/club/statistics/statistics.component.ts:16",{"_index":4770,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/views/configure/club/statistics/statistics.component.ts:19",{"_index":4768,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/views/configure/club/troops/troop",{"_index":4942,"title":{},"body":{"components/TroopEditorComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts",{"_index":5000,"title":{},"body":{"components/TroopsComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:103",{"_index":5037,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:112",{"_index":5025,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:154",{"_index":5033,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:165",{"_index":5027,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:169",{"_index":5038,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:175",{"_index":5041,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:180",{"_index":5039,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:189",{"_index":5022,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:29",{"_index":5044,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:30",{"_index":5052,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:33",{"_index":5045,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:35",{"_index":5051,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:36",{"_index":5054,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:37",{"_index":5056,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:38",{"_index":5048,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:40",{"_index":5050,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:41",{"_index":5049,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:42",{"_index":5043,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:43",{"_index":5042,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:45",{"_index":5057,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:47",{"_index":5018,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:58",{"_index":5031,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:65",{"_index":5028,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:69",{"_index":5035,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:73",{"_index":5021,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:82",{"_index":5024,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:93",{"_index":5030,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/club/troops/troops.component.ts:97",{"_index":5019,"title":{},"body":{"components/TroopsComponent.html":{}}}],["src/app/views/configure/configure",{"_index":1566,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["src/app/views/configure/configure.component.ts",{"_index":1464,"title":{},"body":{"components/ConfigureComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/configure.component.ts:12",{"_index":1468,"title":{},"body":{"components/ConfigureComponent.html":{}}}],["src/app/views/configure/configure.component.ts:8",{"_index":1467,"title":{},"body":{"components/ConfigureComponent.html":{}}}],["src/app/views/configure/configure.module.ts",{"_index":1551,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["src/app/views/configure/display/configure",{"_index":1480,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/display/macro",{"_index":3161,"title":{},"body":{"components/MacroDialogComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/tournament/awards/awards.component.ts",{"_index":1025,"title":{},"body":{"components/AwardsComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/tournament/awards/awards.component.ts:12",{"_index":1030,"title":{},"body":{"components/AwardsComponent.html":{}}}],["src/app/views/configure/tournament/awards/awards.component.ts:8",{"_index":1029,"title":{},"body":{"components/AwardsComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/discipline",{"_index":1770,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts",{"_index":1809,"title":{},"body":{"components/DisciplinesComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:103",{"_index":1838,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:120",{"_index":1836,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:143",{"_index":1842,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:149",{"_index":1852,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:159",{"_index":1855,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:164",{"_index":1835,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:19",{"_index":1833,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:20",{"_index":1832,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:21",{"_index":1834,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:23",{"_index":1860,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:31",{"_index":1858,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:32",{"_index":1856,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:33",{"_index":1861,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:35",{"_index":1862,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:37",{"_index":1864,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:41",{"_index":1831,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:49",{"_index":1851,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:60",{"_index":1849,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:64",{"_index":1841,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:70",{"_index":1850,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:74",{"_index":1844,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:85",{"_index":1845,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.component.ts:93",{"_index":1853,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["src/app/views/configure/tournament/disciplines/disciplines.module.ts",{"_index":1936,"title":{},"body":{"modules/DisciplinesModule.html":{}}}],["src/app/views/configure/tournament/divisions/division",{"_index":1983,"title":{},"body":{"components/DivisionEditorComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts",{"_index":2053,"title":{},"body":{"components/DivisionsComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:105",{"_index":2070,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:115",{"_index":2075,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:122",{"_index":2083,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:129",{"_index":2080,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:156",{"_index":2069,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:17",{"_index":2086,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:27",{"_index":2067,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:28",{"_index":2066,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:29",{"_index":2090,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:32",{"_index":2068,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:33",{"_index":2084,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:34",{"_index":2087,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:35",{"_index":2085,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:36",{"_index":2089,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:37",{"_index":2088,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:39",{"_index":2091,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:41",{"_index":2065,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:48",{"_index":2079,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:57",{"_index":2077,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:63",{"_index":2078,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:67",{"_index":2074,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:73",{"_index":2081,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:83",{"_index":2076,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:92",{"_index":2073,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.component.ts:98",{"_index":2071,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/views/configure/tournament/divisions/divisions.module.ts",{"_index":2134,"title":{},"body":{"modules/DivisionsModule.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts",{"_index":2852,"title":{},"body":{"components/InfoComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:106",{"_index":2885,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:118",{"_index":2867,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:14",{"_index":2890,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:15",{"_index":2887,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:16",{"_index":2889,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:17",{"_index":2888,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:18",{"_index":2865,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:24",{"_index":2874,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:33",{"_index":2877,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:46",{"_index":2872,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:51",{"_index":2879,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:60",{"_index":2882,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:72",{"_index":2869,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:86",{"_index":2876,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:91",{"_index":2868,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/info/info.component.ts:98",{"_index":2873,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/views/configure/tournament/schedule/schedule.component.ts",{"_index":5440,"title":{},"body":{"coverage.html":{}}}],["src/app/views/configure/tournament/score",{"_index":4340,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"coverage.html":{}}}],["src/app/views/configure/tournament/scorecards/scorecards.component.ts",{"_index":4533,"title":{},"body":{"components/ScorecardsComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/tournament/scorecards/scorecards.component.ts:116",{"_index":4541,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["src/app/views/configure/tournament/scorecards/scorecards.component.ts:18",{"_index":4551,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["src/app/views/configure/tournament/scorecards/scorecards.component.ts:19",{"_index":4550,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["src/app/views/configure/tournament/scorecards/scorecards.component.ts:20",{"_index":4549,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["src/app/views/configure/tournament/scorecards/scorecards.component.ts:21",{"_index":4538,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["src/app/views/configure/tournament/scorecards/scorecards.component.ts:31",{"_index":4547,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["src/app/views/configure/tournament/scorecards/scorecards.component.ts:59",{"_index":4546,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["src/app/views/configure/tournament/scorecards/scorecards.component.ts:65",{"_index":4548,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["src/app/views/configure/tournament/scorecards/scorecards.component.ts:76",{"_index":4544,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["src/app/views/configure/tournament/teams/team",{"_index":5445,"title":{},"body":{"coverage.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts",{"_index":4801,"title":{},"body":{"components/TeamsComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:111",{"_index":4827,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:116",{"_index":4821,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:133",{"_index":4816,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:137",{"_index":4829,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:153",{"_index":4822,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:159",{"_index":4819,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:166",{"_index":4817,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:171",{"_index":4815,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:26",{"_index":4830,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:27",{"_index":4836,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:28",{"_index":4833,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:30",{"_index":4835,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:31",{"_index":4831,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:33",{"_index":4832,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:35",{"_index":4834,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:37",{"_index":4838,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:48",{"_index":4840,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:57",{"_index":4842,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:62",{"_index":4814,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:74",{"_index":4825,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:89",{"_index":4824,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/teams/teams.component.ts:93",{"_index":4823,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/views/configure/tournament/tournament",{"_index":5448,"title":{},"body":{"coverage.html":{}}}],["src/app/views/configure/tournament/tournament.component.ts",{"_index":4906,"title":{},"body":{"components/TournamentComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/tournament/tournament.component.ts:17",{"_index":4914,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/views/configure/tournament/tournament.component.ts:18",{"_index":4910,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/views/configure/tournament/tournament.component.ts:28",{"_index":4912,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/views/configure/tournament/tournament.component.ts:49",{"_index":4911,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/views/configure/tournament/tournament.module.ts",{"_index":4931,"title":{},"body":{"modules/TournamentModule.html":{}}}],["src/app/views/configure/users/password/password.component.ts",{"_index":3923,"title":{},"body":{"components/PasswordComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/users/password/password.component.ts:12",{"_index":3927,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/views/configure/users/password/password.component.ts:14",{"_index":3934,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/views/configure/users/password/password.component.ts:16",{"_index":3932,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/views/configure/users/password/password.component.ts:28",{"_index":3930,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/views/configure/users/password/password.component.ts:36",{"_index":3933,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/views/configure/users/password/password.component.ts:43",{"_index":3929,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/views/configure/users/password/password.component.ts:48",{"_index":3928,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/views/configure/users/user",{"_index":5150,"title":{},"body":{"components/UserEditorComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/users/users.component.ts",{"_index":5249,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/users/users.component.ts:17",{"_index":5259,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/views/configure/users/users.component.ts:18",{"_index":5254,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/views/configure/users/users.component.ts:28",{"_index":5256,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/views/configure/users/users.component.ts:33",{"_index":5258,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/views/configure/users/users.component.ts:38",{"_index":5255,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/views/configure/users/users.module.ts",{"_index":5268,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/app/views/configure/venue/venue",{"_index":5296,"title":{},"body":{"components/VenueEditorComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/venue/venue.component.ts",{"_index":5277,"title":{},"body":{"components/VenueComponent.html":{},"coverage.html":{}}}],["src/app/views/configure/venue/venue.component.ts:16",{"_index":5284,"title":{},"body":{"components/VenueComponent.html":{}}}],["src/app/views/configure/venue/venue.component.ts:17",{"_index":5281,"title":{},"body":{"components/VenueComponent.html":{}}}],["src/app/views/configure/venue/venue.component.ts:25",{"_index":5283,"title":{},"body":{"components/VenueComponent.html":{}}}],["src/app/views/configure/venue/venue.component.ts:31",{"_index":5282,"title":{},"body":{"components/VenueComponent.html":{}}}],["src/app/views/configure/venue/venue.module.ts",{"_index":5391,"title":{},"body":{"modules/VenueModule.html":{}}}],["src/app/views/event/display/display.component.ts",{"_index":1938,"title":{},"body":{"components/DisplayComponent.html":{},"coverage.html":{}}}],["src/app/views/event/display/display.component.ts:15",{"_index":1948,"title":{},"body":{"components/DisplayComponent.html":{}}}],["src/app/views/event/display/display.component.ts:17",{"_index":1941,"title":{},"body":{"components/DisplayComponent.html":{}}}],["src/app/views/event/display/display.component.ts:25",{"_index":1944,"title":{},"body":{"components/DisplayComponent.html":{}}}],["src/app/views/event/display/display.component.ts:32",{"_index":1946,"title":{},"body":{"components/DisplayComponent.html":{}}}],["src/app/views/event/display/display.component.ts:39",{"_index":1943,"title":{},"body":{"components/DisplayComponent.html":{}}}],["src/app/views/event/display/fullscreen/fullscreen.component.ts",{"_index":2320,"title":{},"body":{"components/FullscreenComponent.html":{},"coverage.html":{}}}],["src/app/views/event/display/fullscreen/fullscreen.component.ts:15",{"_index":2336,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["src/app/views/event/display/fullscreen/fullscreen.component.ts:17",{"_index":2335,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["src/app/views/event/display/fullscreen/fullscreen.component.ts:18",{"_index":2327,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["src/app/views/event/display/fullscreen/fullscreen.component.ts:28",{"_index":2334,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["src/app/views/event/display/fullscreen/fullscreen.component.ts:46",{"_index":2332,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["src/app/views/event/display/fullscreen/fullscreen.component.ts:51",{"_index":2333,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["src/app/views/event/display/fullscreen/fullscreen.component.ts:56",{"_index":2330,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["src/app/views/event/event",{"_index":2237,"title":{},"body":{"modules/EventRoutingModule.html":{}}}],["src/app/views/event/event.component.ts",{"_index":2191,"title":{},"body":{"components/EventComponent.html":{},"coverage.html":{}}}],["src/app/views/event/event.component.ts:16",{"_index":2201,"title":{},"body":{"components/EventComponent.html":{}}}],["src/app/views/event/event.component.ts:23",{"_index":2203,"title":{},"body":{"components/EventComponent.html":{}}}],["src/app/views/event/event.component.ts:24",{"_index":2202,"title":{},"body":{"components/EventComponent.html":{}}}],["src/app/views/event/event.component.ts:25",{"_index":2195,"title":{},"body":{"components/EventComponent.html":{}}}],["src/app/views/event/event.component.ts:29",{"_index":2197,"title":{},"body":{"components/EventComponent.html":{}}}],["src/app/views/event/event.component.ts:39",{"_index":2196,"title":{},"body":{"components/EventComponent.html":{}}}],["src/app/views/event/event.module.ts",{"_index":2221,"title":{},"body":{"modules/EventModule.html":{}}}],["src/app/views/event/list/context",{"_index":1611,"title":{},"body":{"components/ContextMenuComponent.html":{},"coverage.html":{}}}],["src/app/views/event/list/iscorecontainer.ts",{"_index":2765,"title":{},"body":{"interfaces/IScoreContainer.html":{},"classes/ScoreContainer.html":{},"coverage.html":{}}}],["src/app/views/event/list/iscorecontainer.ts:13",{"_index":4164,"title":{},"body":{"classes/ScoreContainer.html":{}}}],["src/app/views/event/list/iscorecontainer.ts:16",{"_index":4166,"title":{},"body":{"classes/ScoreContainer.html":{}}}],["src/app/views/event/list/iscorecontainer.ts:18",{"_index":4161,"title":{},"body":{"classes/ScoreContainer.html":{}}}],["src/app/views/event/list/iscorecontainer.ts:19",{"_index":4162,"title":{},"body":{"classes/ScoreContainer.html":{}}}],["src/app/views/event/list/list.component.ts",{"_index":3776,"title":{},"body":{"interfaces/ParticipantCache.html":{},"coverage.html":{}}}],["src/app/views/event/list/score",{"_index":4167,"title":{},"body":{"components/ScoreEditorComponent.html":{},"coverage.html":{}}}],["src/app/views/event/results/results.component.ts",{"_index":5451,"title":{},"body":{"coverage.html":{}}}],["src/app/views/event/signoff",{"_index":4664,"title":{},"body":{"components/SignoffReportComponent.html":{},"coverage.html":{}}}],["src/app/views/home/home.component.ts",{"_index":2524,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{},"coverage.html":{}}}],["src/app/views/home/home.component.ts:20",{"_index":2555,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/home.component.ts:32",{"_index":2549,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/home.component.ts:33",{"_index":2550,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/home.component.ts:36",{"_index":2548,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/home.component.ts:37",{"_index":2557,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/home.component.ts:39",{"_index":2559,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/home.component.ts:40",{"_index":2561,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/home.component.ts:44",{"_index":2563,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/home.component.ts:48",{"_index":2565,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/home.component.ts:50",{"_index":2537,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/home.component.ts:59",{"_index":2546,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/home.component.ts:77",{"_index":2545,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/home.component.ts:79",{"_index":2544,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/home.component.ts:83",{"_index":2542,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/home.component.ts:87",{"_index":2540,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/views/home/login/login.component.ts",{"_index":3094,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/views/home/login/login.component.ts:19",{"_index":3106,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/home/login/login.component.ts:20",{"_index":3105,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/home/login/login.component.ts:21",{"_index":3108,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/home/login/login.component.ts:22",{"_index":3110,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/home/login/login.component.ts:25",{"_index":3101,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/home/login/login.component.ts:37",{"_index":3104,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/home/login/login.component.ts:51",{"_index":3103,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/home/login/login.component.ts:55",{"_index":3102,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/home/logout/logout.component.ts",{"_index":3146,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/views/home/logout/logout.component.ts:14",{"_index":3150,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/views/home/logout/logout.component.ts:34",{"_index":3152,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/views/home/register/register.component.ts",{"_index":3977,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/views/home/register/register.component.ts:23",{"_index":3988,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/views/home/register/register.component.ts:24",{"_index":3989,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/views/home/register/register.component.ts:26",{"_index":3991,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/views/home/register/register.component.ts:27",{"_index":3992,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/views/home/register/register.component.ts:29",{"_index":3983,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/views/home/register/register.component.ts:39",{"_index":3984,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/views/home/register/register.component.ts:57",{"_index":3985,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/views/home/register/register.component.ts:70",{"_index":3987,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/views/home/register/registration",{"_index":1079,"title":{},"body":{"guards/CanActivateRegistration.html":{},"coverage.html":{}}}],["src/app/views/home/reset/reset.component.ts",{"_index":4025,"title":{},"body":{"components/ResetComponent.html":{},"coverage.html":{}}}],["src/app/views/home/reset/reset.component.ts:14",{"_index":4028,"title":{},"body":{"components/ResetComponent.html":{}}}],["src/app/views/home/reset/reset.component.ts:18",{"_index":4030,"title":{},"body":{"components/ResetComponent.html":{}}}],["src/app/views/home/reset/reset.component.ts:32",{"_index":4029,"title":{},"body":{"components/ResetComponent.html":{}}}],["src/app/views/home/reset/reset.component.ts:40",{"_index":4031,"title":{},"body":{"components/ResetComponent.html":{}}}],["src/environments/environment",{"_index":1088,"title":{},"body":{"guards/CanActivateRegistration.html":{}}}],["src/environments/environment.prod.ts",{"_index":5453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":5454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":2177,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["stand",{"_index":3304,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["standalone",{"_index":1775,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["standard",{"_index":5243,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":1426,"title":{},"body":{"injectables/CommonService.html":{},"components/ContextMenuComponent.html":{},"components/InfoComponent.html":{},"components/MacroDialogComponent.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"index.html":{}}}],["start(participant",{"_index":3869,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["start).lastindexof('\\n",{"_index":2915,"title":{},"body":{"components/InfoComponent.html":{}}}],["start.format('mmm",{"_index":1433,"title":{},"body":{"injectables/CommonService.html":{}}}],["startcase",{"_index":1199,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["startcase(divisionmatch.name",{"_index":5089,"title":{},"body":{"components/TroopsComponent.html":{}}}],["startcase(lowercase(name",{"_index":1205,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["startdate",{"_index":2199,"title":{},"body":{"components/EventComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{}}}],["started",{"_index":3862,"title":{"index.html":{}},"body":{"interfaces/ParticipantCache.html":{},"components/TeamsComponent.html":{}}}],["startno",{"_index":4542,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["startnumber",{"_index":2785,"title":{},"body":{"interfaces/ITeamInDiscipline.html":{},"components/MacroDialogComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["startofline",{"_index":2870,"title":{},"body":{"components/InfoComponent.html":{}}}],["starts",{"_index":5549,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":2786,"title":{},"body":{"interfaces/ITeamInDiscipline.html":{},"components/MacroDialogComponent.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/SignoffReportComponent.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["starttime(participant",{"_index":3838,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["starttime(tournament",{"_index":4116,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["state",{"_index":805,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"guards/CanActivateRegistration.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"components/TroopsComponent.html":{}}}],["state('collapsed",{"_index":5063,"title":{},"body":{"components/TroopsComponent.html":{}}}],["state('expanded",{"_index":5066,"title":{},"body":{"components/TroopsComponent.html":{}}}],["state.service",{"_index":913,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"modules/ClubModule.html":{},"components/SaveButtonComponent.html":{}}}],["state.service.ts",{"_index":2684,"title":{},"body":{"injectables/HttpStateService.html":{},"injectables/MemberStateService.html":{},"coverage.html":{}}}],["state.service.ts:17",{"_index":2686,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["state.service.ts:21",{"_index":2688,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["state.service.ts:6",{"_index":3651,"title":{},"body":{"injectables/MemberStateService.html":{}}}],["state.url",{"_index":4045,"title":{},"body":{"interfaces/RoleData.html":{},"guards/RoleGuard.html":{}}}],["statements",{"_index":5395,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":83,"title":{},"body":{"components/AdvancedComponent.html":{},"injectables/BrowserService.html":{},"injectables/CommonService.html":{},"components/DivisionsComponent.html":{},"components/InfoComponent.html":{},"classes/Logger.html":{},"components/MultirangeComponent.html":{}}}],["statistics",{"_index":1257,"title":{},"body":{"components/ClubEditorComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/StatisticsComponent.html":{}}}],["statistics'},{'name",{"_index":317,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["statistics.component.html",{"_index":4763,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statistics.component.scss",{"_index":4762,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statistics/statistics.component",{"_index":1375,"title":{},"body":{"modules/ClubModule.html":{}}}],["statisticscomponent",{"_index":316,"title":{"components/StatisticsComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["status",{"_index":863,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["step",{"_index":2139,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["sticky",{"_index":2213,"title":{},"body":{"components/EventComponent.html":{}}}],["still",{"_index":3265,"title":{},"body":{"components/MediaComponent.html":{},"index.html":{}}}],["stop",{"_index":1623,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"interfaces/ParticipantCache.html":{}}}],["stop(participant",{"_index":3882,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["stop1",{"_index":553,"title":{},"body":{"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["stop2",{"_index":1476,"title":{},"body":{"components/ConfigureComponent.html":{},"components/HomeComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["storage",{"_index":1055,"title":{},"body":{"injectables/BrowserService.html":{}}}],["storagemock",{"_index":1063,"title":{},"body":{"injectables/BrowserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":4435,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{},"injectables/UserService.html":{}}}],["str",{"_index":1391,"title":{},"body":{"injectables/CommonService.html":{},"injectables/GraphService.html":{},"injectables/SEOService.html":{}}}],["str.length",{"_index":2484,"title":{},"body":{"injectables/GraphService.html":{}}}],["str.replace",{"_index":1440,"title":{},"body":{"injectables/CommonService.html":{}}}],["stretch",{"_index":4295,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["string",{"_index":108,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/BrowserService.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureDisplayComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IMedia.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"injectables/ScheduleService.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/SignoffReportComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TotalByScoreGroup.html":{},"interfaces/TournamentType.html":{},"components/TroopsComponent.html":{},"interfaces/UrlActivity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["stringhash",{"_index":1387,"title":{},"body":{"injectables/CommonService.html":{}}}],["stringhash(participant",{"_index":1402,"title":{},"body":{"injectables/CommonService.html":{}}}],["striptypenames",{"_index":797,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["striptypenames(req",{"_index":892,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["structure",{"_index":5579,"title":{},"body":{"index.html":{}}}],["style",{"_index":565,"title":{},"body":{"components/AppComponent.html":{},"components/HelpBlockComponent.html":{},"components/MacroDialogComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/TournamentComponent.html":{},"components/TroopsComponent.html":{}}}],["styleable",{"_index":3743,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["styles/form",{"_index":3730,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["styles/panel",{"_index":1258,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DialogComponent.html":{},"components/LoginComponent.html":{}}}],["styles/variables",{"_index":175,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DialogComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/EventComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopsComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["sub",{"_index":4627,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["subheader",{"_index":2618,"title":{},"body":{"components/HomeComponent.html":{}}}],["subject",{"_index":860,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"injectables/HttpStateService.html":{},"injectables/LoadIndicatorService.html":{},"classes/SubjectSource.html":{},"interfaces/UrlActivity.html":{}}}],["subject.create((observer",{"_index":3045,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["subjectsource",{"_index":1124,"title":{"classes/SubjectSource.html":{}},"body":{"components/ClubComponent.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopsComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"coverage.html":{}}}],["subjectsource(new",{"_index":1117,"title":{},"body":{"components/ClubComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopsComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{}}}],["subjectsource:13",{"_index":2305,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["subjectsource:17",{"_index":2314,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["subjectsource:21",{"_index":2317,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["subjectsource:40",{"_index":2313,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["subjectsource:47",{"_index":2316,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["subjectsource:51",{"_index":2315,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["subjectsource:9",{"_index":2304,"title":{},"body":{"classes/ExpansionSource.html":{}}}],["submit",{"_index":4088,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["subscribe",{"_index":3816,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["subscribe((result",{"_index":5336,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["subscribe(data",{"_index":4921,"title":{},"body":{"components/TournamentComponent.html":{}}}],["subscribe(res",{"_index":149,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureDisplayComponent.html":{},"injectables/GraphService.html":{},"components/MemberSelectorComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{}}}],["subscribe(v",{"_index":1336,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/VenueEditorComponent.html":{}}}],["subscribers",{"_index":3015,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["subscribing",{"_index":3046,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["subscription",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/ClubComponent.html":{},"components/ClubLookupComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"directives/IfAuthDirective.html":{},"components/LoginComponent.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["subscriptionoptions",{"_index":2432,"title":{},"body":{"injectables/GraphService.html":{}}}],["subscriptions",{"_index":1103,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubLookupComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/ParticipantCache.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{},"dependencies.html":{}}}],["subtraction",{"_index":4446,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["subtracts",{"_index":4354,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["success",{"_index":949,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/SaveButtonComponent.html":{},"components/UserEditorComponent.html":{}}}],["success']).subscribe",{"_index":4101,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["successful",{"_index":946,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["suggest",{"_index":3967,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["summary",{"_index":4062,"title":{},"body":{"injectables/SEOService.html":{},"components/ScorecardsComponent.html":{}}}],["sun']).subscribe",{"_index":3806,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["super",{"_index":4787,"title":{},"body":{"classes/SubjectSource.html":{}}}],["super(element",{"_index":3181,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["super(renderer",{"_index":4896,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["super(subject",{"_index":2266,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["super.add(element",{"_index":2282,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["super.closedialog",{"_index":3219,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["super.sortdata($event",{"_index":2280,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["super.writevalue(transformed",{"_index":4898,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["support",{"_index":5593,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1471,"title":{},"body":{"components/ConfigureComponent.html":{}}}],["supposed",{"_index":1006,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["sure",{"_index":2592,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/SaveButtonComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopsComponent.html":{}}}],["svg",{"_index":5594,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2116,"title":{},"body":{"components/DivisionsComponent.html":{},"injectables/HttpStateService.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/UrlActivity.html":{}}}],["swupdate",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["system",{"_index":116,"title":{},"body":{"components/AdvancedComponent.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreSystemComponent.html":{},"interfaces/TournamentType.html":{},"components/UserEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["system'},{'name",{"_index":312,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["system.component",{"_index":4532,"title":{},"body":{"modules/ScoreSystemModule.html":{}}}],["system.component.html",{"_index":4451,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.scss",{"_index":4450,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts",{"_index":4449,"title":{},"body":{"components/ScoreSystemComponent.html":{},"coverage.html":{}}}],["system.component.ts:104",{"_index":4467,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:115",{"_index":4470,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:122",{"_index":4476,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:132",{"_index":4479,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:137",{"_index":4466,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:16",{"_index":4461,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:17",{"_index":4463,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:18",{"_index":4464,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:19",{"_index":4462,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:20",{"_index":4465,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:21",{"_index":4483,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:33",{"_index":4484,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:35",{"_index":4481,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:37",{"_index":4480,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:38",{"_index":4486,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:39",{"_index":4488,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:43",{"_index":4460,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:47",{"_index":4474,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:56",{"_index":4472,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:60",{"_index":4473,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:64",{"_index":4469,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:70",{"_index":4477,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:85",{"_index":4471,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.component.ts:94",{"_index":4468,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["system.module",{"_index":385,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/DisciplinesModule.html":{}}}],["system.module.ts",{"_index":4531,"title":{},"body":{"modules/ScoreSystemModule.html":{}}}],["system/score",{"_index":384,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/DisciplinesModule.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"modules/ScoreSystemModule.html":{},"coverage.html":{}}}],["t",{"_index":2255,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"classes/SubjectSource.html":{}}}],["t.enddate",{"_index":2602,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["t.id",{"_index":3509,"title":{},"body":{"components/MemberEditorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/TroopsComponent.html":{}}}],["t.name",{"_index":2574,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["t.name).join",{"_index":4593,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["t.startdate",{"_index":2604,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["t.tournaments.length",{"_index":2571,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["tab",{"_index":204,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["table",{"_index":535,"title":{},"body":{"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/EventComponent.html":{},"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{},"coverage.html":{}}}],["table[role=\"list",{"_index":4291,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5455,"title":{},"body":{"coverage.html":{}}}],["tabout",{"_index":1282,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/VenueEditorComponent.html":{}}}],["tabout(typeahead",{"_index":1296,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/VenueEditorComponent.html":{}}}],["tag",{"_index":2448,"title":{},"body":{"injectables/GraphService.html":{},"dependencies.html":{}}}],["tags",{"_index":2583,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["take",{"_index":877,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["takenslots",{"_index":4812,"title":{},"body":{"components/TeamsComponent.html":{}}}],["taking",{"_index":3963,"title":{},"body":{"components/PasswordComponent.html":{}}}],["tap",{"_index":907,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["tap(res",{"_index":933,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["tbody[role=\"listitem",{"_index":4292,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["td",{"_index":1262,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/MediaComponent.html":{},"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{}}}],["td.actions",{"_index":4304,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["td.discipline",{"_index":4297,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["td.division",{"_index":4299,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["td.score",{"_index":4296,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["td.start",{"_index":4302,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["td.team",{"_index":4300,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["team",{"_index":319,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/IGymnast.html":{},"interfaces/IMedia.html":{},"interfaces/ITeamInDiscipline.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["team.class",{"_index":4862,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team.club.id",{"_index":4869,"title":{},"body":{"components/TeamsComponent.html":{},"components/TroopsComponent.html":{}}}],["team.club.name",{"_index":4874,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team.disciplines",{"_index":4864,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team.disciplines.length",{"_index":4861,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team.divisionname",{"_index":4873,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team.gymnasts",{"_index":5098,"title":{},"body":{"components/TroopsComponent.html":{}}}],["team.gymnasts.every(g",{"_index":5090,"title":{},"body":{"components/TroopsComponent.html":{}}}],["team.gymnasts.length",{"_index":5093,"title":{},"body":{"components/TroopsComponent.html":{}}}],["team.gymnasts.map(g",{"_index":5080,"title":{},"body":{"components/TroopsComponent.html":{}}}],["team.gymnasts[0].gender",{"_index":5092,"title":{},"body":{"components/TroopsComponent.html":{}}}],["team.id",{"_index":5100,"title":{},"body":{"components/TroopsComponent.html":{}}}],["team.media.find(m",{"_index":4866,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team.name",{"_index":3213,"title":{},"body":{"components/MacroDialogComponent.html":{},"components/TeamsComponent.html":{},"components/TroopsComponent.html":{}}}],["team.team.name",{"_index":4772,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["team.tournament.name",{"_index":4771,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["teamcount",{"_index":5017,"title":{},"body":{"components/TroopsComponent.html":{}}}],["teamcounter",{"_index":4969,"title":{},"body":{"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["teameditorcomponent",{"_index":318,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamgym",{"_index":5516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["teamid",{"_index":2758,"title":{},"body":{"interfaces/IMedia.html":{},"interfaces/ITeamInDiscipline.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["teamlist",{"_index":4764,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["teams",{"_index":1254,"title":{},"body":{"components/ClubEditorComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"interfaces/IClub.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"components/LoginComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsComponent.html":{},"modules/TournamentModule.html":{},"components/TroopsComponent.html":{}}}],["teams'},{'name",{"_index":321,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["teams.component.html",{"_index":4803,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.scss",{"_index":4802,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams/:id",{"_index":1587,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["teams/add",{"_index":1586,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["teamscomponent",{"_index":320,"title":{"components/TeamsComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamsource",{"_index":4805,"title":{},"body":{"components/TeamsComponent.html":{},"components/TroopsComponent.html":{}}}],["teamsreceived",{"_index":4810,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teamsreceived(teams",{"_index":4826,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team{id,name",{"_index":4714,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["team{id,name,class",{"_index":3788,"title":{},"body":{"interfaces/ParticipantCache.html":{},"components/ScorecardsComponent.html":{}}}],["tells",{"_index":3014,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["template.content",{"_index":1536,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["templateref",{"_index":2834,"title":{},"body":{"directives/IfAuthDirective.html":{},"components/MemberSelectorComponent.html":{}}}],["templates",{"_index":1486,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["test",{"_index":1041,"title":{},"body":{"injectables/BrowserService.html":{},"index.html":{}}}],["tests",{"_index":5565,"title":{},"body":{"index.html":{}}}],["text",{"_index":199,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"injectables/CommonService.html":{},"components/ConfigureComponent.html":{},"injectables/DisplayService.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["text.beforeline}${head}${line}${text.afterline",{"_index":2930,"title":{},"body":{"components/InfoComponent.html":{}}}],["text.length",{"_index":2917,"title":{},"body":{"components/InfoComponent.html":{}}}],["text.line.lastindexof",{"_index":2928,"title":{},"body":{"components/InfoComponent.html":{}}}],["text.line.substring(0",{"_index":2927,"title":{},"body":{"components/InfoComponent.html":{}}}],["text.line.substring(text.line.lastindexof",{"_index":2925,"title":{},"body":{"components/InfoComponent.html":{}}}],["text.start}*${text.selection}*${text.end",{"_index":2924,"title":{},"body":{"components/InfoComponent.html":{}}}],["text.start}**${text.selection}**${text.end",{"_index":2922,"title":{},"body":{"components/InfoComponent.html":{}}}],["text.substring(0",{"_index":2914,"title":{},"body":{"components/InfoComponent.html":{}}}],["text.substring(end).indexof('\\n",{"_index":2916,"title":{},"body":{"components/InfoComponent.html":{}}}],["textarea",{"_index":176,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/InfoComponent.html":{}}}],["textareas",{"_index":28,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["texts",{"_index":2593,"title":{},"body":{"components/HomeComponent.html":{},"components/SaveButtonComponent.html":{},"interfaces/TournamentType.html":{}}}],["tg",{"_index":4269,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{}}}],["tg.id",{"_index":3623,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["th",{"_index":1263,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["thead",{"_index":4758,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["then(res",{"_index":5178,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["then(success",{"_index":5192,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["there's",{"_index":5557,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":859,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["they're",{"_index":865,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["third",{"_index":3303,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this._$currentuserobservable",{"_index":5242,"title":{},"body":{"injectables/UserService.html":{}}}],["this._$currentuserobservable.getvalue",{"_index":5220,"title":{},"body":{"injectables/UserService.html":{}}}],["this._$currentuserobservable.next(user",{"_index":5226,"title":{},"body":{"injectables/UserService.html":{}}}],["this._addjudge(newjudge",{"_index":4440,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this._addjudge(result.savejudge",{"_index":4438,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this._audio",{"_index":3414,"title":{},"body":{"injectables/MediaService.html":{}}}],["this._audio.load",{"_index":3436,"title":{},"body":{"injectables/MediaService.html":{}}}],["this._audio.play",{"_index":3437,"title":{},"body":{"injectables/MediaService.html":{}}}],["this._audio.src",{"_index":3434,"title":{},"body":{"injectables/MediaService.html":{}}}],["this._canupload",{"_index":3342,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this._club",{"_index":3598,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this._currentuser",{"_index":4963,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this._defaultvalues",{"_index":101,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this._error",{"_index":2183,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this._externalset",{"_index":3703,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["this._gymnasts",{"_index":3601,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this._isloadinguser",{"_index":5222,"title":{},"body":{"injectables/UserService.html":{}}}],["this._isopen",{"_index":1750,"title":{},"body":{"components/DialogComponent.html":{}}}],["this._ispaused",{"_index":3416,"title":{},"body":{"injectables/MediaService.html":{}}}],["this._loadmeinternal(noreport).subscribe",{"_index":5241,"title":{},"body":{"injectables/UserService.html":{}}}],["this._log('error",{"_index":3091,"title":{},"body":{"classes/Logger.html":{}}}],["this._log('log",{"_index":3090,"title":{},"body":{"classes/Logger.html":{}}}],["this._media",{"_index":3340,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this._media.id",{"_index":3372,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this._redirectto",{"_index":3111,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._selected",{"_index":4489,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this._showtraining",{"_index":3791,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this._translator",{"_index":922,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this._types",{"_index":2600,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["this._types.sort((a",{"_index":2567,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["this._value",{"_index":1320,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["this._valuehigh",{"_index":3714,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["this._valuelow",{"_index":3711,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["this._whatsplaying",{"_index":3415,"title":{},"body":{"injectables/MediaService.html":{}}}],["this.addclub",{"_index":1151,"title":{},"body":{"components/ClubComponent.html":{}}}],["this.adddiscipline",{"_index":1929,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.adddivision",{"_index":2129,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.addfilter('available",{"_index":3621,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.addjudge",{"_index":4422,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.addobserver(url",{"_index":3042,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.addscoregroup",{"_index":4521,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.addteam",{"_index":4872,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.adresslist",{"_index":5337,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.agedivisions",{"_index":2104,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.agedivisions.concat(this.genderdivisions",{"_index":2125,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.alternatesubject",{"_index":2273,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["this.alternatesubject.next(rows",{"_index":2271,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["this.alternatesubject.value",{"_index":2263,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["this.alternatesubject.value.findindex(m",{"_index":2284,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["this.analyzeandreport(req",{"_index":951,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.angulartics.eventtrack.next",{"_index":3126,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["this.angulartics.starttracking",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["this.apollo.getclient().clearstore",{"_index":2468,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.apollo.mutate",{"_index":2476,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.apollo.mutate(object.assign",{"_index":2464,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.apollo.query(object.assign",{"_index":2458,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.apollo.subscribe(object.assign",{"_index":2478,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.apollo.watchquery(object.assign",{"_index":2460,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.apptocase",{"_index":4902,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["this.availablemembers",{"_index":3615,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.bold",{"_index":2936,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.browser.document().location.reload",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["this.browser.document().queryselectorall('app",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["this.browser.localstorage().getitem('lang",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["this.browser.localstorage().getitem('showtraining",{"_index":3792,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.browser.localstorage().setitem('lang",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["this.browser.localstorage().setitem('showtraining",{"_index":3794,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.browser.sessionstorage().getitem('currentuser",{"_index":926,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.browser.sessionstorage().removeitem('currentuser",{"_index":928,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/UserService.html":{}}}],["this.browser.sessionstorage().setitem('currentuser",{"_index":5233,"title":{},"body":{"injectables/UserService.html":{}}}],["this.browser.window().location",{"_index":457,"title":{},"body":{"components/AppComponent.html":{}}}],["this.browser.window().location.reload(true",{"_index":3160,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.browser.window().open(url",{"_index":156,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this.browser.window().print",{"_index":4562,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["this.browser.window().url.createobjecturl(blob",{"_index":154,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this.cache",{"_index":2683,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["this.cache.add(req.urlwithparams",{"_index":2658,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["this.cache.contains(req.urlwithparams",{"_index":2650,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["this.cache.hasownproperty(url",{"_index":2676,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["this.cache.invalidateall",{"_index":2647,"title":{},"body":{"interceptors/HttpCacheInterceptor.html":{}}}],["this.cache.invalidateall(`/api/display",{"_index":1979,"title":{},"body":{"injectables/DisplayService.html":{}}}],["this.cache[url",{"_index":2677,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["this.cancel",{"_index":1246,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["this.cancel.emit",{"_index":1763,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.cancelclicked",{"_index":1758,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.canedit(participant",{"_index":3857,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.canedit(this.schedule[idx",{"_index":3902,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.canedit.bind(this",{"_index":3914,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.canstart.bind(this",{"_index":3916,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.canupload",{"_index":3355,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.changed.emit(data",{"_index":3359,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.changed.emit(null",{"_index":3377,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.changelang(newlang",{"_index":475,"title":{},"body":{"components/AppComponent.html":{}}}],["this.checkerror(req",{"_index":947,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.childcontrol.markaspristine",{"_index":1348,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["this.childcontrol.patchvalue(v",{"_index":1330,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["this.childcontrol.patchvalue(val.name",{"_index":1322,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["this.childcontrol.setvalue(value",{"_index":1347,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["this.childcontrol.value",{"_index":2048,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["this.childcontrol[isdisabled",{"_index":2050,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["this.clearerror",{"_index":2184,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.clearselection",{"_index":2279,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["this.close",{"_index":1696,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/DivisionEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["this.close(result",{"_index":4997,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.close(result.savetroop",{"_index":4994,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.close.emit('next",{"_index":4256,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.close.emit('previous",{"_index":4254,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.close.emit('rollback",{"_index":4233,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.close.emit(res",{"_index":4224,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.closedialog",{"_index":1752,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.club",{"_index":1227,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/MediaComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["this.club.id",{"_index":1208,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["this.club.id).subscribe(resp",{"_index":1241,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.club.name",{"_index":1204,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.club.name.split",{"_index":5110,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.clubcomponent.club",{"_index":5074,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.clubcomponent.clubname",{"_index":4967,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.clubcomponent.clubsubject.subscribe(club",{"_index":3484,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["this.clubctrl.patchvalue(club",{"_index":1213,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.clubctrl.valuechanges.subscribe(club",{"_index":1210,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.clubform",{"_index":1202,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.clubform.markasdirty",{"_index":1223,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.clubform.setvalue",{"_index":1234,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.clubform.value",{"_index":1236,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.clubform.value.name",{"_index":1203,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.clubform.valuechanges.subscribe(club",{"_index":1212,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.clubid",{"_index":3343,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.clublist",{"_index":1343,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["this.clublist.length",{"_index":1353,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["this.clublist[0",{"_index":1355,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["this.clubname.split",{"_index":4971,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.clubreceived(club",{"_index":1222,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.clubreceived(res.club",{"_index":1217,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.clubreceived(res.saveclub",{"_index":1239,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.clubreceived(this.club",{"_index":1242,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.clubsource.subject.next(res.getclubs",{"_index":1136,"title":{},"body":{"components/ClubComponent.html":{}}}],["this.clubsubject.next(club",{"_index":1228,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.config.all().subscribe(res",{"_index":124,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this.config.getbyname('display').subscribe((res",{"_index":1510,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["this.config.save",{"_index":1527,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["this.config.save(newconfig).subscribe(res",{"_index":145,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this.configform",{"_index":119,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this.configform.setvalue",{"_index":131,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this.configform.value.executiontime",{"_index":142,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this.configform.value.trainingtime",{"_index":143,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this.configreceived(res",{"_index":1511,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["this.configservice.getbyname('defaultvalues').topromise",{"_index":2092,"title":{},"body":{"components/DivisionsComponent.html":{},"components/MediaComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["this.configservice.getbyname('defaultvalues').topromise().then(config",{"_index":1872,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.configservice.getbyname('scheduleexecutiontime').subscribe(exec",{"_index":4123,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["this.configservice.getbyname('scheduletrainingtime').subscribe(exec",{"_index":4126,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["this.configuration",{"_index":100,"title":{},"body":{"components/AdvancedComponent.html":{},"components/TeamsComponent.html":{}}}],["this.configuration.find(c",{"_index":104,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this.configuration.getbyname('defaultvalues').topromise",{"_index":5075,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.consolidatelowhigh",{"_index":3713,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["this.countdown",{"_index":2152,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["this.counter",{"_index":2156,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["this.createcanonicalurl",{"_index":4066,"title":{},"body":{"injectables/SEOService.html":{}}}],["this.createnetworkactivityobservable(url",{"_index":3037,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.current",{"_index":2603,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["this.currentdelete",{"_index":3035,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.currentdelete.push(url",{"_index":3028,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.currenthelpblocks",{"_index":460,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentindex",{"_index":1531,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["this.currentindex).subscribe(display",{"_index":1534,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["this.currentlang",{"_index":513,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentload",{"_index":3031,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.currentload.filter(n",{"_index":3032,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.currentload.push(url",{"_index":3026,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.currentsave",{"_index":3033,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.currentsave.filter(n",{"_index":3034,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.currentsave.push(url",{"_index":3027,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.currentsort",{"_index":4789,"title":{},"body":{"classes/SubjectSource.html":{}}}],["this.currentsort.active",{"_index":4794,"title":{},"body":{"classes/SubjectSource.html":{}}}],["this.currentsort.direction",{"_index":4792,"title":{},"body":{"classes/SubjectSource.html":{}}}],["this.currentuser",{"_index":4200,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{}}}],["this.currentuser.club",{"_index":5183,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.currentuser.club.id",{"_index":4870,"title":{},"body":{"components/TeamsComponent.html":{},"components/TroopsComponent.html":{}}}],["this.currentuser.expire",{"_index":5232,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentuser.id",{"_index":5189,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.currentuser.role",{"_index":1692,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{}}}],["this.currentuser.token",{"_index":5231,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentuserreceived(null",{"_index":5238,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentuserreceived(res",{"_index":5247,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentuserreceived(res.me",{"_index":5237,"title":{},"body":{"injectables/UserService.html":{}}}],["this.data.autocloseafter",{"_index":2155,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["this.data.canedit(this.participant",{"_index":1700,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.data.canstart(this.participant",{"_index":1702,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.data.currentuser",{"_index":1676,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.data.edit(this.participant",{"_index":1701,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.data.mousex",{"_index":1689,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.data.mousey",{"_index":1687,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.data.participant",{"_index":1675,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.data.publish(this.participant",{"_index":1706,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.data.rollback",{"_index":1699,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.data.rowindex",{"_index":1703,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.data.start(this.participant",{"_index":1704,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.data.stop(this.participant",{"_index":1705,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.data.tournament",{"_index":1677,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.defaultdisciplines",{"_index":1873,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.defaultdisciplines.filter(def",{"_index":1919,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.defaultdisciplines.length",{"_index":1918,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.defaultdivisions",{"_index":2093,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.defaultdivisions.filter(def",{"_index":2114,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.defaultdivisions.length",{"_index":2113,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.defaults",{"_index":5076,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.defaults.find(k",{"_index":5087,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.defaults.foreach(division",{"_index":5117,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.defaultscoregroups",{"_index":1875,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["this.defaultscoregroups.filter(def",{"_index":4516,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.defaultscoregroups.length",{"_index":4515,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.defaultvaluekeys[0",{"_index":127,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this.defaultvalues",{"_index":144,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this.defaultvalues[key",{"_index":139,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this.delete(query).pipe(map(res",{"_index":2453,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.deleteobservable[url",{"_index":3044,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.dialog.open(contextmenucomponent",{"_index":3907,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.dialog.open(errordialogcomponent",{"_index":2190,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.dialog.open(loadspinnercomponent",{"_index":3022,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.dialogref",{"_index":1690,"title":{},"body":{"components/ContextMenuComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/ParticipantCache.html":{},"interfaces/UrlActivity.html":{}}}],["this.dialogref.close",{"_index":1691,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"interfaces/UrlActivity.html":{}}}],["this.discipline",{"_index":4382,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["this.discipline.id",{"_index":1790,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["this.discipline.name",{"_index":1791,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["this.discipline.sortorder",{"_index":1795,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["this.discipline.teams",{"_index":1792,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["this.discipline.tournament",{"_index":1793,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["this.disciplinechanged.emit('deleted",{"_index":1804,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["this.disciplinechanged.emit(result",{"_index":1799,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["this.disciplinechanged.emit(this.discipline",{"_index":1805,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["this.disciplinechanged.emit(this.disciplineform.value",{"_index":1800,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["this.disciplineform",{"_index":1789,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["this.disciplineform.value",{"_index":1796,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["this.disciplineform.value.id).subscribe(result",{"_index":1803,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["this.disciplineid",{"_index":3357,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.disciplinelist",{"_index":1894,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.disciplinelist.findindex(d",{"_index":1920,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.disciplinelist.foreach((div",{"_index":1885,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.disciplinelist.map(d",{"_index":1898,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.disciplinelist.push(discipline",{"_index":1904,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.disciplinelist.splice(this.disciplinelist.findindex(d",{"_index":1925,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.disciplinelistchanged.emit(this.disciplinelist",{"_index":1897,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.disciplinename",{"_index":3366,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.disciplinename).then(media",{"_index":3361,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.disciplinename).topromise",{"_index":3358,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.disciplinequery).topromise",{"_index":1902,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.disciplines",{"_index":3244,"title":{},"body":{"components/MediaComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["this.disciplines.find(d",{"_index":4563,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["this.disciplines.reduce((set",{"_index":4718,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["this.display",{"_index":1532,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"components/DisplayComponent.html":{}}}],["this.displaycolumns.push('createdby",{"_index":4918,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.displayedcolumns.push('createdby",{"_index":5287,"title":{},"body":{"components/VenueComponent.html":{}}}],["this.displayedcolumns.splice(this.displayedcolumns.indexof('selector",{"_index":5129,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.displayedcolumns.unshift('selector",{"_index":5128,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.displayhtml",{"_index":2348,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["this.displayid",{"_index":2337,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["this.displayservice.getall(this.parent.tournamentid).subscribe(displays",{"_index":1955,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.displayservice.getall(this.preview.id",{"_index":1533,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["this.displayservice.invalidatecache",{"_index":1954,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.division.id",{"_index":2002,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.division.max",{"_index":2007,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.division.min",{"_index":2006,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.division.name",{"_index":2003,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.division.scorable",{"_index":2009,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.division.sortorder",{"_index":2005,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.division.tournamentid",{"_index":2004,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.division.type",{"_index":2010,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.divisionchanged.emit('deleted",{"_index":2018,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.divisionchanged.emit(result",{"_index":2014,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.divisionchanged.emit(this.division",{"_index":2019,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.divisionchanged.emit(this.divisionform.value",{"_index":2015,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.divisionform",{"_index":2001,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.divisionform.value",{"_index":2012,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.divisionform.value.id).subscribe(result",{"_index":2017,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.divisionreceived(res.getdivisions",{"_index":2110,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.divisionreceived(this.divisions",{"_index":2100,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.divisions",{"_index":2043,"title":{},"body":{"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{}}}],["this.divisions.filter(d",{"_index":2111,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.divisions.findindex(d",{"_index":2115,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.divisionschanged.emit(this.divisions",{"_index":2108,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.dom.createelement('link",{"_index":4073,"title":{},"body":{"injectables/SEOService.html":{}}}],["this.dom.documentelement.clientheight",{"_index":4223,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.dom.head.appendchild(link",{"_index":4077,"title":{},"body":{"injectables/SEOService.html":{}}}],["this.dom.queryselector('link[rel=\"canonical",{"_index":4072,"title":{},"body":{"injectables/SEOService.html":{}}}],["this.dom.url",{"_index":4070,"title":{},"body":{"injectables/SEOService.html":{}}}],["this.editingscore",{"_index":1806,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["this.editmodechanged.emit(this._selected",{"_index":4491,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.element.nativeelement.queryselector('[role=\"dialogcontainer\"]').classname",{"_index":1753,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.elm.nativeelement.getboundingclientrect",{"_index":4221,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.elmref.nativeelement.closest('.cdk",{"_index":1672,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.elmref.nativeelement.closest('.mat",{"_index":1674,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.elref.nativeelement",{"_index":2343,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["this.error.seterror(message",{"_index":1020,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.error.seterror(this.translate.instant('we",{"_index":1090,"title":{},"body":{"guards/CanActivateRegistration.html":{}}}],["this.errorhandler.clearerror",{"_index":5187,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.errorhandler.seterror('no",{"_index":4001,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.errorhandler.seterror('wrong",{"_index":3131,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.errorhandler.seterror(error",{"_index":3813,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.errorhandler.seterror(res",{"_index":4006,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.errorhandler.seterror(this.translate.instant('this",{"_index":3870,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.errorhandler.seterror(this.translate.instant(`cannot",{"_index":3860,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.errorhandler.seterror(this.translate.instant(`this",{"_index":3888,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.executiontime",{"_index":4124,"title":{},"body":{"injectables/ScheduleService.html":{},"components/TeamsComponent.html":{}}}],["this.fb.array",{"_index":4377,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.fb.array(this.scoregroup.judges.map(judge",{"_index":4384,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.fb.group",{"_index":120,"title":{},"body":{"components/AdvancedComponent.html":{},"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["this.fb.group(judge",{"_index":4385,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.filteredjudgelist",{"_index":4390,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.filteredmembers",{"_index":3616,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.filterfn[name",{"_index":3632,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.findmissingdefaults().length",{"_index":1871,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["this.findmissingdefaults().map(group",{"_index":1905,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["this.form",{"_index":3938,"title":{},"body":{"components/PasswordComponent.html":{},"components/ResetComponent.html":{}}}],["this.form.getrawvalue",{"_index":4037,"title":{},"body":{"components/ResetComponent.html":{}}}],["this.form.value",{"_index":3952,"title":{},"body":{"components/PasswordComponent.html":{}}}],["this.genderdivisions",{"_index":2103,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.get(querystr).pipe(map(res",{"_index":2450,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.getfilteredgymnasts",{"_index":3633,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.getscoregroupfromform",{"_index":4409,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.getselection",{"_index":2920,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.gettournamentday(tournament",{"_index":4146,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["this.goback",{"_index":1218,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.graph",{"_index":4855,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.graph.deletedata('club",{"_index":1240,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.graph.deletedata('discipline",{"_index":1802,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["this.graph.deletedata('division",{"_index":2016,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.graph.deletedata('media",{"_index":3432,"title":{},"body":{"injectables/MediaService.html":{}}}],["this.graph.deletedata('participantscores",{"_index":1694,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.graph.deletedata('score",{"_index":4231,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.graph.deletedata('scoregroup",{"_index":4416,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.graph.deletedata('troop",{"_index":3525,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["this.graph.deletedata('user",{"_index":5190,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.graph.deletedata('venue",{"_index":5363,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.graph.get(`{getclubs(name:\"${name}\"){id,name",{"_index":1341,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["this.graph.get(`{me",{"_index":5235,"title":{},"body":{"injectables/UserService.html":{}}}],["this.graph.get(`{user(id:${+params.id})${this.userquery",{"_index":5175,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.graph.getdata",{"_index":1512,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TournamentComponent.html":{}}}],["this.graph.getdata(`{club(id:${this.club.id}){id,troopcount}}`).subscribe(result",{"_index":4977,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.graph.getdata(`{deletejudgeinscoregroup(input{judgeid:${judge.id},scoregroupid:${this.scoregroup.id}}){}}`).subscribe",{"_index":4427,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.graph.getdata(`{getclubs{id,name}}`).subscribe(res",{"_index":1135,"title":{},"body":{"components/ClubComponent.html":{}}}],["this.graph.getdata(`{getdisciplines(tournamentid:${this.tournamentid})${this.disciplinequery}}`).topromise()).getdisciplines",{"_index":1896,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.graph.getdata(`{getdivisions(tournamentid:${this.tournamentid})${divisionscomponent.divisionsquery}}`).subscribe(res",{"_index":2109,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.graph.getdata(`{getdivisions(tournamentid:${this.tournamentid},type:${divisiontype[this.type]}){id,name,type,min,max,scorable}}`).subscribe(res",{"_index":2042,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["this.graph.getdata(`{getgymnasts(clubid:${this.club.id}){id,name,gender,birthyear}}`).subscribe(res",{"_index":5101,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.graph.getdata(`{getschedule(tournamentid:${this.parent.tournamentid})${this.schedulequery",{"_index":3815,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.graph.getdata(`{gettroops(clubid:${this.club.id}){id,name,gymnasts{id,name,birthyear,gender}}}`).subscribe(res",{"_index":5077,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.graph.getdata(`{gettroops(clubid:${this.club.id},name:\"${encodeuricomponent(val)}\"){id,name}}`).subscribe(res",{"_index":3504,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.graph.getdata(`{getusers{id,name,role,club{id,name}}}`).subscribe(res",{"_index":5260,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.graph.getdata(`{getvenues{id,name,contact,rentalcost,address,createdby{id,name}}}`).subscribe(res",{"_index":5285,"title":{},"body":{"components/VenueComponent.html":{}}}],["this.graph.getdata(`{gymnast(id:${+params.id})${this.memberquery}}`).subscribe(res",{"_index":3489,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.graph.getdata(`{media(${querystr.join(',')}){id",{"_index":3429,"title":{},"body":{"injectables/MediaService.html":{}}}],["this.graph.getdata(`{tournament(id:${id})${this.query}}`).subscribe((data",{"_index":2206,"title":{},"body":{"components/EventComponent.html":{}}}],["this.graph.getdata(`{troop(id:${+params.id}){id,name,gymnasts{id,name,gender,birthyear}}}`).subscribe(res",{"_index":4974,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.graph.getdata(`{venue(id:${+params.id})${this.venuequery}}`).subscribe(res",{"_index":5343,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.graph.getdata(getmembers(this.club).subscribe(memberlist",{"_index":3491,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.graph.getdata(query",{"_index":3614,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.graph.getdata(this.query).subscribe(data",{"_index":2598,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["this.graph.post(`{changepassword(old",{"_index":3953,"title":{},"body":{"components/PasswordComponent.html":{}}}],["this.graph.post(`{publish(id",{"_index":3890,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.graph.post(`{resetpassword(username:\"${val.username}\",email:\"${val.email}\")}`).subscribe(res",{"_index":4038,"title":{},"body":{"components/ResetComponent.html":{}}}],["this.graph.post(`{rollback(participantid",{"_index":1697,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["this.graph.post(`{start(id",{"_index":3878,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.graph.post(`{stop(id",{"_index":3884,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.graph.savedata('club",{"_index":1237,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.graph.savedata('discipline",{"_index":1797,"title":{},"body":{"components/DisciplineEditorComponent.html":{}}}],["this.graph.savedata('disciplines",{"_index":1901,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.graph.savedata('division",{"_index":2011,"title":{},"body":{"components/DivisionEditorComponent.html":{}}}],["this.graph.savedata('divisions",{"_index":2105,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.graph.savedata('gymnast",{"_index":3515,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.graph.savedata('judge",{"_index":4436,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.graph.savedata('scoregroup",{"_index":4410,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.graph.savedata('scoregroups",{"_index":1916,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["this.graph.savedata('tournament",{"_index":2895,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.graph.savedata('troop",{"_index":4990,"title":{},"body":{"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["this.graph.savedata('user",{"_index":4002,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.graph.savedata('venue",{"_index":5360,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.graph.savedata(`score",{"_index":4228,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.groupedscores",{"_index":4193,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.groupedscores.find(g",{"_index":4237,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.groupedscores.reduce((prev",{"_index":4194,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.gymnasts",{"_index":3619,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.gymnasts.findindex(tg",{"_index":3622,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.gymnasts.length",{"_index":3620,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.gymnastschange.emit(this.gymnasts",{"_index":3609,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.handleerror(req",{"_index":937,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.hasfuture",{"_index":2580,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["this.hasmedia",{"_index":3362,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.hasstarted",{"_index":4871,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.hastraining",{"_index":3818,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.highref.nativeelement.style.setproperty",{"_index":3718,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["this.http.delete(`${this.url}/${configuration.name",{"_index":1463,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["this.http.delete(`/api/graph/?query=${commonservice.compressstring(querystr",{"_index":2474,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.http.get('/api').subscribe((res",{"_index":492,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http.get('/api/administration/backup",{"_index":146,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this.http.get(`${this.url}/${name",{"_index":1461,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["this.http.get(`/api/display/${tournamentid",{"_index":1981,"title":{},"body":{"injectables/DisplayService.html":{}}}],["this.http.get(`/api/display/${tournamentid}/${displayid",{"_index":1982,"title":{},"body":{"injectables/DisplayService.html":{}}}],["this.http.get(`/api/graph/?query=${commonservice.compressstring(query",{"_index":2457,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.http.get(`/api/venue/location/${encodeuricomponent(v",{"_index":5335,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.http.get(this.url",{"_index":1460,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["this.http.post('/api/user/login",{"_index":5244,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`/api/graph",{"_index":2462,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.http.post(`/api/media/upload",{"_index":3424,"title":{},"body":{"injectables/MediaService.html":{}}}],["this.http.post(this.url",{"_index":1462,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["this.httpaction.next(action",{"_index":2708,"title":{},"body":{"injectables/HttpStateService.html":{}}}],["this.infotext.nativeelement.focus",{"_index":2918,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.infotext.nativeelement.selectionend",{"_index":2913,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.infotext.nativeelement.selectionstart",{"_index":2912,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.infotext.nativeelement.setselectionrange(start",{"_index":2919,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.injector.get(tournamenteditorcomponent).tournamentid",{"_index":1878,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{}}}],["this.injector.get(translateservice",{"_index":923,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.invalidate(key",{"_index":2682,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["this.invalidatecache",{"_index":3831,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.invalidatecache(participant",{"_index":3877,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.invalidatecache(s",{"_index":3837,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.invalidatecache(this.selected",{"_index":3894,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.isadding",{"_index":1220,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DivisionsComponent.html":{}}}],["this.isedit",{"_index":1221,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.isgroup(groupname",{"_index":4742,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["this.islistening",{"_index":4103,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["this.isloading",{"_index":117,"title":{},"body":{"components/AdvancedComponent.html":{},"interfaces/ParticipantCache.html":{},"components/TeamsComponent.html":{}}}],["this.isloadingmembers",{"_index":3611,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.issaving",{"_index":4105,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["this.italic",{"_index":2937,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.judgeform",{"_index":4387,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.judgeform.reset",{"_index":4443,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.judgeform.setvalue",{"_index":4444,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.judgeform.value",{"_index":4429,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.judgeform.value.name.length",{"_index":4421,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.judgelist",{"_index":4391,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.judgelist.find(j",{"_index":4432,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.judges.length",{"_index":4442,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.judges.push(this.fb.group",{"_index":4441,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.judges.removeat(index",{"_index":4425,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.judges.value.findindex(i",{"_index":4394,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.judges.value[index",{"_index":4424,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.jwt.istokenexpired(json.parse(user).token",{"_index":927,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.lng",{"_index":2899,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.loadavailablemembers",{"_index":3599,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.loaddata",{"_index":3351,"title":{},"body":{"components/MediaControlComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["this.loaddisciplines",{"_index":1879,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.loaddisplay",{"_index":2341,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["this.loaddisplay(true",{"_index":2340,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["this.loaddivisions",{"_index":2097,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.loadobservable[url",{"_index":3041,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.loadpreview",{"_index":1526,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["this.loadschedule",{"_index":3808,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.loadscoregroups",{"_index":4495,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.loadteams",{"_index":4854,"title":{},"body":{"components/TeamsComponent.html":{},"components/TroopsComponent.html":{}}}],["this.log(...args",{"_index":3089,"title":{},"body":{"classes/Logger.html":{}}}],["this.macros",{"_index":3182,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["this.mapfromarray(val",{"_index":2481,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.mapfromobject(a",{"_index":2504,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.mapfromobject(i",{"_index":2492,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.mapfromobject(obj[k",{"_index":2501,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.mapfromobject(val",{"_index":2482,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.max",{"_index":3679,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["this.maxyear",{"_index":3499,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.media.clubid",{"_index":3363,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.media.disciplineid",{"_index":3365,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.media.disciplinename",{"_index":3367,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.media.teamid",{"_index":3364,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.mediaservice.getmedia(this.clubid",{"_index":3360,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.mediaservice.play(participant.media",{"_index":3881,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.mediaservice.play(this._media",{"_index":3373,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.mediaservice.remove(this._media",{"_index":3376,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.mediaservice.stop",{"_index":3374,"title":{},"body":{"components/MediaControlComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["this.mediaservice.upload(filelist[0",{"_index":3356,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.mediaservice.whatsplaying",{"_index":3370,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.mediaservice.whatsplaying.id",{"_index":3371,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.memberform",{"_index":3474,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.memberform.get('birthyear",{"_index":3483,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.memberform.get('club",{"_index":3479,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.memberform.get('gender",{"_index":3481,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.memberform.markasdirty",{"_index":3522,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.memberform.setvalue(val",{"_index":3511,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.memberform.value",{"_index":3512,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.memberform.value.troop",{"_index":3523,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.memberform.value.troop.findindex(troop",{"_index":3507,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.memberform.value.troop.push(troop",{"_index":3520,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.memberlisthidden",{"_index":3602,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.memberquery).subscribe(response",{"_index":3517,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.memberreceived(res.gymnast",{"_index":3490,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.meta.settitle('login",{"_index":3113,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.meta.settitle(`add",{"_index":5182,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.meta.updatetag",{"_index":4060,"title":{},"body":{"injectables/SEOService.html":{}}}],["this.methodtotype[type",{"_index":3030,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.min",{"_index":3681,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["this.navstate",{"_index":499,"title":{},"body":{"components/AppComponent.html":{}}}],["this.onchange(transformed",{"_index":4905,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["this.onclose",{"_index":4232,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.onclose(res.savescores",{"_index":4230,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.onrendercomplete",{"_index":4561,"title":{},"body":{"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["this.onteamsreceived(res.gettroops",{"_index":5078,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.onteamsreceived(result.savetroop",{"_index":5124,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.opendialog",{"_index":1751,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.original",{"_index":2892,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.originalvalue",{"_index":2046,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["this.parent.clubsubject.subscribe(club",{"_index":3246,"title":{},"body":{"components/MediaComponent.html":{}}}],["this.parent.tournamentid",{"_index":4552,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["this.parent.tournamentsubject.subscribe(tournament",{"_index":2891,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.participant.endtime",{"_index":1681,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.participant.id",{"_index":4210,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.participant.id).subscribe",{"_index":1695,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["this.participant.id})}`).subscribe",{"_index":1698,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["this.participant.publishtime",{"_index":1680,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["this.participant.scores",{"_index":1684,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["this.participant.scores.length",{"_index":1685,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["this.participant.starttime",{"_index":1682,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.participant.total",{"_index":4198,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.participant.type",{"_index":1678,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.post(query).pipe(map(res",{"_index":2456,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.preview",{"_index":1524,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["this.preview.id",{"_index":1525,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["this.previous(idx",{"_index":3903,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.propagatevaluechange",{"_index":1349,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{}}}],["this.propagatevaluechange(this.value",{"_index":1323,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["this.propagatevaluechange(val",{"_index":2047,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["this.publish.bind(this",{"_index":3919,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.queryparamssubscription.unsubscribe",{"_index":3124,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.realrows.filter(r",{"_index":2289,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["this.realrows[row",{"_index":2285,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["this.registerform",{"_index":3996,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value",{"_index":3999,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registrationcomplete(err",{"_index":4005,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registrationcomplete(res.saveuser",{"_index":4004,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.renderdisplaytemplates",{"_index":1953,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.renderdisplaytemplates(true",{"_index":1952,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.renderer.setstyle(this.overlay",{"_index":1686,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.request",{"_index":5144,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["this.request.protocol}://${this.request.get('host",{"_index":5146,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["this.reroute",{"_index":3158,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.reroute(err",{"_index":3159,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.returnfocus(selection.start",{"_index":2923,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.returnfocus(selection.startofline",{"_index":2931,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.route",{"_index":1142,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/FullscreenComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["this.route.params.subscribe((params",{"_index":5173,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":1215,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/MemberEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":5345,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.router.events.subscribe(event",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate",{"_index":1012,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/FullscreenComponent.html":{},"components/LogoutComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["this.router.navigate(['../results",{"_index":4725,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["this.router.navigate(['./add",{"_index":1146,"title":{},"body":{"components/ClubComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopsComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1000,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{}}}],["this.router.navigate([`../../tournament/add",{"_index":5357,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.router.navigate([this.redirectto",{"_index":3130,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.url.split('/').slice(1",{"_index":1013,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.save",{"_index":140,"title":{},"body":{"components/AdvancedComponent.html":{},"components/InfoComponent.html":{}}}],["this.savedisciplines",{"_index":1888,"title":{},"body":{"components/DisciplinesComponent.html":{}}}],["this.savedivisions",{"_index":2102,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.saveobservable[url",{"_index":3043,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.savescoregroups",{"_index":4500,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.schedule",{"_index":3822,"title":{},"body":{"interfaces/ParticipantCache.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["this.schedule.findindex(s",{"_index":3895,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.schedule.findindex(t",{"_index":3824,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.schedule.foreach(s",{"_index":3836,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.schedule.push(participant",{"_index":3830,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.schedule.reduce((p",{"_index":4707,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["this.schedule.splice(idx",{"_index":3827,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.schedule[idx",{"_index":3826,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.schedule[j",{"_index":3866,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.schedule[j].markdeleted",{"_index":3865,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.schedulequery).subscribe(res",{"_index":3807,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.scheduleservice.isnewday(this.tournament",{"_index":3841,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.scheduleservice.starttime(this.tournament",{"_index":3839,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.scorechanged.emit('deleted",{"_index":4419,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scorechanged.emit(result",{"_index":4418,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scorechanged.emit(result.savescoregroup",{"_index":4413,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scorechanged.emit(this.scoregroup",{"_index":4420,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scorechanged.emit(val",{"_index":4415,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scoreform",{"_index":4374,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scoreform.get('judges",{"_index":4423,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scoreform.getrawvalue",{"_index":4398,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scoreform.markasdirty",{"_index":4426,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scoreform.setcontrol('judges",{"_index":4386,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scoregroup",{"_index":4402,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scoregroup.id",{"_index":4375,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scoregroup.max",{"_index":4378,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scoregroup.min",{"_index":4379,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scoregroup.name",{"_index":4376,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scoregroup.operation",{"_index":4381,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scoregroup.type",{"_index":4380,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.scoregrouplist",{"_index":4507,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.scoregrouplist.findindex(d",{"_index":4517,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.scoregrouplist.foreach((sg",{"_index":4498,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.scoregrouplist.map(s",{"_index":4501,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.scoregrouplist.push(scoregroup",{"_index":4512,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.scoregrouplist.splice(this.scoregrouplist.findindex(d",{"_index":4519,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.scoregrouplistchanged.emit(this.scoregrouplist",{"_index":4509,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.scoregroupquery).subscribe(res",{"_index":4506,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.scoregroups",{"_index":4203,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.scoregroups.find(g",{"_index":4207,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.scoregroups.foreach(group",{"_index":4209,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.scoregroups.map(group",{"_index":4212,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.scorequery).subscribe(res",{"_index":4229,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["this.scores.length",{"_index":2773,"title":{},"body":{"interfaces/IScoreContainer.html":{},"classes/ScoreContainer.html":{}}}],["this.scores.reduce((prev",{"_index":2769,"title":{},"body":{"interfaces/IScoreContainer.html":{},"classes/ScoreContainer.html":{}}}],["this.scoreservice.getbydiscipline(this.discipline.id).subscribe(scoregroups",{"_index":4511,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.scoreservice.saveall(scoregrouplist).subscribe(result",{"_index":4514,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.select(null",{"_index":1928,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["this.select(this.next(idx",{"_index":3899,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.select(this.previous(idx",{"_index":3900,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.select.bind(this",{"_index":3915,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.selected",{"_index":126,"title":{},"body":{"components/AdvancedComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreSystemComponent.html":{}}}],["this.selected.id",{"_index":3897,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.selected.sortorder",{"_index":1927,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{}}}],["this.selected.type",{"_index":4520,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["this.selected[k",{"_index":1923,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["this.selecteddiscipline",{"_index":3843,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.selecteddiscipline.id",{"_index":3844,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.selecteduserid",{"_index":5174,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.selectedvenue",{"_index":5348,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.selectedvenue.name",{"_index":5325,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.selection.findindex(t",{"_index":5130,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.selection.length",{"_index":5131,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.selection.push(team",{"_index":5133,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.selection.splice(index",{"_index":5132,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.selectmode",{"_index":5127,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.seo.settitle",{"_index":2584,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["this.seo.settitle('advanced",{"_index":114,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["this.seo.settitle('configure",{"_index":1127,"title":{},"body":{"components/ClubComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/UsersComponent.html":{}}}],["this.seo.settitle('logout",{"_index":3153,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.seo.settitle('register",{"_index":3994,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.seo.settitle(`configure",{"_index":4915,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.seo.settitle(this.tournament.name",{"_index":2209,"title":{},"body":{"components/EventComponent.html":{}}}],["this.setselectedclub(club",{"_index":1211,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.showhelp",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showtraining",{"_index":3846,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.snackbar.open(`${this.translator.instant(issave",{"_index":960,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.sortchanged.next(v",{"_index":4786,"title":{},"body":{"classes/SubjectSource.html":{}}}],["this.sortchanged.value",{"_index":4784,"title":{},"body":{"classes/SubjectSource.html":{}}}],["this.splitvalue(this.tournament['description_",{"_index":2921,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.standalone",{"_index":1801,"title":{},"body":{"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionsComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["this.start.bind(this",{"_index":3917,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.state.notifysubscribers(req",{"_index":931,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.step",{"_index":2158,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["this.stop",{"_index":3375,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.stop(p",{"_index":3876,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.stop.bind(this",{"_index":3918,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.striptypenames(req",{"_index":929,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.subject",{"_index":4788,"title":{},"body":{"classes/SubjectSource.html":{}}}],["this.subject.subscribe(values",{"_index":2267,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["this.subject.value",{"_index":4783,"title":{},"body":{"classes/SubjectSource.html":{}}}],["this.subscription.foreach(s",{"_index":3610,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.subscriptions.foreach(s",{"_index":1143,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubLookupComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"interfaces/ParticipantCache.html":{},"components/SaveButtonComponent.html":{},"components/ScoreSystemComponent.html":{},"components/TeamsComponent.html":{},"components/TroopEditorComponent.html":{}}}],["this.subscriptions.push",{"_index":4852,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.subscriptions.push(this.authstate.httpaction.subscribe((action",{"_index":4102,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["this.subscriptions.push(this.childcontrol.valuechanges.pipe",{"_index":1326,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["this.subscriptions.push(this.childcontrol.valuechanges.subscribe(val",{"_index":2045,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["this.subscriptions.push(this.graph.listen('teamindisciplinemodified",{"_index":1950,"title":{},"body":{"components/DisplayComponent.html":{},"components/FullscreenComponent.html":{},"interfaces/ParticipantCache.html":{},"components/TeamsComponent.html":{}}}],["this.subscriptions.push(this.judgeform.get('name').valuechanges.pipe(distinctuntilchanged",{"_index":4388,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.subscriptions.push(this.route.params.subscribe((params",{"_index":2204,"title":{},"body":{"components/EventComponent.html":{},"components/FullscreenComponent.html":{}}}],["this.subscriptions.push(this.userservice.getme().subscribe(user",{"_index":4199,"title":{},"body":{"components/ScoreEditorComponent.html":{},"components/TroopEditorComponent.html":{}}}],["this.subscriptions.push(this.userservice.getme(true).subscribe(user",{"_index":3809,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.teamcount",{"_index":5105,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.teamid",{"_index":3344,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.teams.length",{"_index":5073,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.teamsource.clearselection",{"_index":5099,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.teamsource.subject.next(teams",{"_index":4860,"title":{},"body":{"components/TeamsComponent.html":{},"components/TroopsComponent.html":{}}}],["this.teamsource.subject.value",{"_index":5072,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.teamsource.subject.value.length",{"_index":4848,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.teamsource.subject.value.reduce",{"_index":4849,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.teamsreceived(res.getteams",{"_index":4859,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.templates",{"_index":1518,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["this.templates[0].content",{"_index":1528,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["this.templates[1].content",{"_index":1529,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["this.timeremaining",{"_index":2157,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["this.title.settitle(title",{"_index":4059,"title":{},"body":{"injectables/SEOService.html":{}}}],["this.toggleheaders",{"_index":2939,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.togglenav(evt",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tokenreceived(response.headers.get('authorization",{"_index":5229,"title":{},"body":{"injectables/UserService.html":{}}}],["this.total",{"_index":2772,"title":{},"body":{"interfaces/IScoreContainer.html":{},"classes/ScoreContainer.html":{}}}],["this.tournament",{"_index":2207,"title":{},"body":{"components/EventComponent.html":{},"components/InfoComponent.html":{},"interfaces/ParticipantCache.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{}}}],["this.tournament.clubid",{"_index":3854,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.tournament.description_en",{"_index":2210,"title":{},"body":{"components/EventComponent.html":{},"components/InfoComponent.html":{}}}],["this.tournament.description_no",{"_index":2894,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.tournament.disciplines.length",{"_index":4851,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.tournament.times.reduce((prev",{"_index":4845,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.tournament['description_",{"_index":2900,"title":{},"body":{"components/InfoComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["this.tournamentid",{"_index":1877,"title":{},"body":{"components/DisciplinesComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"components/ScorecardsComponent.html":{}}}],["this.tournaments",{"_index":1514,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["this.tournamentsource.subject.next(data.gettournaments",{"_index":4922,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.trainingtime",{"_index":4127,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["this.translate.addlangs(['en",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.currentlang",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"components/InfoComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["this.translate.get(['future",{"_index":2596,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["this.translate.get(['mon",{"_index":3800,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["this.translate.get(['saved",{"_index":4100,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["this.translate.getbrowserlang",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.instant('add",{"_index":5326,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.translate.instant('adds",{"_index":4371,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.translate.instant('club",{"_index":3368,"title":{},"body":{"components/MediaControlComponent.html":{},"components/RegisterComponent.html":{}}}],["this.translate.instant('hide",{"_index":3604,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.translate.instant('men",{"_index":5096,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.translate.instant('mix",{"_index":5097,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.translate.instant('organizer",{"_index":3993,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.translate.instant('registration",{"_index":1097,"title":{},"body":{"guards/CanActivateRegistration.html":{}}}],["this.translate.instant('show",{"_index":3603,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["this.translate.instant('subtracts",{"_index":4372,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["this.translate.instant('team",{"_index":3369,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["this.translate.instant('women",{"_index":5095,"title":{},"body":{"components/TroopsComponent.html":{}}}],["this.translate.instant(`you",{"_index":4008,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.translate.setdefaultlang('en",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(lang",{"_index":514,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translator.instant('success",{"_index":959,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.troop",{"_index":4980,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troop.club.name",{"_index":4966,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troop.gymnasts",{"_index":4984,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troop.id",{"_index":4982,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troop.name",{"_index":4983,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troopchanged.emit(result",{"_index":4998,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troopform",{"_index":4973,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troopform.get('club').setvalue(this.club",{"_index":4976,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troopform.get('name').setvalue(this.troopsuggestion",{"_index":4979,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troopform.markasdirty",{"_index":4968,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troopform.setvalue",{"_index":4981,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troopform.value",{"_index":4985,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troopform.value.id).subscribe(result",{"_index":4996,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.trooplist",{"_index":3505,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.troopreceived(res.troop",{"_index":4975,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troopreceived(result.savetroop",{"_index":4993,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troopscount",{"_index":4970,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["this.troopselector.setvalue",{"_index":3521,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.troopselector.valuechanges.subscribe(val",{"_index":3503,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["this.types.filter(t",{"_index":2570,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["this.types.find(t",{"_index":2573,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["this.updates.activateupdate().then",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["this.updates.available.subscribe(event",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["this.updatetrack",{"_index":3709,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["this.urlactivity.emit",{"_index":3029,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.urlactivity.subscribe((val",{"_index":3025,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.user",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["this.user.club.id",{"_index":1243,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["this.user.clubid",{"_index":1140,"title":{},"body":{"components/ClubComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["this.user.role",{"_index":1131,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"interfaces/ParticipantCache.html":{}}}],["this.userform",{"_index":5171,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.userform.get('activated').setvalue(!this.userform.value.activated",{"_index":5185,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.userform.get('club').setvalue(this.currentuser.club",{"_index":5184,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.userform.markasdirty",{"_index":5186,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.userform.value.id",{"_index":5188,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.userform.value.id).subscribe(result",{"_index":5191,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.userreceived(err.data.user",{"_index":5181,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.userreceived(res.data.user",{"_index":5179,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.userservice.currentuser",{"_index":3155,"title":{},"body":{"components/LogoutComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{}}}],["this.userservice.currentuser.name",{"_index":3156,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.userservice.getme().subscribe(async",{"_index":5172,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["this.userservice.getme().subscribe(me",{"_index":4916,"title":{},"body":{"components/TournamentComponent.html":{},"components/VenueComponent.html":{}}}],["this.userservice.getme().subscribe(user",{"_index":1130,"title":{},"body":{"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"directives/IfAuthDirective.html":{},"components/TeamsComponent.html":{},"components/TroopsComponent.html":{}}}],["this.userservice.getme(true).subscribe(user",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.login(this.loginform.value).subscribe",{"_index":3125,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.logout().subscribe(res",{"_index":3157,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.usersource.subject.next(res.getusers",{"_index":5261,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersubscription",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"directives/IfAuthDirective.html":{},"components/TroopsComponent.html":{}}}],["this.usersubscription.unsubscribe",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"directives/IfAuthDirective.html":{}}}],["this.usingnetwork.subscribe(val",{"_index":3021,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["this.validateresponse(req",{"_index":935,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.value",{"_index":1354,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["this.valuechanges.emit(this.value",{"_index":3729,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["this.valuehigh",{"_index":3707,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["this.valuelow",{"_index":3705,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["this.venueform",{"_index":5323,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venueform.controls['address",{"_index":5333,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venueform.controls['address'].setvalue(v.option.value.formatted_address",{"_index":5352,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venueform.controls['latitude'].setvalue($event['coords'].lat",{"_index":5355,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venueform.controls['latitude'].setvalue(v.option.value.geometry.location.lat",{"_index":5353,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venueform.controls['longitude'].setvalue($event['coords'].lng",{"_index":5356,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venueform.controls['longitude'].setvalue(v.option.value.geometry.location.lng",{"_index":5354,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venueform.controls['name'].setvalue(params.fromname",{"_index":5347,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venueform.getrawvalue",{"_index":5361,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venueform.getrawvalue().latitude",{"_index":5327,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venueform.getrawvalue().longitude",{"_index":5329,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venueform.getrawvalue().name",{"_index":5324,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venueform.setvalue(val",{"_index":5351,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venueform.value.id",{"_index":5359,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venueform.value.id).subscribe(res",{"_index":5364,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venuequery).subscribe(res",{"_index":5362,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venuereceived(res.venue",{"_index":5344,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["this.venuesource.subject.next(res.getvenues",{"_index":5286,"title":{},"body":{"components/VenueComponent.html":{}}}],["this.verify.emit",{"_index":1754,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.version",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["this.viewcontainer.clear",{"_index":2849,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["this.viewcontainer.createembeddedview(this.templateref",{"_index":2851,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["this.visible",{"_index":2850,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["this[type",{"_index":3038,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["three",{"_index":2989,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["through",{"_index":918,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["throw",{"_index":866,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["throwerror",{"_index":905,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/UserService.html":{}}}],["throwerror(err",{"_index":5239,"title":{},"body":{"injectables/UserService.html":{}}}],["throwerror(this.error.error",{"_index":1024,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["thu",{"_index":3803,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["thumb",{"_index":3540,"title":{},"body":{"components/MemberEditorComponent.html":{},"components/MultirangeComponent.html":{}}}],["ticks",{"_index":3669,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["time",{"_index":168,"title":{},"body":{"components/AdvancedComponent.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"components/MacroDialogComponent.html":{},"interfaces/ParticipantCache.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{}}}],["timeremaining",{"_index":2140,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["times",{"_index":2797,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{}}}],["timeslots",{"_index":4150,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["times{day,time",{"_index":2553,"title":{},"body":{"components/HomeComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{}}}],["title",{"_index":1520,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"components/MediaControlComponent.html":{},"injectables/SEOService.html":{},"components/TeamsComponent.html":{}}}],["title(team",{"_index":4828,"title":{},"body":{"components/TeamsComponent.html":{}}}],["title]=\"'delete",{"_index":4283,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["title]=\"'rollback",{"_index":4287,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["title]=\"\\'delete",{"_index":4338,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["title]=\"\\'rollback",{"_index":4339,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["tocase",{"_index":4895,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["tocasedirective",{"_index":342,"title":{"directives/ToCaseDirective.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"modules/SharedModule.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["todate",{"_index":1420,"title":{},"body":{"injectables/CommonService.html":{}}}],["todate(end",{"_index":1439,"title":{},"body":{"injectables/CommonService.html":{}}}],["todate(start",{"_index":1438,"title":{},"body":{"injectables/CommonService.html":{}}}],["today",{"_index":2607,"title":{},"body":{"components/HomeComponent.html":{}}}],["toggle",{"_index":547,"title":{},"body":{"components/AppComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{}}}],["toggle:not(.mat",{"_index":3535,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["toggleactive",{"_index":5156,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["toggleheaders",{"_index":2863,"title":{},"body":{"components/InfoComponent.html":{}}}],["togglehelp",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["togglemembers",{"_index":3556,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["togglenav",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["togglenav(evt",{"_index":427,"title":{},"body":{"components/AppComponent.html":{}}}],["togglepause",{"_index":3386,"title":{},"body":{"injectables/MediaService.html":{}}}],["toggleselectall",{"_index":5015,"title":{},"body":{"components/TroopsComponent.html":{}}}],["toggleselection",{"_index":5016,"title":{},"body":{"components/TroopsComponent.html":{}}}],["toggleselection(team",{"_index":5040,"title":{},"body":{"components/TroopsComponent.html":{}}}],["toggletitle",{"_index":3561,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["token",{"_index":924,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/IUser.html":{},"injectables/UserService.html":{}}}],["tokengetter",{"_index":707,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tokenreceived",{"_index":5204,"title":{},"body":{"injectables/UserService.html":{}}}],["tokenreceived(token",{"_index":5215,"title":{},"body":{"injectables/UserService.html":{}}}],["tolowercasetransformer",{"_index":5423,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tolowercasetransformer(value",{"_index":4892,"title":{},"body":{"directives/ToCaseDirective.html":{},"miscellaneous/functions.html":{}}}],["tooltip",{"_index":3666,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["top",{"_index":206,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MultirangeComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/TeamsComponent.html":{}}}],["topmost",{"_index":3301,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["topromise",{"_index":5177,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["tot",{"_index":4598,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["total",{"_index":2767,"title":{},"body":{"interfaces/IScoreContainer.html":{},"interfaces/ITeamInDiscipline.html":{},"components/MacroDialogComponent.html":{},"interfaces/ParticipantCache.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["totalbyscoregroup",{"_index":2787,"title":{"interfaces/TotalByScoreGroup.html":{}},"body":{"interfaces/ITeamInDiscipline.html":{},"interfaces/TotalByScoreGroup.html":{},"coverage.html":{}}}],["totalbyscoregroup{group{id,type},total",{"_index":4716,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["totaltime",{"_index":2154,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["totype",{"_index":1404,"title":{},"body":{"injectables/CommonService.html":{}}}],["touchaction",{"_index":717,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["touppercasetransformer",{"_index":1316,"title":{},"body":{"components/ClubLookupComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["touppercasetransformer(v",{"_index":1329,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["touppercasetransformer(value",{"_index":4890,"title":{},"body":{"directives/ToCaseDirective.html":{},"miscellaneous/functions.html":{}}}],["tournament",{"_index":325,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IMedia.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["tournament'},{'name",{"_index":323,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["tournament(id:${this.parent.tournamentid}){id,name,clubid,venue{id,name},times{day,time",{"_index":3810,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["tournament(id:${this.parent.tournamentid}){id,name,startdate,enddate,venue{id,name",{"_index":4711,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["tournament.club.name",{"_index":4924,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.component",{"_index":4937,"title":{},"body":{"modules/TournamentModule.html":{}}}],["tournament.component.html",{"_index":4908,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.component.scss",{"_index":4907,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.createdby.name",{"_index":4926,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.enddate",{"_index":1425,"title":{},"body":{"injectables/CommonService.html":{},"components/EventComponent.html":{},"components/MacroDialogComponent.html":{},"components/TournamentComponent.html":{}}}],["tournament.location",{"_index":3202,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["tournament.name",{"_index":1535,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"components/MacroDialogComponent.html":{},"components/SignoffReportComponent.html":{},"components/TournamentComponent.html":{}}}],["tournament.startdate",{"_index":1424,"title":{},"body":{"injectables/CommonService.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"components/MacroDialogComponent.html":{},"components/TournamentComponent.html":{}}}],["tournament.times.length",{"_index":4144,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["tournament.times[0].train",{"_index":4130,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["tournament.venue.name",{"_index":4752,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["tournament.venue?.name",{"_index":4923,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament/disciplines/disciplines.module",{"_index":381,"title":{},"body":{"modules/AdvancedModule.html":{}}}],["tournament/divisions/divisions.module",{"_index":382,"title":{},"body":{"modules/AdvancedModule.html":{}}}],["tournament/score",{"_index":383,"title":{},"body":{"modules/AdvancedModule.html":{}}}],["tournament/tournament.module",{"_index":1554,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["tournament/tournament.routes",{"_index":1575,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["tournamentcomponent",{"_index":322,"title":{"components/TournamentComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tournamenteditorcomponent",{"_index":324,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentid",{"_index":1816,"title":{},"body":{"components/DisciplinesComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/EventComponent.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IMedia.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/IVenue.html":{},"components/ScorecardsComponent.html":{},"interfaces/TotalByScoreGroup.html":{}}}],["tournamentid}}`).topromise().then(res",{"_index":3430,"title":{},"body":{"injectables/MediaService.html":{}}}],["tournamentmodule",{"_index":1548,"title":{"modules/TournamentModule.html":{}},"body":{"modules/ConfigureModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentroutes",{"_index":1574,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["tournaments",{"_index":1469,"title":{},"body":{"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DisciplinesComponent.html":{},"components/HomeComponent.html":{},"interfaces/IVenue.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{}}}],["tournamentsource",{"_index":4909,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentsubscription",{"_index":4669,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["tournamenttype",{"_index":2547,"title":{"interfaces/TournamentType.html":{}},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{},"coverage.html":{}}}],["tr",{"_index":4759,"title":{},"body":{"components/SignoffReportComponent.html":{}}}],["track",{"_index":3250,"title":{},"body":{"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MultirangeComponent.html":{}}}],["trackbyfn",{"_index":1283,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["trackbyfn(index",{"_index":1300,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["tracks",{"_index":3310,"title":{},"body":{"components/MediaControlComponent.html":{}}}],["train",{"_index":2804,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"injectables/ScheduleService.html":{}}}],["training",{"_index":5523,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["trainingtime",{"_index":123,"title":{},"body":{"components/AdvancedComponent.html":{},"injectables/ScheduleService.html":{}}}],["trainingtime.value",{"_index":133,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["transferarrayitem",{"_index":3595,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["transferarrayitem(event.previouscontainer.data",{"_index":3607,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["transform",{"_index":574,"title":{},"body":{"components/AppComponent.html":{},"components/HelpBlockComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MultirangeComponent.html":{},"pipes/OrderByPipe.html":{},"components/SaveButtonComponent.html":{},"pipes/UtcDatePipe.html":{}}}],["transform(records",{"_index":3764,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["transform(value",{"_index":5273,"title":{},"body":{"pipes/UtcDatePipe.html":{}}}],["transformed",{"_index":4897,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["transition",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"components/HelpBlockComponent.html":{},"components/MemberSelectorComponent.html":{},"components/TroopsComponent.html":{}}}],["transition('expanded",{"_index":5067,"title":{},"body":{"components/TroopsComponent.html":{}}}],["translate",{"_index":174,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["translate(0",{"_index":3748,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["translate/core",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"guards/CanActivateRegistration.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MyHammerConfig.html":{},"interfaces/ParticipantCache.html":{},"components/RegisterComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"modules/SharedModule.html":{},"components/TeamsComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopsComponent.html":{},"components/VenueEditorComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":666,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{},"dependencies.html":{}}}],["translated",{"_index":2595,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["translatehttploader",{"_index":665,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["translatehttploader(http",{"_index":704,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["translateloader",{"_index":664,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["translatemodule",{"_index":663,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forroot",{"_index":724,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["translateservice",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"guards/CanActivateRegistration.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"interfaces/ParticipantCache.html":{},"components/RegisterComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TeamsComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopsComponent.html":{},"components/VenueEditorComponent.html":{}}}],["translatex",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["translation",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"components/InfoComponent.html":{}}}],["translations",{"_index":3798,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["translator",{"_index":799,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["transparent",{"_index":555,"title":{},"body":{"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["transport",{"_index":2805,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"dependencies.html":{}}}],["transportationcostperhead",{"_index":2798,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{}}}],["transporting",{"_index":2799,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["tricky",{"_index":824,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["trigger",{"_index":5058,"title":{},"body":{"components/TroopsComponent.html":{}}}],["trigger('detailexpand",{"_index":5062,"title":{},"body":{"components/TroopsComponent.html":{}}}],["triggered",{"_index":5571,"title":{},"body":{"index.html":{}}}],["troop",{"_index":327,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/IGymnast.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["troop.club.id",{"_index":4989,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["troop.clubid",{"_index":4988,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["troop.id",{"_index":3508,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["troop.length",{"_index":5112,"title":{},"body":{"components/TroopsComponent.html":{}}}],["troop.name",{"_index":3518,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["troop.push(member",{"_index":5114,"title":{},"body":{"components/TroopsComponent.html":{}}}],["troopchanged",{"_index":4947,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["troopdisplay",{"_index":3452,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["troopdisplay(troop",{"_index":3463,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["troopeditorcomponent",{"_index":326,"title":{"components/TroopEditorComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["troopform",{"_index":4944,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["troopform.value.name",{"_index":4999,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["trooplist",{"_index":3447,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["troopname",{"_index":3559,"title":{},"body":{"components/MemberSelectorComponent.html":{}}}],["troopreceived",{"_index":4946,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["troopreceived(troop",{"_index":4957,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["troops",{"_index":1593,"title":{},"body":{"modules/ConfigureRoutingModule.html":{},"components/MediaComponent.html":{},"components/MemberEditorComponent.html":{},"components/TroopsComponent.html":{}}}],["troops'},{'name",{"_index":329,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["troops.component.html",{"_index":5002,"title":{},"body":{"components/TroopsComponent.html":{}}}],["troops.component.scss",{"_index":5001,"title":{},"body":{"components/TroopsComponent.html":{}}}],["troops.push",{"_index":5109,"title":{},"body":{"components/TroopsComponent.html":{}}}],["troops.splice(troops.findindex(t",{"_index":3524,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["troops/:id",{"_index":1595,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["troops/add",{"_index":1594,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["troops/troop",{"_index":1377,"title":{},"body":{"modules/ClubModule.html":{}}}],["troops/troops.component",{"_index":1376,"title":{},"body":{"modules/ClubModule.html":{}}}],["troopscomponent",{"_index":328,"title":{"components/TroopsComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"modules/ClubModule.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["troopscount",{"_index":4945,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["troopselector",{"_index":3448,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["troopsize",{"_index":5102,"title":{},"body":{"components/TroopsComponent.html":{}}}],["troopsuggestion",{"_index":4948,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["troop{id,name",{"_index":3468,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["true",{"_index":118,"title":{},"body":{"components/AdvancedComponent.html":{},"modules/AppModule.html":{},"guards/CanActivateRegistration.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/DialogComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"modules/GraphQLModule.html":{},"components/HomeComponent.html":{},"directives/IfAuthDirective.html":{},"injectables/LoadIndicatorService.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScorecardsComponent.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/VenueEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":164,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["tslint:disable",{"_index":4234,"title":{},"body":{"components/ScoreEditorComponent.html":{},"directives/ToCaseDirective.html":{},"miscellaneous/variables.html":{}}}],["tue",{"_index":3801,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["twice",{"_index":1959,"title":{},"body":{"components/DisplayComponent.html":{}}}],["twitter:card",{"_index":4061,"title":{},"body":{"injectables/SEOService.html":{}}}],["twitter:site",{"_index":4063,"title":{},"body":{"injectables/SEOService.html":{}}}],["two",{"_index":2127,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/BrowserService.html":{},"guards/CanActivateRegistration.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/CommonService.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"interfaces/HttpAction.html":{},"interceptors/HttpCacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IBelongsToClub.html":{},"interfaces/IClub.html":{},"interfaces/IConfiguration.html":{},"interfaces/ICreatedBy.html":{},"interfaces/IDiscipline.html":{},"interfaces/IDivision.html":{},"interfaces/IGymnast.html":{},"interfaces/IJudge.html":{},"interfaces/IJudgeInScoreGroup.html":{},"interfaces/IMedia.html":{},"interfaces/IScore.html":{},"interfaces/IScoreContainer.html":{},"interfaces/IScoreGroup.html":{},"interfaces/ITeam.html":{},"interfaces/ITeamInDiscipline.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"interfaces/ITroop.html":{},"interfaces/IUser.html":{},"interfaces/IVenue.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"injectables/MyHammerConfig.html":{},"pipes/OrderByPipe.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"classes/ScoreContainer.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"interfaces/TotalByScoreGroup.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentType.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type(2n",{"_index":4313,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["type.avg",{"_index":4280,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["type.name",{"_index":2020,"title":{},"body":{"components/DivisionEditorComponent.html":{},"components/HomeComponent.html":{},"components/ScorecardsComponent.html":{}}}],["type.scoregroup.name",{"_index":4279,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["type.scoregroup.type",{"_index":4278,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["type=\"button",{"_index":4282,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["type=\"c",{"_index":4613,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["type=\"cd",{"_index":4616,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["type=\"d",{"_index":4615,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["type=\"e",{"_index":4618,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["type^=\"cde",{"_index":4619,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["typeahead",{"_index":1299,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/VenueEditorComponent.html":{}}}],["typeahead._emitselectevent(active",{"_index":5368,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["typeahead.options.find(o",{"_index":5365,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["typealiases",{"_index":5600,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1334,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/VenueEditorComponent.html":{}}}],["typeof",{"_index":107,"title":{},"body":{"components/AdvancedComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/BrowserService.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DivisionsComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GraphService.html":{},"directives/IfAuthDirective.html":{},"classes/Logger.html":{},"components/MediaComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreSystemComponent.html":{},"classes/SubjectSource.html":{},"directives/ToCaseDirective.html":{},"components/TroopsComponent.html":{}}}],["types",{"_index":1987,"title":{},"body":{"components/DivisionEditorComponent.html":{},"components/HomeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScorecardsComponent.html":{},"interfaces/TournamentType.html":{}}}],["types.map(t",{"_index":4592,"title":{},"body":{"components/ScorecardsComponent.html":{}}}],["typing",{"_index":5372,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["typos",{"_index":3976,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["u",{"_index":1002,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{}}}],["ul",{"_index":563,"title":{},"body":{"components/AppComponent.html":{},"components/MacroDialogComponent.html":{}}}],["undefined",{"_index":158,"title":{},"body":{"components/AdvancedComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/BrowserService.html":{},"classes/Logger.html":{},"injectables/MediaService.html":{},"interfaces/ParticipantCache.html":{}}}],["under",{"_index":830,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["unit",{"_index":1040,"title":{},"body":{"injectables/BrowserService.html":{},"index.html":{}}}],["universalinterceptor",{"_index":779,"title":{"interceptors/UniversalInterceptor.html":{}},"body":{"modules/AppServerModule.html":{},"interceptors/UniversalInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["unselectable",{"_index":4876,"title":{},"body":{"components/TeamsComponent.html":{}}}],["until",{"_index":1333,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/VenueEditorComponent.html":{}}}],["up",{"_index":162,"title":{},"body":{"components/AdvancedComponent.html":{},"interceptors/AuthInterceptor.html":{},"modules/GraphQLModule.html":{},"components/RegisterComponent.html":{},"components/ScoreEditorComponent.html":{},"components/UserEditorComponent.html":{},"index.html":{}}}],["updated",{"_index":2763,"title":{},"body":{"interfaces/IScore.html":{}}}],["updates",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["updatetrack",{"_index":3664,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["upgrade",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["upload",{"_index":3251,"title":{},"body":{"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{}}}],["upload(file",{"_index":3403,"title":{},"body":{"injectables/MediaService.html":{}}}],["uploaded",{"_index":3260,"title":{},"body":{"components/MediaComponent.html":{}}}],["upper",{"_index":4904,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["uppercase",{"_index":600,"title":{},"body":{"components/AppComponent.html":{},"components/ClubLookupComponent.html":{},"components/TroopEditorComponent.html":{}}}],["uppercase(this.troop.club",{"_index":4965,"title":{},"body":{"components/TroopEditorComponent.html":{}}}],["uppercase.directive",{"_index":1319,"title":{},"body":{"components/ClubLookupComponent.html":{},"modules/SharedModule.html":{}}}],["uppercase.directive.ts",{"_index":4879,"title":{},"body":{"directives/ToCaseDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["uppercase.directive.ts:27",{"_index":4883,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["uppercase.directive.ts:33",{"_index":4886,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["uppercase.directive.ts:40",{"_index":4885,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["uppercase/to",{"_index":1318,"title":{},"body":{"components/ClubLookupComponent.html":{},"modules/SharedModule.html":{},"directives/ToCaseDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["uri",{"_index":2387,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["url",{"_index":153,"title":{},"body":{"components/AdvancedComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/ConfigurationService.html":{},"interfaces/HttpAction.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"injectables/LoadIndicatorService.html":{},"injectables/SEOService.html":{},"injectables/ScheduleService.html":{},"interceptors/UniversalInterceptor.html":{},"interfaces/UrlActivity.html":{}}}],["urlactivity",{"_index":2968,"title":{"interfaces/UrlActivity.html":{}},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{},"coverage.html":{}}}],["urlpart",{"_index":2674,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["urls",{"_index":2678,"title":{},"body":{"injectables/HttpCacheService.html":{},"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["use",{"_index":2396,"title":{},"body":{"modules/GraphQLModule.html":{},"components/RegisterComponent.html":{},"directives/ToCaseDirective.html":{},"components/UserEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":746,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["used",{"_index":3306,"title":{},"body":{"components/MediaControlComponent.html":{},"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{}}}],["useexisting",{"_index":1270,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{},"directives/ToCaseDirective.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":726,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"injectables/MyHammerConfig.html":{}}}],["user",{"_index":331,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/IUser.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.club",{"_index":4000,"title":{},"body":{"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["user.club.name",{"_index":5264,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.clubid",{"_index":1248,"title":{},"body":{"components/ClubEditorComponent.html":{}}}],["user.name",{"_index":524,"title":{},"body":{"components/AppComponent.html":{},"components/UsersComponent.html":{}}}],["user.role",{"_index":1216,"title":{},"body":{"components/ClubEditorComponent.html":{},"directives/IfAuthDirective.html":{}}}],["user.role).name",{"_index":5263,"title":{},"body":{"components/UsersComponent.html":{}}}],["usereditorcomponent",{"_index":330,"title":{"components/UserEditorComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userform",{"_index":5153,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["userform.value.name",{"_index":5193,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["username",{"_index":3118,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetComponent.html":{},"injectables/UserService.html":{}}}],["userquery",{"_index":5154,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["userreceived",{"_index":5157,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["userreceived(user",{"_index":5164,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["userroutes",{"_index":1576,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["users",{"_index":1470,"title":{},"body":{"components/ConfigureComponent.html":{},"modules/ConfigureRoutingModule.html":{},"interfaces/IClub.html":{},"components/UsersComponent.html":{}}}],["users'},{'name",{"_index":333,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["users.component",{"_index":5269,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.component.html",{"_index":5251,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.scss",{"_index":5250,"title":{},"body":{"components/UsersComponent.html":{}}}],["users/users.module",{"_index":1555,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["users/users.routes",{"_index":1577,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["userscomponent",{"_index":332,"title":{"components/UsersComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":408,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"directives/IfAuthDirective.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/ParticipantCache.html":{},"interfaces/RoleData.html":{},"guards/RoleGuard.html":{},"components/ScoreEditorComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/VenueComponent.html":{},"coverage.html":{}}}],["usersmodule",{"_index":1549,"title":{"modules/UsersModule.html":{}},"body":{"modules/ConfigureModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersource",{"_index":5252,"title":{},"body":{"components/UsersComponent.html":{}}}],["usersubscription",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"directives/IfAuthDirective.html":{},"components/TroopsComponent.html":{}}}],["usevalue",{"_index":748,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["using",{"_index":3968,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreEditorComponent.html":{},"index.html":{}}}],["usingnetwork",{"_index":2969,"title":{},"body":{"injectables/LoadIndicatorService.html":{},"interfaces/UrlActivity.html":{}}}],["usually",{"_index":4141,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["utc",{"_index":5275,"title":{},"body":{"pipes/UtcDatePipe.html":{}}}],["utc(value).format(args",{"_index":5276,"title":{},"body":{"pipes/UtcDatePipe.html":{}}}],["utcdate",{"_index":5272,"title":{},"body":{"pipes/UtcDatePipe.html":{}}}],["utcdatepipe",{"_index":4642,"title":{"pipes/UtcDatePipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/UtcDatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["utilities",{"_index":2371,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["v",{"_index":62,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubLookupComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"interfaces/ParticipantCache.html":{},"components/ScoreGroupEditorComponent.html":{},"classes/SubjectSource.html":{},"components/VenueEditorComponent.html":{}}}],["v.length",{"_index":137,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["v.name",{"_index":1338,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["v.split",{"_index":3704,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["val",{"_index":1235,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"injectables/GraphService.html":{},"injectables/LoadIndicatorService.html":{},"components/ResetComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"interfaces/UrlActivity.html":{},"components/VenueEditorComponent.html":{}}}],["val.id",{"_index":2040,"title":{},"body":{"components/DivisionLookupComponent.html":{}}}],["val.id).subscribe(result",{"_index":4417,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["val.judges",{"_index":4414,"title":{},"body":{"components/ScoreGroupEditorComponent.html":{}}}],["valid",{"_index":3998,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validateresponse",{"_index":798,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["validateresponse(req",{"_index":894,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["validator",{"_index":3941,"title":{},"body":{"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{}}}],["validators",{"_index":1197,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/LoginComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["validators.email",{"_index":3997,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["validators.max(this.maxyear",{"_index":3476,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["validators.maxlength(4",{"_index":3478,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["validators.min(this.minyear",{"_index":3475,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["validators.minlength(4",{"_index":3477,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["validators.minlength(8",{"_index":5331,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["validators.required",{"_index":1209,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DivisionEditorComponent.html":{},"components/LoginComponent.html":{},"components/MemberEditorComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/TroopEditorComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["value",{"_index":71,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"injectables/ConfigurationService.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"components/HomeComponent.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"interfaces/IConfiguration.html":{},"interfaces/IScore.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"classes/Judge.html":{},"injectables/LoadIndicatorService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"injectables/MemberStateService.html":{},"components/MultirangeComponent.html":{},"components/RegisterComponent.html":{},"components/SaveButtonComponent.html":{},"injectables/ScheduleService.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"pipes/UtcDatePipe.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value(v",{"_index":3702,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["value(val",{"_index":1321,"title":{},"body":{"components/ClubLookupComponent.html":{}}}],["value.display1",{"_index":1521,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["value.display2",{"_index":1523,"title":{},"body":{"components/ConfigureDisplayComponent.html":{}}}],["value.replace(/^\"|\"$/g",{"_index":2185,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["value.substring(0",{"_index":2903,"title":{},"body":{"components/InfoComponent.html":{}}}],["value.substring(selection.end",{"_index":2907,"title":{},"body":{"components/InfoComponent.html":{}}}],["value.substring(selection.endofline",{"_index":2911,"title":{},"body":{"components/InfoComponent.html":{}}}],["value.substring(selection.start",{"_index":2905,"title":{},"body":{"components/InfoComponent.html":{}}}],["value.substring(selection.startofline",{"_index":2909,"title":{},"body":{"components/InfoComponent.html":{}}}],["value.tolowercase",{"_index":4893,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["value.touppercase",{"_index":4891,"title":{},"body":{"directives/ToCaseDirective.html":{}}}],["value['message",{"_index":2186,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["value[0",{"_index":2187,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["valuechanged",{"_index":34,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["valuechanged(key",{"_index":65,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["valuechanges",{"_index":3665,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["valuehigh",{"_index":3668,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["valuehigh(v",{"_index":3715,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["valuelow",{"_index":3667,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["valuelow(v",{"_index":3712,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["values",{"_index":103,"title":{},"body":{"components/AdvancedComponent.html":{},"interfaces/HttpAction.html":{},"injectables/HttpStateService.html":{},"components/MultirangeComponent.html":{},"components/ScoreSystemComponent.html":{}}}],["values.foreach(element",{"_index":2269,"title":{},"body":{"interfaces/ExpansionRow.html":{},"classes/ExpansionSource.html":{}}}],["values[0",{"_index":3706,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["values[1",{"_index":3708,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["values[k",{"_index":4518,"title":{},"body":{"components/ScoreSystemComponent.html":{}}}],["var",{"_index":225,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["variable",{"_index":5399,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3727,"title":{"miscellaneous/variables.html":{}},"body":{"components/MultirangeComponent.html":{},"miscellaneous/variables.html":{}}}],["venue",{"_index":337,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{}}}],["venue'},{'name",{"_index":335,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{}}}],["venue.address",{"_index":5293,"title":{},"body":{"components/VenueComponent.html":{}}}],["venue.component",{"_index":5392,"title":{},"body":{"modules/VenueModule.html":{}}}],["venue.component.html",{"_index":5279,"title":{},"body":{"components/VenueComponent.html":{}}}],["venue.component.scss",{"_index":5278,"title":{},"body":{"components/VenueComponent.html":{}}}],["venue.contact",{"_index":5289,"title":{},"body":{"components/VenueComponent.html":{}}}],["venue.createdby.name",{"_index":5294,"title":{},"body":{"components/VenueComponent.html":{}}}],["venue.name",{"_index":5288,"title":{},"body":{"components/VenueComponent.html":{}}}],["venue.rentalcost",{"_index":5292,"title":{},"body":{"components/VenueComponent.html":{}}}],["venue/venue.routes",{"_index":1573,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["venue[k",{"_index":5350,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["venuecomponent",{"_index":334,"title":{"components/VenueComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"coverage.html":{},"overview.html":{}}}],["venueeditorcomponent",{"_index":336,"title":{"components/VenueEditorComponent.html":{}},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/AwardsComponent.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"modules/ConfigureRoutingModule.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"modules/VenueModule.html":{},"coverage.html":{},"overview.html":{}}}],["venueform",{"_index":5300,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["venueform.value.name",{"_index":5385,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["venueid",{"_index":2800,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/ITournamentTimes.html":{}}}],["venuemodule",{"_index":1550,"title":{"modules/VenueModule.html":{}},"body":{"modules/ConfigureModule.html":{},"modules/VenueModule.html":{},"modules.html":{},"overview.html":{}}}],["venuename",{"_index":4913,"title":{},"body":{"components/TournamentComponent.html":{},"components/VenueEditorComponent.html":{}}}],["venuequery",{"_index":5301,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["venuereceived",{"_index":5305,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["venuereceived(venue",{"_index":5315,"title":{},"body":{"components/VenueEditorComponent.html":{}}}],["venueroutes",{"_index":1572,"title":{},"body":{"modules/ConfigureRoutingModule.html":{}}}],["venuesource",{"_index":5280,"title":{},"body":{"components/VenueComponent.html":{}}}],["venue{id,name,address,capacity",{"_index":4920,"title":{},"body":{"components/TournamentComponent.html":{}}}],["venue{id,name,address,capacity,latitude,longitude",{"_index":2554,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["verbs",{"_index":832,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["verify",{"_index":1727,"title":{},"body":{"components/DialogComponent.html":{},"components/MacroDialogComponent.html":{}}}],["version",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["vertical",{"_index":1541,"title":{},"body":{"components/ConfigureDisplayComponent.html":{},"components/HelpBlockComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["view",{"_index":2243,"title":{},"body":{"modules/EventRoutingModule.html":{},"components/MemberSelectorComponent.html":{}}}],["viewchild",{"_index":90,"title":{},"body":{"components/AdvancedComponent.html":{},"components/InfoComponent.html":{},"components/MultirangeComponent.html":{}}}],["viewchild('area",{"_index":82,"title":{},"body":{"components/AdvancedComponent.html":{}}}],["viewchild('high",{"_index":3683,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["viewchild('infotext",{"_index":2886,"title":{},"body":{"components/InfoComponent.html":{}}}],["viewchild('low",{"_index":3685,"title":{},"body":{"components/MultirangeComponent.html":{}}}],["viewchildren",{"_index":3778,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["viewchildren('row",{"_index":3783,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["viewcontainer",{"_index":2835,"title":{},"body":{"directives/IfAuthDirective.html":{}}}],["viewcontainerref",{"_index":2836,"title":{},"body":{"directives/IfAuthDirective.html":{},"interfaces/ParticipantCache.html":{}}}],["viewencapsulation",{"_index":3053,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["viewencapsulation.none",{"_index":3049,"title":{},"body":{"components/LoadSpinnerComponent.html":{}}}],["views/home/home.component",{"_index":692,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/MyHammerConfig.html":{}}}],["views/home/login/login.component",{"_index":693,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/MyHammerConfig.html":{}}}],["views/home/logout/logout.component",{"_index":694,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/MyHammerConfig.html":{}}}],["views/home/register/register.component",{"_index":695,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/MyHammerConfig.html":{}}}],["views/home/register/registration",{"_index":756,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["views/home/reset/reset.component",{"_index":697,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/MyHammerConfig.html":{}}}],["visibility",{"_index":5065,"title":{},"body":{"components/TroopsComponent.html":{}}}],["visible",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"directives/IfAuthDirective.html":{},"components/TroopsComponent.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/AwardsComponent.html":{},"injectables/BrowserService.html":{},"components/ClubComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/ContextMenuComponent.html":{},"components/DialogComponent.html":{},"components/DisciplineEditorComponent.html":{},"components/DisciplinesComponent.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"components/DivisionEditorComponent.html":{},"components/DivisionLookupComponent.html":{},"components/DivisionsComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/EventComponent.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpCacheService.html":{},"directives/IfAuthDirective.html":{},"components/InfoComponent.html":{},"injectables/LoadIndicatorService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"injectables/MediaService.html":{},"components/MemberEditorComponent.html":{},"components/MemberSelectorComponent.html":{},"components/MultirangeComponent.html":{},"components/PasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"injectables/SEOService.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScoreGroupEditorComponent.html":{},"components/ScoreSystemComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{},"components/StatisticsComponent.html":{},"classes/SubjectSource.html":{},"components/TeamsComponent.html":{},"directives/ToCaseDirective.html":{},"components/TournamentComponent.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"components/UserEditorComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"components/VenueComponent.html":{},"components/VenueEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["vol",{"_index":3438,"title":{},"body":{"injectables/MediaService.html":{}}}],["vscode",{"_index":5556,"title":{},"body":{"index.html":{}}}],["wait",{"_index":1332,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/VenueEditorComponent.html":{}}}],["want",{"_index":485,"title":{},"body":{"components/AppComponent.html":{},"components/MemberSelectorComponent.html":{},"components/RegisterComponent.html":{},"components/UserEditorComponent.html":{},"components/VenueEditorComponent.html":{}}}],["warn",{"_index":4285,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["warning",{"_index":979,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/SaveButtonComponent.html":{}}}],["watchquery",{"_index":2404,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["way",{"_index":5537,"title":{},"body":{"index.html":{}}}],["ways",{"_index":5614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["we're",{"_index":825,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/TeamsComponent.html":{}}}],["we've",{"_index":4009,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["we\\'re",{"_index":4877,"title":{},"body":{"components/TeamsComponent.html":{}}}],["web",{"_index":2586,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/TournamentType.html":{}}}],["webkit",{"_index":3735,"title":{},"body":{"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/SignoffReportComponent.html":{}}}],["websocket",{"_index":2379,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["websocketlink",{"_index":2363,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["wed",{"_index":3802,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["weekdays",{"_index":3799,"title":{},"body":{"interfaces/ParticipantCache.html":{}}}],["weight",{"_index":197,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/DisplayComponent.html":{},"components/EventComponent.html":{},"components/ScoreEditorComponent.html":{},"injectables/UserService.html":{}}}],["went",{"_index":991,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["whatsplaying",{"_index":3388,"title":{},"body":{"injectables/MediaService.html":{}}}],["white",{"_index":578,"title":{},"body":{"components/AppComponent.html":{},"components/DialogComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FullscreenComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberSelectorComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["whitelisteddomains",{"_index":738,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["width",{"_index":177,"title":{},"body":{"components/AdvancedComponent.html":{},"components/AppComponent.html":{},"components/ClubEditorComponent.html":{},"components/ClubLookupComponent.html":{},"components/ConfigureComponent.html":{},"components/ConfigureDisplayComponent.html":{},"components/DialogComponent.html":{},"components/DivisionLookupComponent.html":{},"components/EventComponent.html":{},"components/HelpBlockComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/MacroDialogComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MemberEditorComponent.html":{},"components/MultirangeComponent.html":{},"components/RegisterComponent.html":{},"components/ResetComponent.html":{},"components/SaveButtonComponent.html":{},"components/ScoreEditorComponent.html":{},"components/ScorecardsComponent.html":{},"components/TournamentComponent.html":{},"components/VenueComponent.html":{}}}],["window",{"_index":1048,"title":{},"body":{"injectables/BrowserService.html":{},"classes/Logger.html":{}}}],["window.console",{"_index":3092,"title":{},"body":{"classes/Logger.html":{}}}],["window.localstorage",{"_index":1070,"title":{},"body":{"injectables/BrowserService.html":{}}}],["window.sessionstorage",{"_index":1071,"title":{},"body":{"injectables/BrowserService.html":{}}}],["window:keydown",{"_index":2325,"title":{},"body":{"components/FullscreenComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["window:keydown(event",{"_index":4176,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["window:keydown(evt",{"_index":2329,"title":{},"body":{"components/FullscreenComponent.html":{}}}],["window:keyup",{"_index":1169,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/TournamentComponent.html":{}}}],["window:keyup(evt",{"_index":1173,"title":{},"body":{"components/ClubEditorComponent.html":{},"components/TournamentComponent.html":{}}}],["wish",{"_index":3190,"title":{},"body":{"components/MacroDialogComponent.html":{}}}],["within",{"_index":2747,"title":{},"body":{"interfaces/IJudgeInScoreGroup.html":{}}}],["without",{"_index":2245,"title":{},"body":{"modules/EventRoutingModule.html":{}}}],["wont",{"_index":2239,"title":{},"body":{"modules/EventRoutingModule.html":{}}}],["work",{"_index":5554,"title":{},"body":{"index.html":{}}}],["worker",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{},"dependencies.html":{}}}],["worker.js",{"_index":722,"title":{},"body":{"modules/AppModule.html":{},"injectables/MyHammerConfig.html":{}}}],["works",{"_index":1031,"title":{},"body":{"components/AwardsComponent.html":{}}}],["wrap",{"_index":2164,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{},"components/MemberEditorComponent.html":{},"components/ScorecardsComponent.html":{}}}],["write",{"_index":4225,"title":{},"body":{"components/ScoreEditorComponent.html":{}}}],["writevalue",{"_index":1284,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{},"directives/ToCaseDirective.html":{}}}],["writevalue(value",{"_index":1303,"title":{},"body":{"components/ClubLookupComponent.html":{},"components/DivisionLookupComponent.html":{},"directives/ToCaseDirective.html":{}}}],["wrong",{"_index":992,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ws",{"_index":2364,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["wsclient",{"_index":2386,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["wsprotocol",{"_index":2384,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["wsprotocol}//${location.host}${graphqlsuburi",{"_index":2388,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["wsurl",{"_index":5608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["www.gymsystems.org",{"_index":4064,"title":{},"body":{"injectables/SEOService.html":{},"components/ScorecardsComponent.html":{},"miscellaneous/variables.html":{}}}],["xs",{"_index":5195,"title":{},"body":{"components/UserEditorComponent.html":{}}}],["yarn",{"_index":5542,"title":{},"body":{"index.html":{}}}],["year",{"_index":1434,"title":{},"body":{"injectables/CommonService.html":{}}}],["year').year",{"_index":3465,"title":{},"body":{"components/MemberEditorComponent.html":{}}}],["years",{"_index":3635,"title":{},"body":{"components/MemberSelectorComponent.html":{},"components/TroopsComponent.html":{}}}],["yes",{"_index":1408,"title":{},"body":{"injectables/CommonService.html":{},"components/DisplayComponent.html":{},"injectables/DisplayService.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpansionSource.html":{},"components/FullscreenComponent.html":{},"injectables/GraphService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpStateService.html":{},"components/LogoutComponent.html":{},"injectables/MediaService.html":{},"pipes/OrderByPipe.html":{},"injectables/SEOService.html":{},"components/ScoreEditorComponent.html":{},"components/SignoffReportComponent.html":{},"classes/SubjectSource.html":{},"components/TroopEditorComponent.html":{},"components/TroopsComponent.html":{},"injectables/UserService.html":{},"pipes/UtcDatePipe.html":{}}}],["yyyy",{"_index":2212,"title":{},"body":{"components/EventComponent.html":{},"components/MemberSelectorComponent.html":{},"components/TroopsComponent.html":{}}}],["z",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"components/DialogComponent.html":{},"components/EventComponent.html":{},"components/FullscreenComponent.html":{},"components/HelpBlockComponent.html":{},"components/InfoComponent.html":{},"components/MediaComponent.html":{},"components/MediaControlComponent.html":{},"components/MultirangeComponent.html":{},"components/ScoreEditorComponent.html":{}}}],["z]+\"/gm",{"_index":945,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["za",{"_index":944,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["zone.js",{"_index":5502,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":363,"title":{},"body":{"modules/AdvancedModule.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ClubModule.html":{},"modules/ConfigureModule.html":{},"modules/ConfigureSharedModule.html":{},"modules/DisciplinesModule.html":{},"modules/DivisionsModule.html":{},"modules/EventModule.html":{},"modules/ScoreSystemModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UsersModule.html":{},"modules/VenueModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdvancedComponent.html":{"url":"components/AdvancedComponent.html","title":"component - AdvancedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdvancedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/advanced/advanced.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-advanced\n            \n\n            \n                styleUrls\n                ./advanced.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./advanced.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultValues\n                            \n                            \n                                configForm\n                            \n                            \n                                configuration\n                            \n                            \n                                isLoading\n                            \n                            \n                                selected\n                            \n                            \n                                textAreas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backup\n                            \n                            \n                                getRows\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                            \n                                valueChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    defaultValues\n                                \n                                \n                                    defaultValueKeys\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(browser: BrowserService, config: ConfigurationService, fb: FormBuilder, seo: SEOService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/advanced/advanced.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        browser\n                                                  \n                                                        \n                                                                        BrowserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seo\n                                                  \n                                                        \n                                                                        SEOService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            backup\n                        \n                        \n                    \n                \n            \n            \n                \nbackup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/advanced/advanced.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRows\n                        \n                        \n                    \n                \n            \n            \n                \ngetRows(v)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/advanced/advanced.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/advanced/advanced.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/advanced/advanced.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueChanged(key, $event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/advanced/advanced.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/advanced/advanced.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/advanced/advanced.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IConfiguration[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/advanced/advanced.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/advanced/advanced.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/advanced/advanced.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textAreas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('area', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/advanced/advanced.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        defaultValues\n                    \n                \n\n                \n                    \n                        getdefaultValues()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/advanced/advanced.component.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        defaultValueKeys\n                    \n                \n\n                \n                    \n                        getdefaultValueKeys()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/advanced/advanced.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { ConfigurationService } from 'app/shared/services/api';\nimport { IConfiguration } from 'app/model';\nimport { HttpClient } from '@angular/common/http';\nimport { BrowserService } from 'app/shared/browser.service';\nimport { SEOService } from 'app/shared/services/seo.service';\n\n@Component({\n  selector: 'app-advanced',\n  templateUrl: './advanced.component.html',\n  styleUrls: ['./advanced.component.scss']\n})\nexport class AdvancedComponent implements OnInit {\n  @ViewChild('area', { static: false }) textAreas: ElementRef;\n  configuration: IConfiguration[];\n  selected;\n  isLoading = false;\n  configForm: FormGroup = null;\n  _defaultValues = null;\n  get defaultValues() {\n    if (this.configuration && !this._defaultValues) {\n      const values = this.configuration.find(c => c.name === 'defaultValues').value;\n      this._defaultValues = (typeof values === 'string' ? JSON.parse(values) : values);\n    }\n    return this._defaultValues;\n  }\n  get defaultValueKeys() {\n    return this.configuration ? Object.keys(this.defaultValues) : null;\n  }\n\n  constructor(private browser: BrowserService, private config: ConfigurationService, private fb: FormBuilder, private seo: SEOService, private http: HttpClient) { }\n\n  ngOnInit() {\n    // SEO\n    this.seo.setTitle('Advanced configuration', 'Configuring advanced system properties');\n\n    this.isLoading = true;\n    this.configForm = this.fb.group({\n      'executionTime': [0],\n      'trainingTime': [0],\n    });\n\n    this.config.all().subscribe(res => {\n      this.configuration = res;\n      this.selected = this.defaultValueKeys[0];\n      setTimeout(() => this.isLoading = false);\n\n      const executionTime = this.configuration.find(c => c.name === 'scheduleExecutionTime');\n      const trainingTime = this.configuration.find(c => c.name === 'scheduleTrainingTime');\n\n      this.configForm.setValue({\n        'executionTime': executionTime ? executionTime.value : 0,\n        'trainingTime': trainingTime ? trainingTime.value : 0,\n      });\n    });\n  }\n\n  getRows(v) {\n    if (Array.isArray(v)) { return 2 + (Object.keys(v[0]).length + 2) * v.length; }\n    return 2 + Object.keys(v).length;\n  }\n\n  valueChanged(key, $event) {\n    if (!this.isLoading) {\n      this.defaultValues[key] = $event;\n      this.save();\n    }\n  }\n\n  save() {\n    const newConfig = [\n      { name: 'scheduleExecutionTime', value: this.configForm.value.executionTime },\n      { name: 'scheduleTrainingTime', value: this.configForm.value.trainingTime },\n      { name: 'defaultValues', value: this.defaultValues }\n    ];\n    this.config.save(newConfig).subscribe(res => this.configuration = res);\n  }\n\n  backup() {\n    this.http.get('/api/administration/backup', { responseType: 'arraybuffer' }).subscribe(res => {\n      const blob = new Blob([res], { type: '' });\n      const url = this.browser.window().URL.createObjectURL(blob);\n      const pwa = this.browser.window().open(url);\n      if (!pwa || pwa.closed || typeof pwa.closed === 'undefined') {\n        alert('Please disable your Pop-up blocker and try again.');\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n  Advanced settings\n\n\n\n\n\n  \n    Default floor time\n    \n      \n        \n          \n          min\n        \n      \n      \n        \n          \n          min\n        \n      \n    \n  \n\n  \n  \n    Default values\n    \n      \n        \n          \n             Divisions\n          \n          \n        \n        \n          \n             Disciplines\n          \n          \n          \n        \n        \n          \n             Score system\n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n\n    {{ 'Export DB' | translate }}\n  \n\n\n    \n\n    \n                \n                    ./advanced.component.scss\n                \n                @import \"../../../../styles/variables\";\ntextarea {\n  width: 100%;\n  min-height: 10rem;\n  border: 1px solid lighten($text-color, 30%);\n  border-radius: 4px;\n}\n\nsection {\n  margin-bottom: 2rem;\n  header {\n    max-width: 9rem;\n    font-weight: bold;\n    text-align: right;\n    padding-right: 0.5rem;\n  }\n}\n\n.tab-panel {\n  margin-top: 1em;\n}\n\narticle {\n  > div {\n    padding: 0 1em;\n  }\n  > div, > div > span {\n    display: inline-block;\n  }\n}\n\n// .ageLimits {\n//   > article > div {\n//     > label {\n//       display: block;\n//       text-align: center;\n//       font-weight: bold;\n//     }\n//   }\n//   mat-form-field {\n//     width: 2.5rem;\n//   }\n// }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Advanced settings      Default floor time                                      min                                                min                            Default values                                         Divisions                                                           Disciplines                                                                     Score system                                                            {{ \\'Export DB\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdvancedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdvancedModule.html":{"url":"modules/AdvancedModule.html","title":"module - AdvancedModule","body":"\n                   \n\n\n\n\n    Modules\n    AdvancedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdvancedModule\n\n\n\ncluster_AdvancedModule_declarations\n\n\n\ncluster_AdvancedModule_imports\n\n\n\n\nAdvancedComponent\n\nAdvancedComponent\n\n\n\nAdvancedModule\n\nAdvancedModule\n\nAdvancedModule -->\n\nAdvancedComponent->AdvancedModule\n\n\n\n\n\nDisciplinesModule\n\nDisciplinesModule\n\nAdvancedModule -->\n\nDisciplinesModule->AdvancedModule\n\n\n\n\n\nDivisionsModule\n\nDivisionsModule\n\nAdvancedModule -->\n\nDivisionsModule->AdvancedModule\n\n\n\n\n\nScoreSystemModule\n\nScoreSystemModule\n\nAdvancedModule -->\n\nScoreSystemModule->AdvancedModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdvancedModule -->\n\nSharedModule->AdvancedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/configure/advanced/advanced.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdvancedComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DisciplinesModule\n                        \n                        \n                            DivisionsModule\n                        \n                        \n                            ScoreSystemModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatTabsModule, MatFormFieldModule, MatInputModule, MatButtonModule } from '@angular/material';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport { DisciplinesModule } from '../tournament/disciplines/disciplines.module';\nimport { DivisionsModule } from '../tournament/divisions/divisions.module';\nimport { ScoreSystemModule } from '../tournament/score-system/score-system.module';\n\nimport { AdvancedComponent } from './advanced.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n\n    DragDropModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n\n    SharedModule,\n    DisciplinesModule,\n    DivisionsModule,\n    ScoreSystemModule,\n  ],\n  declarations: [\n    AdvancedComponent\n  ]\n})\nexport class AdvancedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    AfterContentChecked\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentHelpBlocks\n                            \n                            \n                                navState\n                            \n                            \n                                showHelp\n                            \n                            \n                                user\n                            \n                            \n                                userSubscription\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                closeNav\n                            \n                            \n                                ngAfterContentChecked\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleHelp\n                            \n                            \n                                toggleNav\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    locationHref\n                                \n                                \n                                    currentLang\n                                \n                                \n                                    hasHelp\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, translate: TranslateService, http: HttpClient, router: Router, angulartics: Angulartics2GoogleAnalytics, updates: SwUpdate, browser: BrowserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        angulartics\n                                                  \n                                                        \n                                                                    Angulartics2GoogleAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updates\n                                                  \n                                                        \n                                                                        SwUpdate\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        browser\n                                                  \n                                                        \n                                                                        BrowserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeLang\n                        \n                        \n                    \n                \n            \n            \n                \nchangeLang(lang)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeNav\n                        \n                        \n                    \n                \n            \n            \n                \ncloseNav(evt: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentChecked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleHelp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleNav\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleNav(evt: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentHelpBlocks\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showHelp\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        locationHref\n                    \n                \n\n                \n                    \n                        getlocationHref()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentLang\n                    \n                \n\n                \n                    \n                        getcurrentLang()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasHelp\n                    \n                \n\n                \n                    \n                        gethasHelp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:35\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, AfterContentChecked } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SwUpdate } from '@angular/service-worker';\nimport { HttpClient } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\n\nimport { TranslateService } from '@ngx-translate/core';\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\nimport { environment } from '../environments/environment';\n\nimport { IUser } from './model/IUser';\nimport { UserService } from './shared/services/api';\nimport { Logger } from './shared/services/Logger';\nimport { BrowserService } from './shared/browser.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy, AfterContentChecked {\n  navState = false;\n  currentHelpBlocks;\n\n  userSubscription: Subscription;\n  user: IUser;\n  version = '';\n  get locationHref() {\n    const loc = this.browser.window().location;\n    return (loc ? encodeURIComponent(loc.pathname) : '');\n  }\n\n  get currentLang() { return this.translate.currentLang; }\n\n  get hasHelp() {\n    return this.currentHelpBlocks > 0;\n  }\n\n  showHelp = false;\n\n  constructor(\n    private userService: UserService,\n    private translate: TranslateService,\n    private http: HttpClient,\n    private router: Router,\n    private angulartics: Angulartics2GoogleAnalytics,\n    private updates: SwUpdate,\n    private browser: BrowserService\n  ) {\n    if (environment.production) {\n      this.angulartics.startTracking();\n    }\n  }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    // Identify dev mode\n    // Set translation defaults\n    this.translate.addLangs(['en', 'no']);\n    this.translate.setDefaultLang('en');\n    const browserLang: string = this.translate.getBrowserLang();\n    const newLang = this.browser.localStorage().getItem('lang') || browserLang;\n    this.changeLang(newLang ? newLang : 'en');\n\n    // For debugging routes (only visible in dev mode)\n    this.router.events.subscribe(event => Logger.debug(event));\n\n    this.updates.available.subscribe(event => {\n      if (confirm(`A new version is available. Do you want to upgrade?`)) {\n        this.updates.activateUpdate().then(() => this.browser.document().location.reload());\n      }\n    });\n\n    this.userSubscription = this.userService.getMe(true).subscribe(user => this.user = user);\n    this.http.get('/api').subscribe((res: any) => this.version = res.version);\n  }\n\n  /**\n   *\n   */\n  ngAfterContentChecked() {\n    const helpBlocks = this.browser.document().querySelectorAll('app-help-block') || [];\n    if (helpBlocks && this.currentHelpBlocks !== helpBlocks.length) {\n      this.currentHelpBlocks = helpBlocks.length;\n    }\n  }\n\n  /**\n   *\n   */\n  ngOnDestroy() {\n    if (this.userSubscription) {\n      this.userSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   *\n   */\n  closeNav(evt: MouseEvent): void {\n    if (this.navState) {\n      return this.toggleNav(evt);\n    }\n  }\n\n  /**\n   *\n   */\n  toggleNav(evt: MouseEvent): void {\n    this.navState = !this.navState;\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  /**\n   *\n   */\n  toggleHelp() {\n    this.showHelp = !this.showHelp;\n  }\n\n  /**\n   *\n   */\n  changeLang(lang) {\n    if (lang.match(/no|nb|no-nb/)) { lang = 'no'; } else { lang = 'en'; }\n    this.browser.localStorage().setItem('lang', lang);\n    Logger.debug('%c** Changing language: ', 'font-size: 1.1em; font-weight: bold; color: green', this.currentLang, lang);\n    return this.translate.use(lang);\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n  \n\n\n\n\n  \n    \n    \n      GymSystems\n    \n\n    \n\n    \n    \n      \n        \n      \n      \n        \n           Home \n      \n      \n        \n           Login \n      \n      \n        \n           Configure \n      \n      \n        \n           Log out \n      \n    \n\n    \n    \n      \n    \n  \n\n\n\n  \n\n\n\n  \n  \n    \n    \n    \n  \n\n  \n    \n      \n        \n        {{ 'Register flaws or request features' | translate }}\n      \n    \n    \n      \n        \n      \n      \n        \n      \n    \n    \n      Logged in as: {{ user.name }}\n      v: {{ version }}\n    \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import \"../styles/variables\";\n\n// Top navbar\nnav {\n  position: fixed;\n  top: 0;\n  z-index: 10;\n  display: block;\n  height: $navHeight;\n  background: $primary;\n  width: 100%;\n  &:after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n  a {\n    padding: 1rem 0.5rem 1rem 0.5rem;\n    display: inline-block;\n  }\n  a,\n  .fa {\n    color: rgba(white, 0.8);\n    text-decoration: none;\n    height: 3.5rem;\n  }\n\n\n  .mobile-menu-toggle {\n    cursor: pointer;\n    border-radius: $rounded;\n    padding: 0.8rem 0.5rem 1.2rem 0.5rem;\n    display: none;\n    margin-right: 1rem;\n    @media (max-width: $stop1) {\n      display: block;\n    }\n    &:hover {\n      border: 1px solid transparent;\n      text-shadow: none;\n    }\n  }\n\n  > .container {\n    display: flex;\n    header {\n      margin: 0 3rem 0 1rem;\n    }\n    .spacer {\n      flex: 1;\n    }\n  }\n  // Site menu\n  ul {\n    list-style: none;\n    padding-left: 0;\n    height: $navHeight;\n    @media (max-width: $stop1) {\n      width: 100%;\n      height: 100vh !important;\n      position: fixed;\n      top: $navHeight;\n      right: -100%;\n      background: $primary;\n      transition: 300ms ease all;\n      z-index: 500;\n      &.open {\n        transform: translateX(-100%);\n      }\n    }\n    li {\n      display: inline-block;\n      &.active {\n        a {\n          color: white;\n        }\n        background: darken(rgba($primary, 0.4), 4%);\n        border-left-color: rgba(black, 0.3);\n        border-right-color: rgba(white, 0.3);\n        box-shadow: 0px 5px 20px -4px rgba(0, 0, 0, 0.3) inset, 1px 0 8px rgba(255, 255, 255, 0.2);\n        text-shadow: 1px 1px 1px rgba(black, 0.4);\n        background-image: linear-gradient(to bottom, transparent 95%, white 98%);\n      }\n      @media (max-width: $stop1) {\n        float: none;\n        display: block;\n        width: 100%;\n      }\n      a {\n        text-transform: uppercase;\n        transition: color 0.1s;\n        border-left: 1px solid transparent;\n        border-right: 1px solid transparent;\n        //text-shadow: 1px 1px 3px rgba(black, 0.4);\n        &:hover {\n          color: white;\n          background-image: radial-gradient(ellipse closest-side at center center, rgba($primaryDark, 0.4) 0%, transparent 100%);\n        }\n        @media (max-width: $stop1) {\n          width: 100%;\n        }\n      }\n    }\n  }\n}\n\n.sidebar {\n\n}\n\n.main-content {\n  > * {\n    position: relative;\n    z-index: 1;\n  }\n  @media (max-width: 720px) {\n    padding: 10px;\n  }\n}\n\n// Help functionality\n.show-help {\n  a {\n    transform-origin: center;\n    transition: 0.2s transform ease-in-out;\n  }\n  &.active {\n    background: transparent;\n    box-shadow: none;\n    a {\n      transform: scale(1.2);\n    }\n  }\n}\n\nfooter {\n  @media print {\n    display: none;\n  }\n  .container {\n    position: relative;\n\n  }\n  .user-info {\n    position: absolute;\n    top: 0;\n    right: 0;\n    a {\n      color: white;\n    }\n  }\n  .logo {\n    margin-top: -1rem;\n    img {\n      margin-right: 1rem;\n      filter: grayscale(100%) brightness(10);\n    }\n  }\n  .feedback {\n    color: white;\n    text-align: center;\n    a {\n      text-decoration: none;\n      color: inherit;\n    }\n  }\n}\n\n.language-selector {\n  position: absolute;\n  bottom: 1rem;\n  right: 0;\n  .flag-icon-large {\n    $size: 2.5rem;\n    width: $size;\n    height: $size;\n  }\n  @media (min-width: $stop1) {\n    $size: 1.5rem;\n    .mat-icon-button {\n      width: $size;\n      height: $size;\n      line-height: $size;\n    }\n    .flag-icon-large {\n      width: $size;\n      height: $size;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      GymSystems                                                             Home                                Login                                Configure                                Log out                                                                               {{ \\'Register flaws or request features\\' | translate }}                                                                    Logged in as: {{ user.name }}      v: {{ version }}                                                      '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAppModule -->\n\nLogoutComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetComponent\n\nResetComponent\n\nAppModule -->\n\nResetComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nHttpCacheInterceptor\n\nHttpCacheInterceptor\n\nAppModule -->\n\nHttpCacheInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            HttpCacheInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphQLModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpCacheInterceptor } from './shared/interceptors/http-cache.interceptor';\n// Framework & libs\nimport { BrowserModule, HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID, Injectable } from '@angular/core';\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { JwtModule } from '@auth0/angular-jwt';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { Angulartics2Module } from 'angulartics2';\nimport { MarkdownToHtmlModule } from 'markdown-to-html-pipe';\nimport { AgmCoreModule } from '@agm/core';\nimport {\n  MatCardModule, MatSnackBarModule, MatInputModule, MatFormFieldModule, MatAutocompleteModule,\n  MatOptionModule, MatSlideToggleModule, MatButtonModule, MatDialogModule, MatListModule\n} from '@angular/material';\n\nimport { environment } from '../environments/environment';\n\n// Locale\nimport { registerLocaleData } from '@angular/common';\nimport localeNo from '@angular/common/locales/nb';\nregisterLocaleData(localeNo);\n\n// Module dependencies\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\n\n// Other services\nimport { AuthInterceptor } from './shared/interceptors/auth.interceptor';\n\n// Module components\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './views/home/home.component';\nimport { LoginComponent } from './views/home/login/login.component';\nimport { LogoutComponent } from './views/home/logout/logout.component';\nimport { RegisterComponent } from './views/home/register/register.component';\nimport { IUser } from './model/IUser';\nimport { GraphQLModule } from './graphql.module';\nimport { BrowserService } from './shared/browser.service';\nimport { ResetComponent } from './views/home/reset/reset.component';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './i18n/', '.json');\n}\n\nexport function tokenGetter() {\n  const currentUser: IUser = JSON.parse(BrowserService.sessionStorage().getItem('currentUser'));\n  return currentUser ? currentUser.token : null;\n}\n\n@Injectable()\nexport class MyHammerConfig extends HammerGestureConfig {\n  buildHammer(element: HTMLElement) {\n    const mc = new Hammer(element, {\n      touchAction: 'auto',\n    });\n    return mc;\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    LogoutComponent,\n    RegisterComponent,\n    ResetComponent\n  ],\n  imports: [\n    // Framework modules\n    BrowserModule.withServerTransition({ appId: 'gymsystems' }),\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production }),\n    TranslateModule.forRoot({\n      loader: { provide: TranslateLoader, useFactory: HttpLoaderFactory, deps: [HttpClient] }\n    }),\n    MarkdownToHtmlModule,\n    Angulartics2Module.forRoot({\n      pageTracking: {\n        clearIds: true,\n        clearQueryParams: true\n      }\n    }),\n    AgmCoreModule.forRoot({ apiKey: environment.geoApiKey }),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        skipWhenExpired: true,\n        whitelistedDomains: ['localhost', 'gymsystems.org']\n      }\n    }),\n\n    // Material imports\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatAutocompleteModule,\n    MatOptionModule,\n    MatCardModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n\n    // Application modules\n    SharedModule,\n\n    // Routes last (!important)\n    AppRoutingModule,\n\n    GraphQLModule\n  ],\n  providers: [\n    // Authentication interceptor\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: HttpCacheInterceptor, multi: true },\n    { provide: LOCALE_ID, useValue: 'nb-NO' },\n    { // hammer instantion with custom config\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: MyHammerConfig\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './views/home/home.component';\nimport { LoginComponent } from './views/home/login/login.component';\nimport { LogoutComponent } from './views/home/logout/logout.component';\nimport { RegisterComponent } from './views/home/register/register.component';\nimport { ResetComponent } from './views/home/reset/reset.component';\nimport { CanActivateRegistration } from './views/home/register/registration-activation.guard';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent, canActivate: [CanActivateRegistration] },\n  { path: 'reset', component: ResetComponent },\n  { path: 'logout', component: LogoutComponent },\n\n  // Lazy loaded modules\n  { path: 'configure', loadChildren: () => \"import('./views/configure/configure.module').then(m => m.ConfigureModule)\" },\n  { path: 'event', loadChildren: () => \"import('./views/event/event.module').then(m => m.EventModule)\" },\n\n  // Catch all redirect to home\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\ncluster_AppServerModule_providers\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nUniversalInterceptor\n\nUniversalInterceptor\n\nAppServerModule -->\n\nUniversalInterceptor->AppServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UniversalInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { ModuleMapLoaderModule } from '@nguniversal/module-map-ngfactory-loader';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UniversalInterceptor } from './shared/interceptors/universal.interceptor';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n    ModuleMapLoaderModule // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/auth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _translator\n                            \n                            \n                                _userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                analyzeAndReport\n                            \n                            \n                                checkError\n                            \n                            \n                                handleError\n                            \n                            \n                                intercept\n                            \n                            \n                                stripTypeNames\n                            \n                            \n                                validateResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    translator\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, jwt: JwtHelperService, error: ErrorHandlerService, state: HttpStateService, injector: Injector, snackBar: MatSnackBar, browser: BrowserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/auth.interceptor.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        HttpStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        browser\n                                                  \n                                                        \n                                                                        BrowserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            analyzeAndReport\n                        \n                        \n                    \n                \n            \n            \n                \nanalyzeAndReport(req: HttpRequest, res: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/auth.interceptor.ts:101\n                \n            \n\n\n            \n                \n                    Analyse response and notify user if nescessary.\nIf this is either a data persistance request or a data removal request, the user should be notified.\nBut detecting which type can be tricky when we're dealing with graphql requests because graphql\nonly operates under the HTTP GET or POST verbs, nothing more. Identifying the type of query requires\nus to keep a naming convention on our graph api.\nIf the request body contains a mutation, it is either a save or a delete request. If it in addition\nalso contains {save or {delete, we have enough to identify it.\nFor REST requests, this identification is conciderably easier. We relly on POST/PUT requests for data\npersistance, and DELETE requests for identification.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkError\n                        \n                        \n                    \n                \n            \n            \n                \ncheckError(req: HttpRequest, res: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/auth.interceptor.ts:120\n                \n            \n\n\n            \n                \n                    Detect if the response is really an error and therefore subject of the error handler or not.\nREST requests will give a status !== 200 if they're in error, which will default throw in the handler.\nBut GraphQL requests will always return a status of 200 in the main response body, and hide it's real status\ninside a errors array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(req: HttpRequest, errorMessage: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/auth.interceptor.ts:151\n                \n            \n\n\n            \n                \n                    Our default error handler. This will take any information attached to an\nexception, and compile a human readable message to our user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorMessage\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/auth.interceptor.ts:45\n                \n            \n\n\n            \n                \n                    HttpInterceptor implmentation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stripTypeNames\n                        \n                        \n                    \n                \n            \n            \n                \nstripTypeNames(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/auth.interceptor.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateResponse\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateResponse(req: HttpRequest, res: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/auth.interceptor.ts:77\n                \n            \n\n\n            \n                \n                    Intercept response and check for errors.\nIf status of request is !== 200, the handler will throw and this method will not be executed.\nBut graphql queries will allways return 200 status in the response and rather hide the REAL status\ninside an errors array in the body.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _translator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/interceptors/auth.interceptor.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/interceptors/auth.interceptor.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        translator\n                    \n                \n\n                \n                    \n                        gettranslator()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/interceptors/auth.interceptor.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpResponse, HttpEvent } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar } from '@angular/material';\n\nimport { throwError, of, Observable } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\n\nimport * as moment from 'moment';\n\nimport { ErrorHandlerService } from 'app/shared/interceptors/error-handler.service';\nimport { HttpStateService } from 'app/shared/interceptors/http-state.service';\nimport { UserService } from 'app/shared/services/api';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { BrowserService } from '../browser.service';\nimport { Logger } from '../services/Logger';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  // Cache TranslateService as this could not be auto injected through\n  // the constructor. Cyclic dependency issue\n  _translator: TranslateService;\n  get translator(): TranslateService {\n    return (this._translator =\n      this._translator || this.injector.get(TranslateService));\n  }\n\n  _userService: UserService;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private jwt: JwtHelperService,\n    private error: ErrorHandlerService,\n    private state: HttpStateService,\n    private injector: Injector,\n    private snackBar: MatSnackBar,\n    private browser: BrowserService\n  ) { }\n\n  /**\n   * HttpInterceptor implmentation\n   */\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    // Check token expiration\n    const user = this.browser.sessionStorage().getItem('currentUser');\n    if (user && this.jwt.isTokenExpired(JSON.parse(user).token)) {\n      this.browser.sessionStorage().removeItem('currentUser');\n    }\n\n    req = this.stripTypeNames(req);\n\n    // Execute request\n    this.state.notifySubscribers(req);\n    return next.handle(req).pipe(\n      tap(res => res.type !== 0 ? this.validateResponse(req, >res) : res),\n      catchError(err => this.handleError(req, err))\n    );\n  }\n\n  stripTypeNames(req: HttpRequest): HttpRequest {\n    if (req.body && req.body.query) {\n      // https://github.com/apollographql/react-apollo/issues/741\n      req.body.query = req.body.query.replace(/,.?__typename:.?\"[a-zA-Z]+\"/gm, '');\n    }\n    return req;\n  }\n\n  /**\n   * Intercept response and check for errors.\n   *\n   * If status of request is !== 200, the handler will throw and this method will not be executed.\n   * But graphql queries will allways return 200 status in the response and rather hide the REAL status\n   * inside an errors array in the body.\n   */\n  validateResponse(req: HttpRequest, res: HttpResponse) {\n    // Successful Response;\n    // Detect error response, but with 200 status\n    this.checkError(req, res);\n\n    // Notify user of operation success if needed\n    this.analyzeAndReport(req, res);\n    return res;\n  }\n\n  /**\n   * Analyse response and notify user if nescessary.\n   *\n   * If this is either a data persistance request or a data removal request, the user should be notified.\n   * But detecting which type can be tricky when we're dealing with graphql requests because graphql\n   * only operates under the HTTP GET or POST verbs, nothing more. Identifying the type of query requires\n   * us to keep a naming convention on our graph api.\n   *\n   * If the request body contains a `mutation`, it is either a save or a delete request. If it in addition\n   * also contains `{save` or `{delete`, we have enough to identify it.\n   *\n   * For REST requests, this identification is conciderably easier. We relly on POST/PUT requests for data\n   * persistance, and DELETE requests for identification.\n   */\n  analyzeAndReport(req: HttpRequest, res: HttpResponse) {\n    const action = this.state.notifySubscribers(req, res);\n    const isSave = action.operation === 'save';\n    const isDelete = action.operation === 'delete';\n\n    if ((isSave || isDelete) && !['login', 'logout'].some(u => res.url.indexOf(u) > -1)) {\n      const now = moment();\n      const success = this.translator.instant('SUCCESS');\n      this.snackBar.open(`${this.translator.instant(isSave ? 'Saved' : 'Deleted')} ${now.format('HH:mm:ss')}`, success, { duration: 5 * 1000 });\n    }\n  }\n\n  /**\n   * Detect if the response is really an error and therefore subject of the error handler or not.\n   *\n   * REST requests will give a status !== 200 if they're in error, which will default throw in the handler.\n   * But GraphQL requests will always return a status of 200 in the main response body, and hide it's real status\n   * inside a `errors` array.\n   */\n  checkError(req: HttpRequest, res: HttpResponse) {\n    const body = res.body;\n    if (req.headers.has('noReport') || (req.body && req.body.extensions && req.body.extensions.noReport)) { return; }\n    if (res.status >= 400 || (body && body.errors && body.errors.some(e => e.message.statusCode !== 200))) {\n      if (res.body && res.body.errors && res.body.errors.length > 0) {\n        // GraphQL Error\n        const message = res.body.errors[0].message;\n        if (typeof message === 'string') {\n          // Just a warning, not an actual error.\n          Logger.debug(message);\n          return;\n        } else {\n          // Error ... for real!\n          let url = req.url;\n          const m = req.body.query.match(/([\\w\\d]+\\([\\w\\s:\\d]+\\))/); // match gql query\n          if (m) {\n            url += '{' + m.reduce((prev, curr) => (prev.indexOf(curr) , errorMessage: any) {\n    // Something went wrong. Analyze and take action\n    // Compile a human readable version of server sent error message\n    let error = errorMessage.message.indexOf('{') > -1 ? JSON.parse(errorMessage.message) : errorMessage;\n\n    if (!(req.headers.has('noReport') || (req.body && req.body.extensions && req.body.extensions.noReport))) {\n      if (error.status) {\n        // Analyze status\n        if (error.status === 401) {\n          // We should be logged in, but aren't. Redirect\n          this.router.navigate(['/login'], { queryParams: { u: encodeURIComponent(this.browser.window().location.pathname) } });\n        } else if (error.status === 403) {\n          // We are in a place we aren't supposed to be. Go up a level and see if that remedies the situation.\n          this.router.navigate(['/' + this.router.url.split('/').slice(1, -1).join('/')]);\n        } else {\n          // For everything else...\n          if (error.error) {\n            error = typeof error.error === 'string' ? JSON.parse(error.error) : errorMessage.error;\n          }\n        }\n      }\n      const header = `${error.status ? error.status + ' - ' : ''} ${error.statusText ? error.statusText + ':' : ''}`;\n      const message = `${error.error}`;\n      this.error.setError(message, header, errorMessage.stack ? errorMessage.stack.replace(errorMessage.message, '') : undefined);\n\n      // Notify and bubble error\n      this.state.notifySubscribers(req, errorMessage);\n    }\n    return throwError(this.error.error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AwardsComponent.html":{"url":"components/AwardsComponent.html","title":"component - AwardsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AwardsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/tournament/awards/awards.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-awards\n            \n\n            \n                styleUrls\n                ./awards.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./awards.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/tournament/awards/awards.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/awards/awards.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-awards',\n  templateUrl: './awards.component.html',\n  styleUrls: ['./awards.component.scss']\n})\nexport class AwardsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  awards works!\n\n\n    \n\n    \n                \n                    ./awards.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  awards works!'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'AwardsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrowserService.html":{"url":"injectables/BrowserService.html","title":"injectable - BrowserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BrowserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/browser.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for retreiving common browser objects. This provides unit-test-safety\nas these objects logically does not exist in a test environment.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                            \n                                    Static\n                                localStorage\n                            \n                            \n                                localStorage\n                            \n                            \n                                    Static\n                                sessionStorage\n                            \n                            \n                                sessionStorage\n                            \n                            \n                                window\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/browser.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            document\n                        \n                        \n                    \n                \n            \n            \n                \ndocument()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/browser.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Document\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            localStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    localStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/browser.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Storage\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            localStorage\n                        \n                        \n                    \n                \n            \n            \n                \nlocalStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/browser.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Storage\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sessionStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sessionStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/browser.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Storage\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sessionStorage\n                        \n                        \n                    \n                \n            \n            \n                \nsessionStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/browser.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Storage\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            window\n                        \n                        \n                    \n                \n            \n            \n                \nwindow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/browser.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Window\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nconst storageMock = {\n  // We are in a node environment. Just return a mock\n  getItem: (): string => null,\n  setItem: (): void => { },\n  removeItem: (): void => { }\n};\n\n/**\n * Service for retreiving common browser objects. This provides unit-test-safety\n * as these objects logically does not exist in a test environment.\n */\n@Injectable({ providedIn: 'root' })\nexport class BrowserService {\n  static localStorage(): Storage {\n    return (typeof window !== 'undefined' ? window.localStorage : storageMock);\n  }\n\n  static sessionStorage(): Storage {\n    return (typeof window !== 'undefined' ? window.sessionStorage : storageMock);\n  }\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) { }\n\n  sessionStorage(): Storage {\n    return BrowserService.sessionStorage();\n  }\n\n  localStorage(): Storage {\n    return BrowserService.localStorage();\n  }\n\n  window(): Window {\n    return isPlatformBrowser(this.platformId) ? window : {}\n  }\n\n  document(): Document {\n    return isPlatformBrowser(this.platformId) ? document : {\n      querySelectorAll: () => { }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CanActivateRegistration.html":{"url":"guards/CanActivateRegistration.html","title":"guard - CanActivateRegistration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CanActivateRegistration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/views/home/register/registration-activation.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(error: ErrorHandlerService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/home/register/registration-activation.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/register/registration-activation.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { ErrorHandlerService } from 'app/shared/interceptors/error-handler.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({ providedIn: 'root' })\nexport class CanActivateRegistration implements CanActivate {\n  constructor(private error: ErrorHandlerService, private translate: TranslateService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!environment.allowRegistrations) {\n      this.error.setError(this.translate.instant('We are currently not accepting any registrations into this system. You have to ask an existing member for access.'), this.translate.instant('Registration is closed'));\n      return false;\n    };\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClubComponent.html":{"url":"components/ClubComponent.html","title":"component - ClubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/club/club.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-club\n            \n\n            \n                styleUrls\n                ./club.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./club.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clubSource\n                            \n                            \n                                subscriptions\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClub\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(graph: GraphService, userService: UserService, router: Router, route: ActivatedRoute, seo: SEOService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/club/club.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seo\n                                                  \n                                                        \n                                                                        SEOService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/club.component.ts:53\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addClub\n                        \n                        \n                    \n                \n            \n            \n                \naddClub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/club.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/club.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/club.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clubSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubjectSource(new BehaviorSubject([]))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/club.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/club.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/club.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\nimport { UserService } from 'app/shared/services/api';\nimport { IClub, IUser, Role } from 'app/model';\nimport { SubjectSource } from 'app/shared/services/subject-source';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { SEOService } from 'app/shared/services/seo.service';\n\n@Component({\n  selector: 'app-club',\n  templateUrl: './club.component.html',\n  styleUrls: ['./club.component.scss']\n})\nexport class ClubComponent implements OnInit, OnDestroy {\n  clubSource = new SubjectSource(new BehaviorSubject([]));\n  user: IUser;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(\n    private graph: GraphService,\n    private userService: UserService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private seo: SEOService\n  ) { }\n\n  ngOnInit() {\n    this.seo.setTitle('Configure clubs', 'List out all clubs registerred in the system');\n    this.userService.getMe().subscribe(user => {\n      this.user = user;\n      if (this.user && this.user.role >= Role.Admin) {\n        // Only admins should be able to edit any clubs\n        this.graph.getData(`{getClubs{id,name}}`).subscribe(res => this.clubSource.subject.next(res.getClubs));\n      } else {\n        // If you are not admin, you will be auto-redirected to your club page\n        this.router.navigate(['./', this.user.clubId], { relativeTo: this.route });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => { if (s) { s.unsubscribe(); } });\n  }\n\n  addClub() {\n    this.router.navigate(['./add'], { relativeTo: this.route });\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === '+' || evt.key === 'NumpadAdd') {\n      this.addClub();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  Clubs\n\n\n\n  \n    {{'Name' | translate}}\n    {{ club.name }}\n  \n\n  \n  \n\n\n\n  \n  Add club\n\n\n    \n\n    \n                \n                    ./club.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Clubs      {{\\'Name\\' | translate}}    {{ club.name }}          Add club'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClubEditorComponent.html":{"url":"components/ClubEditorComponent.html","title":"component - ClubEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClubEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/club/club-editor/club-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-club-editor\n            \n\n            \n                styleUrls\n                ./club-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./club-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                club\n                            \n                            \n                                clubCtrl\n                            \n                            \n                                clubForm\n                            \n                            \n                                clubSubject\n                            \n                            \n                                isAdding\n                            \n                            \n                                isEdit\n                            \n                            \n                                roles\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                clubReceived\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                            \n                                setSelectedClub\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:keyup\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clubName\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, graph: GraphService, userService: UserService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:keyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:136\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clubReceived\n                        \n                        \n                    \n                \n            \n            \n                \nclubReceived(club: IClub)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    club\n                                    \n                                                IClub\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            edit\n                        \n                        \n                    \n                \n            \n            \n                \nedit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goBack\n                        \n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedClub\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedClub(club: IClub)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    club\n                                    \n                                                IClub\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            club\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IClub\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clubCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clubForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clubSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdding\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Role\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        clubName\n                    \n                \n\n                \n                    \n                        getclubName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/club/club-editor/club-editor.component.ts:31\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, HostListener } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { ReplaySubject } from 'rxjs';\n\nimport { startCase, lowerCase, } from 'lodash';\n\nimport { UserService } from 'app/shared/services/api';\nimport { IUser, Role, IClub } from 'app/model';\nimport { GraphService } from 'app/shared/services/graph.service';\n\n@Component({\n  selector: 'app-club-editor',\n  templateUrl: './club-editor.component.html',\n  styleUrls: ['./club-editor.component.scss']\n})\nexport class ClubEditorComponent implements OnInit {\n  user: IUser;\n\n  clubCtrl = new FormControl();\n  club: IClub = {};\n  clubSubject = new ReplaySubject(1);\n\n  clubForm: FormGroup;\n\n  isAdding = false;\n  isEdit = false;\n\n  roles = Role;\n\n  get clubName() {\n    const name = this.clubForm && this.clubForm.value.name ? this.clubForm.value.name : this.club.name;\n    return startCase(lowerCase(name));\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private graph: GraphService,\n    private userService: UserService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // Setup form\n    this.clubForm = this.fb.group({\n      id: [this.club.id],\n      name: [this.club.name, [Validators.required]]\n    });\n    this.clubCtrl.valueChanges.subscribe(club => {\n      this.setSelectedClub(club);\n    });\n    this.clubForm.valueChanges.subscribe(club => {\n      this.clubCtrl.patchValue(club, { emitEvent: false });\n    });\n\n    this.route.params.subscribe(params => {\n      this.userService.getMe().subscribe(user => {\n        this.user = user;\n        if (!user || (user.role  this.clubReceived(res.club),\n            err => this.goBack()\n          );\n        } else {\n          // Creating new club\n          this.isAdding = true;\n          this.isEdit = true;\n        }\n      });\n    });\n  }\n\n  setSelectedClub(club: IClub) {\n    this.clubReceived(club);\n    this.clubForm.markAsDirty();\n  }\n\n  clubReceived(club: IClub) {\n    if (!club.id && this.club.id) {\n      // Name changed. Reuse id.\n      club.id = this.club.id;\n    }\n    this.club = club;\n    this.clubSubject.next(club);\n    if (this.clubForm) {\n      // If not, this callback must be called either pre-init or post-mortem for this component\n      this.clubForm.setValue({\n        id: club.id,\n        name: club.name\n      });\n    }\n  }\n\n  save() {\n    const val = this.clubForm.value;\n    this.graph.saveData('Club', val, `{id,name}`).subscribe(res => {\n      this.clubReceived(res.saveClub);\n      this.isEdit = false;\n      this.router.navigate(['../', this.club.id], { relativeTo: this.route });\n    });\n  }\n\n  delete() {\n    this.graph.deleteData('Club', this.club.id).subscribe(resp => {\n      this.isEdit = false;\n      this.goBack();\n    });\n  }\n\n  cancel() {\n    this.isEdit = false;\n    // this.clubReceived(this.club);\n    if (this.isAdding) {\n      this.goBack();\n    }\n  }\n\n  goBack() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  edit() {\n    if (this.user && (this.user.role >= Role.Admin || this.club.id === this.user.club.id)) {\n      this.isEdit = true;\n    }\n  }\n\n  @HostListener('window:keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === 'Escape') {\n      this.cancel();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ clubName }}\n  \n\n\n\n\n  \n    \n      Name\n      {{ club.name }}\n    \n  \n\n\n\n\n  \n    \n      \n        \n          \n        \n      \n    \n    \n      \n       Cancel\n      \n        Delete\n    \n  \n\n\n\n\n  = roles.Admin || user.clubId === clubForm.value.id\" aria-label=\"Members\">\n     Members\n  \n  = roles.Admin || user.clubId === clubForm.value.id\" aria-label=\"Teams\">\n     Teams\n  \n  = roles.Admin || user.clubId === clubForm.value.id\" aria-label=\"Media\">\n     Media\n  \n  = roles.Admin || user.clubId === clubForm.value.id\" aria-label=\"Statistics\">\n     Statistics\n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./club-editor.component.scss\n                \n                @import \"../../../../../styles/variables\";\n@import \"../../../../../styles/panel\";\n\nheader {\n  position: relative;\n  .buttons {\n    position: absolute;\n    top: 0rem;\n    right: 0;\n  }\n}\n\ntable {\n  cursor: pointer;\n  padding: ($padding / 2) 0 $padding 0;\n  border: 1px solid transparent;\n  width: 100%;\n  &:hover {\n    @include panel;\n  }\n  td,\n  th {\n    border-bottom: 0;\n  }\n  th {\n    @media (min-width: $stop1) {\n      width: 8rem;\n    }\n    text-align: right;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ clubName }}              Name      {{ club.name }}                                                                       Cancel              Delete        = roles.Admin || user.clubId === clubForm.value.id\" aria-label=\"Members\">     Members    = roles.Admin || user.clubId === clubForm.value.id\" aria-label=\"Teams\">     Teams    = roles.Admin || user.clubId === clubForm.value.id\" aria-label=\"Media\">     Media    = roles.Admin || user.clubId === clubForm.value.id\" aria-label=\"Statistics\">     Statistics    '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClubEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClubLookupComponent.html":{"url":"components/ClubLookupComponent.html","title":"component - ClubLookupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClubLookupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/club-lookup/club-lookup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ClubLookupComponent), multi: true }\n                \n            \n\n\n            \n                selector\n                app-club-lookup\n            \n\n            \n                styleUrls\n                ./club-lookup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./club-lookup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _value\n                            \n                            \n                                childControl\n                            \n                            \n                                clubList\n                            \n                            \n                                propagateValueChange\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clubDisplay\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                tabOut\n                            \n                            \n                                trackByFn\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControl\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(graph: GraphService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clubDisplay\n                        \n                        \n                    \n                \n            \n            \n                \nclubDisplay(club: IClub)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    club\n                                    \n                                                IClub\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (value: IClub) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tabOut\n                        \n                        \n                    \n                \n            \n            \n                \ntabOut(typeahead: MatAutocomplete)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeahead\n                                    \n                                            MatAutocomplete\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByFn\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByFn(index, item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: IClub)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                IClub\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IClub\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clubList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateValueChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:27\n                                \n                            \n\n                \n                    \n                        setvalue(val)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/club-lookup/club-lookup.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, forwardRef, Input } from '@angular/core';\nimport { FormControl, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { distinctUntilChanged, map, debounceTime } from 'rxjs/operators';\nimport { toUpperCaseTransformer } from 'app/shared/directives/to-uppercase/to-uppercase.directive';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { IClub } from 'app/model';\nimport { MatAutocomplete } from '@angular/material';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-club-lookup',\n  templateUrl: './club-lookup.component.html',\n  styleUrls: ['./club-lookup.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ClubLookupComponent), multi: true }\n  ]\n})\nexport class ClubLookupComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  @Input() formControl: FormControl;\n\n\n  private subscriptions: Subscription[] = [];\n  clubList = [];\n  childControl = new FormControl();\n\n  _value: IClub;\n  get value() { return this._value; }\n  set value(val: IClub | null) {\n    this._value = val;\n    if (val) {\n      this.childControl.patchValue(val.name);\n    }\n    this.propagateValueChange(this.value);\n  }\n  propagateValueChange: (value: IClub) => void; // Fired when value changes\n\n\n  constructor(private graph: GraphService) { }\n\n  ngOnInit() {\n    this.subscriptions.push(this.childControl.valueChanges.pipe(\n      map(v => {\n        // Patch to uppercase\n        if (typeof v === 'string') {\n          v = toUpperCaseTransformer(v);\n          this.childControl.patchValue(v, { emitEvent: false });\n        }\n        return v;\n      }),\n      distinctUntilChanged(),\n      debounceTime(200),  // Do not hammer http request. Wait until user has typed a bit\n    ).subscribe(v => {\n      const name = encodeURIComponent(v && v.name ? v.name : v);\n      if (name.length > 2) { // Only query if we have 2 characters or more in the input\n        this.graph.get(`{getClubs(name:\"${name}\"){id,name}}`, { fetchPolicy: 'no-cache' }).subscribe(res => {\n          this.clubList = res.data.getClubs;\n        });\n      }\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  trackByFn(index, item) {\n    return item.name;\n  }\n\n  // --- ControlValueAccessor implementation ---\n  writeValue(value: IClub) {\n    this._value = value;\n    this.childControl.setValue(value);\n    this.childControl.markAsPristine();\n  }\n\n  registerOnChange(fn: (value: IClub) => void) {\n    this.propagateValueChange = fn;\n  }\n\n  registerOnTouched() { }\n  clubDisplay(club: IClub) {\n    return club && club.name ? club.name : club;\n  }\n\n  tabOut(typeahead: MatAutocomplete) {\n    // Autoset if there is only one entry in the list\n    if (this.clubList.length === 1) {\n      this.value = this.clubList[0];\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{ club.name }}\n    \n  \n  \n\n\n    \n\n    \n                \n                    ./club-lookup.component.scss\n                \n                :host {\n  display: block;\n  .mat-form-field {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ club.name }}        '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClubLookupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClubModule.html":{"url":"modules/ClubModule.html","title":"module - ClubModule","body":"\n                   \n\n\n\n\n    Modules\n    ClubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClubModule\n\n\n\ncluster_ClubModule_declarations\n\n\n\ncluster_ClubModule_imports\n\n\n\ncluster_ClubModule_providers\n\n\n\n\nClubComponent\n\nClubComponent\n\n\n\nClubModule\n\nClubModule\n\nClubModule -->\n\nClubComponent->ClubModule\n\n\n\n\n\nClubEditorComponent\n\nClubEditorComponent\n\nClubModule -->\n\nClubEditorComponent->ClubModule\n\n\n\n\n\nMediaComponent\n\nMediaComponent\n\nClubModule -->\n\nMediaComponent->ClubModule\n\n\n\n\n\nMemberEditorComponent\n\nMemberEditorComponent\n\nClubModule -->\n\nMemberEditorComponent->ClubModule\n\n\n\n\n\nMembersComponent\n\nMembersComponent\n\nClubModule -->\n\nMembersComponent->ClubModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nClubModule -->\n\nStatisticsComponent->ClubModule\n\n\n\n\n\nTroopEditorComponent\n\nTroopEditorComponent\n\nClubModule -->\n\nTroopEditorComponent->ClubModule\n\n\n\n\n\nTroopsComponent\n\nTroopsComponent\n\nClubModule -->\n\nTroopsComponent->ClubModule\n\n\n\n\n\nConfigureSharedModule\n\nConfigureSharedModule\n\nClubModule -->\n\nConfigureSharedModule->ClubModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nClubModule -->\n\nSharedModule->ClubModule\n\n\n\n\n\nMemberStateService\n\nMemberStateService\n\nClubModule -->\n\nMemberStateService->ClubModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/configure/club/club.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClubComponent\n                        \n                        \n                            ClubEditorComponent\n                        \n                        \n                            MediaComponent\n                        \n                        \n                            MemberEditorComponent\n                        \n                        \n                            MembersComponent\n                        \n                        \n                            StatisticsComponent\n                        \n                        \n                            TroopEditorComponent\n                        \n                        \n                            TroopsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            MemberStateService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigureSharedModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport {\n  MatSortModule, MatCardModule, MatTabsModule, MatFormFieldModule, MatInputModule, MatSlideToggleModule,\n  MatAutocompleteModule, MatButtonModule, MatTableModule, MatCheckboxModule, MatListModule\n} from '@angular/material';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport { ConfigureSharedModule } from '../_shared/_shared.module';\n\nimport { ClubComponent } from './club.component';\nimport { ClubEditorComponent } from './club-editor/club-editor.component';\nimport { MembersComponent } from './members/members.component';\nimport { MemberEditorComponent } from './members/member-editor/member-editor.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\nimport { TroopsComponent } from './troops/troops.component';\nimport { TroopEditorComponent } from './troops/troop-editor/troop-editor.component';\nimport { MemberStateService } from 'app/views/configure/club/members/member-state.service';\nimport { MediaComponent } from './media/media.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    ConfigureSharedModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatListModule,\n    MatTableModule,\n    MatSortModule,\n    MatCardModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSlideToggleModule,\n    MatButtonModule\n  ],\n  declarations: [\n    ClubComponent,\n    ClubEditorComponent,\n    MembersComponent,\n    MemberEditorComponent,\n    StatisticsComponent,\n    TroopsComponent,\n    TroopEditorComponent,\n    MediaComponent\n  ],\n  providers: [\n    MemberStateService\n  ]\n})\nexport class ClubModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/common.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                compressString\n                            \n                            \n                                    Static\n                                dateSpan\n                            \n                            \n                                    Static\n                                makeId\n                            \n                            \n                                    Static\n                                omit\n                            \n                            \n                                    Static\n                                stringHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/common.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            compressString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    compressString(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/common.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            dateSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dateSpan(tournament: ITournament)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/common.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournament\n                                    \n                                                ITournament\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            makeId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeId(len: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/common.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    len\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            omit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    omit(obj, properties: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/common.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    properties\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            stringHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stringHash(participant: ITeamInDiscipline, toType?: ParticipationType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/common.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    participant\n                                    \n                                                ITeamInDiscipline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toType\n                                    \n                                                ParticipationType\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\nimport { ITournament } from 'app/model/ITournament';\nimport { ITeamInDiscipline, ParticipationType } from 'app/model';\n\n@Injectable({ providedIn: 'root' })\nexport class CommonService {\n\n  constructor() { }\n\n  static makeId(len: number) {\n    let text = \"\";\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (let i = 0; i  !properties.includes(k))\n      .map(k => Object.assign({}, { [k]: obj[k] }))\n      .reduce((res, o) => Object.assign(res, o), {});\n  }\n\n  /**\n   *\n   */\n  static dateSpan(tournament: ITournament): string {\n    const toDate = (date: moment.Moment) => moment(date).format('DD');\n    if (tournament && tournament.startDate && tournament.endDate) {\n      const start = moment(tournament.startDate);\n      const end = moment(tournament.endDate);\n      const month = end.isSame(start, 'month') ? end.format('MMM') : start.format('MMM') + '/' + end.format('MMM');\n      const year = moment(tournament.endDate).format('YYYY');\n      if (end.diff(start, 'days') > 1) {\n        return `${toDate(start)}.-${toDate(end)}. ${month} ${year}`;\n      }\n      return `${toDate(start)}. ${month} ${year}`;\n    }\n    return '';\n  }\n\n  static compressString(str: string) {\n    return str.replace(/#.+| +?|\\r?\\n|\\r/gm, '');\n  }\n\n  /**\n   *\n   */\n  static stringHash(participant: ITeamInDiscipline, toType?: ParticipationType): string {\n    return (participant.team.name\n      + participant.divisionName\n      + participant.disciplineName\n      + (toType ? toType : participant.type))\n      .replace(' ', '_');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigurationService.html":{"url":"injectables/ConfigurationService.html","title":"injectable - ConfigurationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigurationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/api/configuration/configuration.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                all\n                            \n                            \n                                delete\n                            \n                            \n                                getByname\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/api/configuration/configuration.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            all\n                        \n                        \n                    \n                \n            \n            \n                \nall()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/configuration/configuration.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(configuration: IConfiguration)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/configuration/configuration.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configuration\n                                    \n                                                IConfiguration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByname\n                        \n                        \n                    \n                \n            \n            \n                \ngetByname(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/configuration/configuration.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave(configuration: IConfiguration[] | IConfiguration)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/configuration/configuration.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configuration\n                                    \n                                                IConfiguration[] | IConfiguration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/administration/configuration'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/api/configuration/configuration.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { IConfiguration } from 'app/model';\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigurationService {\n  url = '/api/administration/configuration';\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   *\n   */\n  all(): Observable {\n    return this.http.get(this.url);\n  }\n\n  /**\n   *\n   */\n  getByname(name: string): Observable {\n    return this.http.get(`${this.url}/${name}`);\n  }\n\n  /**\n   *\n   */\n  save(configuration: IConfiguration[] | IConfiguration) {\n    return this.http.post(this.url, configuration);\n  }\n\n  /**\n   *\n   */\n  delete(configuration: IConfiguration) {\n    return this.http.delete(`${this.url}/${configuration.name}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigureComponent.html":{"url":"components/ConfigureComponent.html","title":"component - ConfigureComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigureComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/configure.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-configure\n            \n\n            \n                styleUrls\n                ./configure.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./configure.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/configure.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/configure.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configure',\n  templateUrl: './configure.component.html',\n  styleUrls: ['./configure.component.scss']\n})\nexport class ConfigureComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      Tournaments\n    \n    \n      \n      Club\n    \n    \n      \n      Venue\n    \n\n    \n    \n      \n      Users\n    \n    \n      \n      Display\n    \n    \n      \n      Advanced settings\n    \n\n    \n    \n      \n      Log out\n    \n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./configure.component.scss\n                \n                @import \"../../../styles/variables\";\n\nmenu {\n  @supports (display: flex) {\n    margin-top: 1rem;\n  }\n  @media (max-width: $stop1) {\n    margin-top: 10px;\n  }\n  ::ng-deep .mat-nav-list {\n    .mat-list-item {\n      &.active {\n        background: $primaryDark;\n      }\n      .mat-list-item-content {\n        .mat-list-icon {\n          font-size: inherit;\n          line-height: 25px;\n          @media (max-width: $stop2) {\n            display: inline-block;\n          }\n        }\n        .mat-list-text {\n          padding: 0 16px 0 0;\n          @media (max-width: $stop2) {\n            display: block;\n            padding: 0;\n          }\n          @media (max-width: $stop1) {\n            display: none;\n          }\n        }\n      }\n    }\n  }\n}\n\nsection {\n  min-height: 12rem;\n  margin-left: 14rem;\n  margin-top: 1rem;\n  @media (max-width: $stop1) {\n    margin-left: 0;\n  }\n  @media print {\n    margin: 0;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Tournaments                    Club                    Venue                        Users                    Display                    Advanced settings                        Log out        '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfigureComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigureDisplayComponent.html":{"url":"components/ConfigureDisplayComponent.html","title":"component - ConfigureDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigureDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/display/configure-display.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-configure-display\n            \n\n            \n                styleUrls\n                ./configure-display.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./configure-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentIndex\n                            \n                            \n                                display\n                            \n                            \n                                preview\n                            \n                            \n                                templates\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configReceived\n                            \n                            \n                                loadPreview\n                            \n                            \n                                next\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                previewSelected\n                            \n                            \n                                previous\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigurationService, graph: GraphService, displayService: DisplayService, seo: SEOService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/display/configure-display.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayService\n                                                  \n                                                        \n                                                                        DisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seo\n                                                  \n                                                        \n                                                                        SEOService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configReceived\n                        \n                        \n                    \n                \n            \n            \n                \nconfigReceived(res: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/display/configure-display.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPreview\n                        \n                        \n                    \n                \n            \n            \n                \nloadPreview()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/display/configure-display.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            next\n                        \n                        \n                    \n                \n            \n            \n                \nnext()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/display/configure-display.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/display/configure-display.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            previewSelected\n                        \n                        \n                    \n                \n            \n            \n                \npreviewSelected($event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/display/configure-display.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            previous\n                        \n                        \n                    \n                \n            \n            \n                \nprevious()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/display/configure-display.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/display/configure-display.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/display/configure-display.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/display/configure-display.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preview\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITournament\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/display/configure-display.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/display/configure-display.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITournament[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/display/configure-display.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { ConfigurationService, DisplayService } from 'app/shared/services/api';\nimport { ITournament } from '../../../model';\nimport { MatSelectChange } from '@angular/material';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { SEOService } from 'app/shared/services/seo.service';\n\n@Component({\n  selector: 'app-configure-display',\n  templateUrl: './configure-display.component.html',\n  styleUrls: ['./configure-display.component.scss']\n})\nexport class ConfigureDisplayComponent implements OnInit {\n  templates: any = [];\n  tournaments: ITournament[];\n  preview: ITournament;\n  display: string[];\n  currentIndex = 0;\n\n  constructor(\n    private config: ConfigurationService,\n    private graph: GraphService,\n    private displayService: DisplayService,\n    private seo: SEOService\n  ) { }\n\n  ngOnInit() {\n    this.seo.setTitle('Configure display', 'Configuring global display settings');\n\n    this.config.getByname('display').subscribe((res: any) => this.configReceived(res));\n    this.graph.getData(`{\n      getTournaments{id,name,scheduleCount}\n    }`).subscribe(res => this.tournaments = res.getTournaments);\n  }\n\n  configReceived(res: any) {\n    const value = typeof res.value === 'string' ? JSON.parse(res.value) : res.value;\n    this.templates = [\n      { id: 'display1', title: 'Display 1', content: value.display1 },\n      { id: 'display2', title: 'Display 2', content: value.display2 }\n    ];\n    if (this.preview && this.preview.id) {\n      this.loadPreview();\n    }\n  }\n\n  save() {\n    this.config.save({\n      name: 'display',\n      value: {\n        display1: this.templates[0].content,\n        display2: this.templates[1].content\n      }\n    }).subscribe(res => this.configReceived(res));\n  }\n\n  previewSelected($event: MatSelectChange) {\n    this.preview = $event.value;\n    this.currentIndex = 0;\n    this.loadPreview();\n  }\n\n  loadPreview() {\n    this.display = null;\n    this.displayService.getAll(this.preview.id, this.currentIndex).subscribe(display => this.display = display);\n  }\n\n  previous() {\n    if (this.currentIndex > 0) {\n      --this.currentIndex;\n      this.loadPreview();\n    }\n  }\n\n  next() {\n    if (this.currentIndex \n    \n\n    \n        \n  \n  Display\n\n\n\n  \n    {{ 'Edit' | translate }}\n    {{ tournament.name }}\n  \n\n\n\n  \n    \n      \n        {{ template.content }}\n      \n    \n  \n  \n    \n  \n\n\n\n  \n\n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n  \n    &lsaquo; Previous\n    \n    Next &rsaquo;\n  \n\n\n    \n\n    \n                \n                    ./configure-display.component.scss\n                \n                @import \"../../../../styles/variables\";\n\nsection {\n  display: table-cell;\n  width: 50%;\n  position: relative;\n  vertical-align: top;\n  textarea {\n    width: 100%;\n    min-height: 10rem;\n    border: 1px solid lighten($text-color, 30%);\n    border-radius: 4px;\n  }\n  macro-dialog {\n    position: absolute;\n    right: $padding;\n  }\n  button {\n    margin-left: auto;\n    margin-right: 0;\n    display: block;\n  }\n  @media (max-width: $stop1) {\n    display: block;\n    width: 100%;\n  }\n}\n.preview {\n  position: relative;\n  footer {\n    display: flex;\n    .spacer {\n      flex: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Display      {{ \\'Edit\\' | translate }}    {{ tournament.name }}                      {{ template.content }}                                                                                ‹ Previous        Next ›  '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfigureDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigureModule.html":{"url":"modules/ConfigureModule.html","title":"module - ConfigureModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigureModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigureModule\n\n\n\ncluster_ConfigureModule_declarations\n\n\n\ncluster_ConfigureModule_imports\n\n\n\n\nConfigureComponent\n\nConfigureComponent\n\n\n\nConfigureModule\n\nConfigureModule\n\nConfigureModule -->\n\nConfigureComponent->ConfigureModule\n\n\n\n\n\nConfigureDisplayComponent\n\nConfigureDisplayComponent\n\nConfigureModule -->\n\nConfigureDisplayComponent->ConfigureModule\n\n\n\n\n\nMacroDialogComponent\n\nMacroDialogComponent\n\nConfigureModule -->\n\nMacroDialogComponent->ConfigureModule\n\n\n\n\n\nAdvancedModule\n\nAdvancedModule\n\nConfigureModule -->\n\nAdvancedModule->ConfigureModule\n\n\n\n\n\nClubModule\n\nClubModule\n\nConfigureModule -->\n\nClubModule->ConfigureModule\n\n\n\n\n\nConfigureRoutingModule\n\nConfigureRoutingModule\n\nConfigureModule -->\n\nConfigureRoutingModule->ConfigureModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nConfigureModule -->\n\nSharedModule->ConfigureModule\n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nConfigureModule -->\n\nTournamentModule->ConfigureModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nConfigureModule -->\n\nUsersModule->ConfigureModule\n\n\n\n\n\nVenueModule\n\nVenueModule\n\nConfigureModule -->\n\nVenueModule->ConfigureModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/configure/configure.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConfigureComponent\n                        \n                        \n                            ConfigureDisplayComponent\n                        \n                        \n                            MacroDialogComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdvancedModule\n                        \n                        \n                            ClubModule\n                        \n                        \n                            ConfigureRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TournamentModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            VenueModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule, MatButtonModule, MatListModule, MatSelectModule, MatOptionModule, MatProgressSpinnerModule } from '@angular/material';\n\n// Module dependencies\nimport { SharedModule } from 'app/shared/shared.module';\nimport { ConfigureRoutingModule } from './configure-routing.module';\nimport { TournamentModule } from './tournament/tournament.module';\nimport { UsersModule } from './users/users.module';\nimport { AdvancedModule } from './advanced/advanced.module';\nimport { ClubModule } from './club/club.module';\n\n// Module components\nimport { ConfigureComponent } from './configure.component';\nimport { ConfigureDisplayComponent } from './display/configure-display.component';\nimport { MacroDialogComponent } from './display/macro-dialog/macro-dialog.component';\nimport { VenueModule } from 'app/views/configure/venue/venue.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ConfigureRoutingModule,\n\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatButtonModule,\n    MatListModule,\n\n    // Packaged modules\n    SharedModule,\n    VenueModule,\n    TournamentModule,\n    ClubModule,\n    UsersModule,\n    AdvancedModule\n  ],\n  declarations: [\n    ConfigureComponent,\n    ConfigureDisplayComponent,\n    MacroDialogComponent\n  ]\n})\nexport class ConfigureModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigureRoutingModule.html":{"url":"modules/ConfigureRoutingModule.html","title":"module - ConfigureRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigureRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/configure/configure-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { Role } from 'app/model/IUser';\nimport { RoleGuard, RoleData } from 'app/shared/guards/role-guard';\n\n// Child routes\nimport { VenueRoutes } from './venue/venue.routes';\nimport { TournamentRoutes } from './tournament/tournament.routes';\nimport { UserRoutes } from './users/users.routes';\nimport { AdvancedRoutes } from './advanced/advanced.routes';\nimport { ClubRoutes } from './club/club.routes';\n\n// Components\nimport { ConfigureComponent } from './configure.component';\nimport { ConfigureDisplayComponent } from './display/configure-display.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: ConfigureComponent, children: [\n      { path: '', redirectTo: 'tournament', pathMatch: 'full', canActivate: [RoleGuard], data: { role: \"Role.Club.valueOf()\" } as RoleData },\n        {\n            path: 'venue', children: [\n              { path: '', component: VenueComponent, pathMatch: 'full', canActivate: [RoleGuard], data: { role: \"Role.Organizer.valueOf()\" } as RoleData },\n              { path: 'add', component: VenueEditorComponent, canActivate: [RoleGuard], data: { role: \"Role.Organizer.valueOf()\" } as RoleData },\n              { path: ':id', component: VenueEditorComponent, canActivate: [RoleGuard], data: { role: \"Role.Organizer.valueOf()\" } as RoleData },\n            ]\n          },\n        {\n            path: 'tournament', children: [\n              { path: '', component: TournamentComponent, pathMatch: 'full', canActivate: [RoleGuard], data: { role: \"Role.Club.valueOf()\" } as RoleData },\n              { path: 'add', component: TournamentEditorComponent, canActivate: [RoleGuard], data: { role: \"Role.Organizer.valueOf()\" } as RoleData },\n              {\n                path: ':id', component: TournamentEditorComponent, children: [\n                  { path: '', redirectTo: 'teams', pathMatch: 'full', canActivate: [RoleGuard], data: { role: \"Role.Club.valueOf()\" } as RoleData },\n                  { path: 'divisions', component: DivisionsComponent, canActivate: [RoleGuard], data: { role: \"Role.Organizer.valueOf()\" } as RoleData },\n                  ...DisciplineRoutes,\n                  { path: 'teams', component: TeamsComponent, canActivate: [RoleGuard], data: { role: \"Role.Club.valueOf()\" } as RoleData },\n                  { path: 'teams/add', component: TeamEditorComponent, canActivate: [RoleGuard], data: { role: \"Role.Organizer.valueOf()\" } as RoleData },\n                  { path: 'teams/:id', component: TeamEditorComponent, canActivate: [RoleGuard], data: { role: \"Role.Organizer.valueOf()\" } as RoleData },\n                  { path: 'schedule', component: ScheduleComponent, canActivate: [RoleGuard], data: { role: \"Role.Organizer.valueOf()\" } as RoleData },\n                  { path: 'awards', component: AwardsComponent, canActivate: [RoleGuard], data: { role: \"Role.Organizer.valueOf()\" } as RoleData },\n                  { path: 'info', component: InfoComponent, canActivate: [RoleGuard], data: { role: \"Role.Organizer.valueOf()\" } as RoleData },\n                  { path: 'scorecards', component: ScorecardsComponent, canActivate: [RoleGuard], data: { role: \"Role.Organizer.valueOf()\" } as RoleData },\n                ]\n              },\n            ]\n          },\n        {\n            path: 'club', children: [\n              { path: '', component: ClubComponent, canActivate: [RoleGuard], data: { role: \"Role.Club.valueOf()\" } as RoleData },\n              { path: 'add', component: ClubEditorComponent, canActivate: [RoleGuard], data: { role: \"Role.Admin.valueOf()\" } as RoleData },\n              {\n                path: ':id', component: ClubEditorComponent, canActivate: [RoleGuard], data: { role: \"Role.Club.valueOf()\" } as RoleData, children: [\n                  { path: '', redirectTo: 'members', pathMatch: 'full' },\n                  { path: 'members', component: MembersComponent, canActivate: [RoleGuard], data: { role: \"Role.Club.valueOf()\" } as RoleData },\n                  { path: 'members/add', component: MemberEditorComponent, canActivate: [RoleGuard], data: { role: \"Role.Club.valueOf()\" } as RoleData },\n                  { path: 'members/:id', component: MemberEditorComponent, canActivate: [RoleGuard], data: { role: \"Role.Club.valueOf()\" } as RoleData },\n                  { path: 'troops', component: TroopsComponent, canActivate: [RoleGuard], data: { role: \"Role.Club.valueOf()\" } as RoleData },\n                  { path: 'troops/add', component: TroopEditorComponent, canActivate: [RoleGuard], data: { role: \"Role.Club.valueOf()\" } as RoleData },\n                  { path: 'troops/:id', component: TroopEditorComponent, canActivate: [RoleGuard], data: { role: \"Role.Club.valueOf()\" } as RoleData },\n                  { path: 'media', component: MediaComponent, canActivate: [RoleGuard], data: { role: \"Role.Club.valueOf()\" } as RoleData },\n                  { path: 'statistics', component: StatisticsComponent, canActivate: [RoleGuard], data: { role: \"Role.Club.valueOf()\" } as RoleData },\n                ]\n              },\n            ]\n          },\n        {\n            path: 'users', children: [\n              { path: '', component: UsersComponent, pathMatch: 'full', canActivate: [RoleGuard], data: { role: \"Role.Organizer.valueOf()\" } as RoleData },\n              { path: 'add', component: UserEditorComponent, canActivate: [RoleGuard], data: { role: \"Role.Organizer.valueOf()\" } as RoleData },\n              { path: ':id', component: UserEditorComponent, canActivate: [RoleGuard], data: { role: \"Role.User.valueOf()\" } as RoleData }\n            ]\n          },\n        { path: 'advanced', component: AdvancedComponent, canActivate: [RoleGuard], data: { role: \"Role.Admin.valueOf()\" } as RoleData },\n        { path: 'display', component: ConfigureDisplayComponent, canActivate: [RoleGuard], data: { role: \"Role.Admin.valueOf()\" } as RoleData },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigureRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigureSharedModule.html":{"url":"modules/ConfigureSharedModule.html","title":"module - ConfigureSharedModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigureSharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigureSharedModule\n\n\n\ncluster_ConfigureSharedModule_declarations\n\n\n\ncluster_ConfigureSharedModule_imports\n\n\n\ncluster_ConfigureSharedModule_exports\n\n\n\n\nDivisionLookupComponent\n\nDivisionLookupComponent\n\n\n\nConfigureSharedModule\n\nConfigureSharedModule\n\nConfigureSharedModule -->\n\nDivisionLookupComponent->ConfigureSharedModule\n\n\n\n\n\nMemberSelectorComponent\n\nMemberSelectorComponent\n\nConfigureSharedModule -->\n\nMemberSelectorComponent->ConfigureSharedModule\n\n\n\n\n\nDivisionLookupComponent \n\nDivisionLookupComponent \n\nDivisionLookupComponent  -->\n\nConfigureSharedModule->DivisionLookupComponent \n\n\n\n\n\nMemberSelectorComponent \n\nMemberSelectorComponent \n\nMemberSelectorComponent  -->\n\nConfigureSharedModule->MemberSelectorComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nConfigureSharedModule -->\n\nSharedModule->ConfigureSharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/configure/_shared/_shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DivisionLookupComponent\n                        \n                        \n                            MemberSelectorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DivisionLookupComponent\n                        \n                        \n                            MemberSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule, MatAutocompleteModule, MatFormFieldModule, MatSelectModule } from '@angular/material';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n// import { DragulaModule } from 'ng2-dragula';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport { MemberSelectorComponent } from './member-selector/member-selector.component';\nimport { DivisionLookupComponent } from './division-lookup/division-lookup.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    // DragulaModule.forRoot(),\n    ReactiveFormsModule,\n    RouterModule,\n\n    DragDropModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    SharedModule,\n  ],\n  declarations: [MemberSelectorComponent, DivisionLookupComponent],\n  exports: [MemberSelectorComponent, DivisionLookupComponent]\n})\nexport class ConfigureSharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContextMenuComponent.html":{"url":"components/ContextMenuComponent.html","title":"component - ContextMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContextMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/event/list/context-menu/context-menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-context-menu\n            \n\n            \n                styleUrls\n                ./context-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./context-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                elmRef\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canEdit\n                            \n                            \n                                canStart\n                            \n                            \n                                close\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                publish\n                            \n                            \n                                rollback\n                            \n                            \n                                start\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    overlay\n                                \n                                \n                                    container\n                                \n                                \n                                    participant\n                                \n                                \n                                    currentUser\n                                \n                                \n                                    tournament\n                                \n                                \n                                    isTraining\n                                \n                                \n                                    isPublished\n                                \n                                \n                                    hasEnded\n                                \n                                \n                                    hasStarted\n                                \n                                \n                                    hasScores\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elmRef: ElementRef, dialogRef: MatDialogRef, renderer: Renderer2, graph: GraphService, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/event/list/context-menu/context-menu.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elmRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canEdit\n                        \n                        \n                    \n                \n            \n            \n                \ncanEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canStart\n                        \n                        \n                    \n                \n            \n            \n                \ncanStart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            edit\n                        \n                        \n                    \n                \n            \n            \n                \nedit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            publish\n                        \n                        \n                    \n                \n            \n            \n                \npublish()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rollback\n                        \n                        \n                    \n                \n            \n            \n                \nrollback()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            start\n                        \n                        \n                    \n                \n            \n            \n                \nstart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elmRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Role\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        overlay\n                    \n                \n\n                \n                    \n                        getoverlay()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:13\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        container\n                    \n                \n\n                \n                    \n                        getcontainer()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        participant\n                    \n                \n\n                \n                    \n                        getparticipant()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n\n                \n                    \n                        getcurrentUser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:23\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tournament\n                    \n                \n\n                \n                    \n                        gettournament()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTraining\n                    \n                \n\n                \n                    \n                        getisTraining()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isPublished\n                    \n                \n\n                \n                    \n                        getisPublished()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasEnded\n                    \n                \n\n                \n                    \n                        gethasEnded()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasStarted\n                    \n                \n\n                \n                    \n                        gethasStarted()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:30\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasScores\n                    \n                \n\n                \n                    \n                        gethasScores()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/list/context-menu/context-menu.component.ts:31\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ElementRef, Renderer2, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Role, ParticipationType, ITeamInDiscipline, IUser, ITournament } from 'app/model';\nimport { GraphService } from 'app/shared/services/graph.service';\n\n@Component({\n  selector: 'app-context-menu',\n  templateUrl: './context-menu.component.html',\n  styleUrls: ['./context-menu.component.scss']\n})\nexport class ContextMenuComponent implements OnInit/*, AfterViewInit*/ {\n\n  get overlay() {\n    return this.elmRef.nativeElement.closest('.cdk-overlay-pane');\n  }\n\n  get container() {\n    return this.elmRef.nativeElement.closest('.mat-dialog-container');\n  }\n\n  roles = Role;\n  get participant(): ITeamInDiscipline { return this.data.participant; }\n  get currentUser(): IUser { return this.data.currentUser; }\n  get tournament(): ITournament { return this.data.tournament; }\n\n\n  get isTraining() { return this.participant.type === ParticipationType.Training; }\n  get isPublished() { return this.participant.publishTime != null; }\n  get hasEnded() { return this.participant.endTime != null; }\n  get hasStarted() { return this.participant.startTime == null; }\n  get hasScores() {\n    const score = parseFloat(this.participant.total);\n    return this.participant.scores && this.participant.scores.length && score > 0;\n  }\n\n  constructor(\n    public elmRef: ElementRef,\n    private dialogRef: MatDialogRef,\n    private renderer: Renderer2,\n    private graph: GraphService,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.renderer.setStyle(this.overlay, 'top', this.data.mouseY + 'px');\n    this.renderer.setStyle(this.overlay, 'left', this.data.mouseX + 'px');\n  }\n\n  close() {\n    if (this.dialogRef) { this.dialogRef.close(); }\n  }\n\n  delete() {\n    if (this.currentUser.role >= Role.Organizer || this.participant.publishTime == null) {\n      this.participant.scores = [];\n      return this.graph.deleteData('ParticipantScores', this.participant.id).subscribe(() => this.close());\n    }\n  }\n\n  rollback() {\n    if (this.currentUser.role >= Role.Organizer) {\n      this.graph.post(`{rollback(participantId: ${this.participant.id})}`).subscribe(() => {\n        this.data.rollback();\n      });\n    }\n  }\n\n  canEdit() { return this.data.canEdit(this.participant); }\n  edit() { return this.data.edit(this.participant); }\n\n  canStart() { return this.data.canStart(this.participant, this.data.rowIndex); }\n  start() { return this.data.start(this.participant, null); }\n\n  stop() { return this.data.stop(this.participant, null); }\n  publish() { return this.data.publish(this.participant, null); }\n}\n\n    \n\n    \n        \n  \n    \n    Start\n  \n\n  \n    \n    Edit score\n  \n\n  \n    \n    Stop\n  \n\n  \n    \n    Publish\n  \n\n  = roles.Organizer)\" (click)=\"delete()\">\n    \n    Delete\n    Empty scores\n    Allready published!\n  \n\n  = roles.Organizer\" (click)=\"rollback()\">\n    \n    Rollback\n  \n\n\n    \n\n    \n                \n                    ./context-menu.component.scss\n                \n                .mat-nav-list {\n  padding: 0;\n  .mat-list-icon {\n    font-size: inherit;\n    line-height: 25px;\n  }\n}\n\n.context-backdrop {\n  background: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Start            Edit score            Stop            Publish    = roles.Organizer)\" (click)=\"delete()\">        Delete    Empty scores    Allready published!    = roles.Organizer\" (click)=\"rollback()\">        Rollback  '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContextMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogComponent.html":{"url":"components/DialogComponent.html","title":"component - DialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/dialog/dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog\n            \n\n            \n                styleUrls\n                ./dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _isOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelClicked\n                            \n                            \n                                closeDialog\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                okClicked\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                noButtons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                verify\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/dialog/dialog.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dialog/dialog.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noButtons\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dialog/dialog.component.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancel\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dialog/dialog.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        verify\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dialog/dialog.component.ts:16\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dialog/dialog.component.ts:44\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dialog/dialog.component.ts:37\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancelClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncancelClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dialog/dialog.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeDialog\n                        \n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dialog/dialog.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dialog/dialog.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            okClicked\n                        \n                        \n                    \n                \n            \n            \n                \nokClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dialog/dialog.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dialog/dialog.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dialog/dialog.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/dialog/dialog.component.ts:13\n                                \n                            \n\n                \n                    \n                        setisOpen(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/dialog/dialog.component.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, ElementRef, Input, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n  @Input() noButtons = false;\n  _isOpen = false;\n  @Input()\n  set isOpen(value) { this._isOpen = value; value ? this.openDialog() : this.closeDialog(); }\n  get isOpen() { return this._isOpen; }\n\n  @Output() cancel = new EventEmitter();\n  @Output() verify = new EventEmitter();\n\n  constructor(private element: ElementRef) { }\n\n  ngOnInit() { }\n\n  openDialog(): void {\n    this._isOpen = true;\n    this.element.nativeElement.querySelector('[role=\"dialogContainer\"]').className = 'open';\n  }\n  closeDialog(): void {\n    this._isOpen = false;\n    this.element.nativeElement.querySelector('[role=\"dialogContainer\"]').className = '';\n  }\n\n  okClicked() {\n    this.verify.emit();\n    this.closeDialog();\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKey(event: KeyboardEvent) {\n    if (event.key === 'Escape' || event.key === 'Esc') {\n      this.cancelClicked();\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  genericClickHandler(event: MouseEvent) {\n    if ((event.target).getAttribute('role') === 'dialogContainer') {\n      this.cancelClicked();\n    }\n  }\n\n  cancelClicked() {\n    this.cancel.emit();\n    this.closeDialog();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Cancel\n      Ok\n    \n  \n\n    \n\n    \n                \n                    ./dialog.component.scss\n                \n                @import \"../../../../styles/variables\";\n@import \"../../../../styles/panel\";\n[role=\"dialogContainer\"] {\n  position: fixed;\n  z-index: 20;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(black, 0.4);\n  display: none;\n  &.open {\n    display: block;\n  }\n}\n\naside {\n  @include panel;\n  position: relative;\n  top: 5rem;\n  width: 30rem;\n  margin: 0 auto;\n  background: white;\n  z-index: 2;\n  @media (max-width: 30rem) {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Cancel      Ok      '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DisciplineEditorComponent.html":{"url":"components/DisciplineEditorComponent.html","title":"component - DisciplineEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DisciplineEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/tournament/disciplines/discipline-editor/discipline-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-discipline-editor\n            \n\n            \n                styleUrls\n                ./discipline-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./discipline-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disciplineForm\n                            \n                            \n                                editingScore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                delete\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                discipline\n                            \n                            \n                                standalone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                disciplineChanged\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, graph: GraphService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/tournament/disciplines/discipline-editor/discipline-editor.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        discipline\n                    \n                \n                \n                    \n                        Type :         IDiscipline\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/disciplines/discipline-editor/discipline-editor.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        standalone\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/disciplines/discipline-editor/discipline-editor.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        disciplineChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/disciplines/discipline-editor/discipline-editor.component.ts:15\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/discipline-editor/discipline-editor.component.ts:59\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/discipline-editor/discipline-editor.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/discipline-editor/discipline-editor.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/discipline-editor/discipline-editor.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/discipline-editor/discipline-editor.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/discipline-editor/discipline-editor.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disciplineForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/disciplines/discipline-editor/discipline-editor.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editingScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/disciplines/discipline-editor/discipline-editor.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, EventEmitter, Output, Input, HostListener } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { IDiscipline } from 'app/model';\nimport { GraphService } from 'app/shared/services/graph.service';\n\n@Component({\n  selector: 'app-discipline-editor',\n  templateUrl: './discipline-editor.component.html',\n  styleUrls: ['./discipline-editor.component.scss']\n})\nexport class DisciplineEditorComponent implements OnInit {\n  @Input() standalone = false;\n  @Input() discipline: IDiscipline = {};\n  @Output() disciplineChanged: EventEmitter = new EventEmitter();\n\n  disciplineForm: FormGroup;\n  editingScore: boolean;\n\n  constructor(private fb: FormBuilder, private graph: GraphService) { }\n\n  ngOnInit() {\n    // Create the form\n    this.disciplineForm = this.fb.group({\n      id: [this.discipline.id],\n      name: [this.discipline.name, [Validators.required]],\n      teams: [this.discipline.teams],\n      tournament: [this.discipline.tournament],\n      sortOrder: [this.discipline.sortOrder]\n    });\n  }\n\n  save() {\n    if (this.discipline.tournament) {\n      const val = this.disciplineForm.value;\n      this.graph.saveData('Discipline', val, `{id}`).subscribe(result => this.disciplineChanged.emit(result));\n    } else {\n      this.disciplineChanged.emit(this.disciplineForm.value);\n    }\n  }\n\n  delete() {\n    if (!this.standalone) {\n      this.graph.deleteData('Discipline', this.disciplineForm.value.id).subscribe(result => this.disciplineChanged.emit(result));\n    } else {\n      this.disciplineChanged.emit('DELETED');\n    }\n  }\n\n  onChange($event) {\n\n  }\n\n  cancel() {\n    this.disciplineChanged.emit(this.discipline);\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === 'Escape' && !this.editingScore) {\n      this.cancel();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n        \n      \n\n      \n        \n          \n          \"{{ discipline.name }}\" score system\n        \n\n        \n      \n    \n    \n      \n      \n        Go back\n       Delete\n    \n  \n\n\n    \n\n    \n                \n                    ./discipline-editor.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    \"{{ discipline.name }}\" score system                                                  Go back       Delete      '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'DisciplineEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DisciplinesComponent.html":{"url":"components/DisciplinesComponent.html","title":"component - DisciplinesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DisciplinesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/tournament/disciplines/disciplines.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-disciplines\n            \n\n            \n                styleUrls\n                ./disciplines.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./disciplines.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultDisciplines\n                            \n                            \n                                defaultScoreGroups\n                            \n                            \n                                disciplineQuery\n                            \n                            \n                                selected\n                            \n                            \n                                subscriptions\n                            \n                            \n                                tournamentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDefaults\n                            \n                            \n                                addDiscipline\n                            \n                            \n                                drop\n                            \n                            \n                                findMissingDefaults\n                            \n                            \n                                judges\n                            \n                            \n                                    Async\n                                loadDisciplines\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                    Async\n                                saveDisciplines\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disciplineList\n                            \n                            \n                                standalone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                disciplineListchanged\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    canAddDefaults\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, graph: GraphService, configService: ConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disciplineList\n                    \n                \n                \n                    \n                        Type :         IDiscipline[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        standalone\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        disciplineListchanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:21\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:164\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDefaults\n                        \n                        \n                    \n                \n            \n            \n                \naddDefaults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:120\n                \n            \n\n\n            \n                \n                    Only available when editing tournaments. Not Advanced settings.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDiscipline\n                        \n                        \n                    \n                \n            \n            \n                \naddDiscipline()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \ndrop(event: CdkDragDrop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CdkDragDrop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findMissingDefaults\n                        \n                        \n                    \n                \n            \n            \n                \nfindMissingDefaults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            judges\n                        \n                        \n                    \n                \n            \n            \n                \njudges(discipline: IDiscipline)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    discipline\n                                    \n                                                IDiscipline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadDisciplines\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadDisciplines()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveDisciplines\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveDisciplines()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            select\n                        \n                        \n                    \n                \n            \n            \n                \nselect(discipline: IDiscipline)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    discipline\n                                    \n                                                IDiscipline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultDisciplines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDiscipline[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultScoreGroups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IScoreGroup[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disciplineQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `{\n    id,\n    name,\n    sortOrder,\n    tournamentId,\n    judgesPlain{id,name}\n  }`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDiscipline\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        canAddDefaults\n                    \n                \n\n                \n                    \n                        getcanAddDefaults()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/tournament/disciplines/disciplines.component.ts:37\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, HostListener, OnDestroy, OnInit, Input, Output, EventEmitter, Injector, OnChanges, SimpleChanges } from '@angular/core';\n// import { DragulaService } from 'ng2-dragula';\nimport { Subscription } from 'rxjs';\n\nimport { ConfigurationService } from 'app/shared/services/api';\nimport { IScoreGroup, IDiscipline } from 'app/model';\nimport { TournamentEditorComponent } from 'app/views/configure/tournament/tournament-editor/tournament-editor.component';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Logger } from 'app/shared/services/Logger';\nimport { CommonService } from 'app/shared/services/common.service';\n\n@Component({\n  selector: 'app-disciplines',\n  templateUrl: './disciplines.component.html',\n  styleUrls: ['./disciplines.component.scss']\n})\nexport class DisciplinesComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() standalone = false;\n  @Input() disciplineList: IDiscipline[] = [];\n  @Output() disciplineListchanged = new EventEmitter();\n\n  disciplineQuery = `{\n    id,\n    name,\n    sortOrder,\n    tournamentId,\n    judgesPlain{id,name}\n  }`;\n\n  defaultScoreGroups: IScoreGroup[];\n  defaultDisciplines: IDiscipline[];\n  selected: IDiscipline;\n\n  tournamentId: number;\n\n  get canAddDefaults() {\n    return this.findMissingDefaults().length;\n  }\n\n  subscriptions: Subscription[] = [];\n\n  constructor(\n    private injector: Injector,\n    private graph: GraphService,\n    private configService: ConfigurationService\n  ) { }\n\n  ngOnInit() {\n    this.configService.getByname('defaultValues').toPromise().then(config => {\n      this.defaultDisciplines = config.value.discipline;\n      this.defaultScoreGroups = config.value.scoreGroup;\n    });\n    if (!this.standalone) {\n      this.tournamentId = this.injector.get(TournamentEditorComponent).tournamentId;\n      this.loadDisciplines();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.disciplineList && changes.disciplineList.currentValue) { }\n  }\n\n  drop(event: CdkDragDrop) {\n    moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    this.disciplineList.forEach((div, idx) => (div.sortOrder = idx));\n    this.saveDisciplines();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => (s ? s.unsubscribe() : null));\n  }\n\n  judges(discipline: IDiscipline) {\n    return !discipline || !discipline.judgesPlain\n      ? ['']\n      : Array.from(discipline.judgesPlain.reduce((judges, judge) => {\n        if (judge.name !== 'System') {\n          judges.add(judge.name);\n        }\n        return judges;\n      }, new Set()));\n  }\n\n  async loadDisciplines(): Promise {\n    if (this.tournamentId) {\n      this.disciplineList = (await this.graph.getData(`{getDisciplines(tournamentId:${this.tournamentId})${this.disciplineQuery}}`).toPromise()).getDisciplines;\n    }\n    this.disciplineListchanged.emit(this.disciplineList);\n    return this.disciplineList;\n  }\n\n  async saveDisciplines(): Promise {\n    if (this.tournamentId) {\n      const disciplineList = this.disciplineList.map(d => CommonService.omit(d, ['judgesPlain']));\n      const result = (await this.graph.saveData('Disciplines', disciplineList, this.disciplineQuery).toPromise());\n      this.disciplineList = result.saveDisciplines;\n    }\n    this.disciplineListchanged.emit(this.disciplineList);\n    return this.disciplineList;\n  }\n\n  addDiscipline() {\n    const discipline: IDiscipline = (this.standalone\n      ? { name: null, sortOrder: null }\n      : {\n        id: null,\n        name: null,\n        teams: [],\n        tournamentId: this.tournamentId,\n        sortOrder: null\n      });\n    this.disciplineList.push(discipline);\n    this.selected = discipline;\n  }\n\n  /**\n   * Only available when editing tournaments. Not Advanced settings.\n   */\n  addDefaults() {\n    if (this.tournamentId && this.defaultDisciplines) {\n      const disciplineList = this.findMissingDefaults().map(group => {\n        group.tournamentId = this.tournamentId;\n        return group;\n      });\n      this.graph.saveData('Disciplines', disciplineList, `{id}`).subscribe(res => {\n        // Add default score groups\n        let scoreGroups = [];\n        res.saveDisciplines.forEach(d => {\n          const defaults = JSON.parse(JSON.stringify(this.defaultScoreGroups));\n          scoreGroups = scoreGroups.concat(\n            defaults.map(group => {\n              group.disciplineId = d.id;\n              return group;\n            })\n          );\n        });\n        this.graph.saveData('ScoreGroups', scoreGroups, '{id}').subscribe(() => this.loadDisciplines());\n      });\n    }\n  }\n\n  findMissingDefaults() {\n    return (this.tournamentId && this.defaultDisciplines && this.defaultDisciplines.length)\n      ? this.defaultDisciplines.filter(def => this.disciplineList.findIndex(d => d.name === def.name)  (this.selected[k] = $event[k]));\n    } else {\n      this.disciplineList.splice(this.disciplineList.findIndex(d => d.sortOrder === this.selected.sortOrder), 1);\n    }\n    this.select(null);\n    this.loadDisciplines();\n  }\n\n  select(discipline: IDiscipline) {\n    this.selected = discipline;\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === '+' || evt.key === 'NumpadAdd') {\n      this.addDiscipline();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          {{ discipline.name }}\n        \n        \n          ({{ judges(discipline).length }}) {{ judges(discipline).join(', ') }}\n        \n      \n      \n        \n          \n        \n      \n    \n  \n\n\n  \n  Add Disciplines\n\n\n  \n  Add Default Disciplines\n\n\n    \n\n    \n                \n                    ./disciplines.component.scss\n                \n                @import \"../../../../../styles/variables\";\n\nform {\n  margin-top: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ discipline.name }}                          ({{ judges(discipline).length }}) {{ judges(discipline).join(\\', \\') }}                                                              Add Disciplines    Add Default Disciplines'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'DisciplinesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DisciplinesModule.html":{"url":"modules/DisciplinesModule.html","title":"module - DisciplinesModule","body":"\n                   \n\n\n\n\n    Modules\n    DisciplinesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DisciplinesModule\n\n\n\ncluster_DisciplinesModule_declarations\n\n\n\ncluster_DisciplinesModule_imports\n\n\n\ncluster_DisciplinesModule_exports\n\n\n\n\nDisciplineEditorComponent\n\nDisciplineEditorComponent\n\n\n\nDisciplinesModule\n\nDisciplinesModule\n\nDisciplinesModule -->\n\nDisciplineEditorComponent->DisciplinesModule\n\n\n\n\n\nDisciplinesComponent\n\nDisciplinesComponent\n\nDisciplinesModule -->\n\nDisciplinesComponent->DisciplinesModule\n\n\n\n\n\nDisciplineEditorComponent \n\nDisciplineEditorComponent \n\nDisciplineEditorComponent  -->\n\nDisciplinesModule->DisciplineEditorComponent \n\n\n\n\n\nDisciplinesComponent \n\nDisciplinesComponent \n\nDisciplinesComponent  -->\n\nDisciplinesModule->DisciplinesComponent \n\n\n\n\n\nScoreSystemModule\n\nScoreSystemModule\n\nDisciplinesModule -->\n\nScoreSystemModule->DisciplinesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDisciplinesModule -->\n\nSharedModule->DisciplinesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/configure/tournament/disciplines/disciplines.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DisciplineEditorComponent\n                        \n                        \n                            DisciplinesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ScoreSystemModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DisciplineEditorComponent\n                        \n                        \n                            DisciplinesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n// import { DragulaModule } from 'ng2-dragula';\nimport { MatCardModule, MatFormFieldModule, MatInputModule, MatButtonModule } from '@angular/material';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport { ScoreSystemModule } from '../score-system/score-system.module';\n\nimport { DisciplinesComponent } from './disciplines.component';\nimport { DisciplineEditorComponent } from './discipline-editor/discipline-editor.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    // DragulaModule.forRoot(),\n    ScoreSystemModule,\n\n    DragDropModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n\n    SharedModule,\n  ],\n  declarations: [\n    DisciplinesComponent, DisciplineEditorComponent\n  ],\n  exports: [\n    DisciplinesComponent, DisciplineEditorComponent,\n  ]\n})\nexport class DisciplinesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DisplayComponent.html":{"url":"components/DisplayComponent.html","title":"component - DisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/event/display/display.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-display\n            \n\n            \n                styleUrls\n                ./display.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                renderDisplayTemplates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: EventComponent, graph: GraphService, displayService: DisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/event/display/display.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        EventComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayService\n                                                  \n                                                        \n                                                                        DisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/display/display.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/display/display.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renderDisplayTemplates\n                        \n                        \n                    \n                \n            \n            \n                \nrenderDisplayTemplates(force?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/display/display.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    force\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['', '']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/display/display.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/display/display.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DisplayService } from 'app/shared/services/api';\nimport { ITournament } from 'app/model';\nimport { EventComponent } from '../event.component';\nimport { GraphService } from 'app/shared/services/graph.service';\n\n@Component({\n  selector: 'app-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.scss']\n})\nexport class DisplayComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n\n  display = ['', ''];\n\n  constructor(\n    private parent: EventComponent,\n    private graph: GraphService,\n    private displayService: DisplayService) {\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(this.graph.listen('teamInDisciplineModified', '{id}').subscribe(message => {\n      this.renderDisplayTemplates(true);\n    }));\n    this.renderDisplayTemplates();\n  }\n\n  renderDisplayTemplates(force?: boolean) {\n    if (force) {\n      this.displayService.invalidateCache();\n    }\n    this.displayService.getAll(this.parent.tournamentId).subscribe(displays => this.display = displays);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n\nClick a panel to go fullscreen. Press ESC twice to return.\n\n    \n\n    \n                \n                    ./display.component.scss\n                \n                @import \"../../../../styles/variables\";\n:host {\n  display: block;\n}\n\nheader {\n  padding-bottom: 4rem;\n  padding-top: 1rem;\n  line-height: 3em;\n  small {\n    font-size: 0.8em;\n    line-height: normal;\n    font-weight: normal;\n    display: block;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Click a panel to go fullscreen. Press ESC twice to return.'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'DisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DisplayService.html":{"url":"injectables/DisplayService.html","title":"injectable - DisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/api/display/display.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                            \n                                getDisplay\n                            \n                            \n                                invalidateCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cache: HttpCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/api/display/display.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        HttpCacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll(tournamentId: number, current?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/display/display.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournamentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    current\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDisplay\n                        \n                        \n                    \n                \n            \n            \n                \ngetDisplay(tournamentId: number, displayId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/display/display.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournamentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    displayId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invalidateCache\n                        \n                        \n                    \n                \n            \n            \n                \ninvalidateCache()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/display/display.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpCacheService } from 'app/shared/interceptors/http-cache.service';\n\n@Injectable({ providedIn: 'root' })\nexport class DisplayService {\n\n  constructor(private http: HttpClient, private cache: HttpCacheService) { }\n\n  invalidateCache() {\n    this.cache.invalidateAll(`/api/display/`)\n  }\n  /**\n   *\n   */\n  getAll(tournamentId: number, current?: number): Observable {\n    let params;\n    if (current) {\n      params = { params: { current: current } };\n    }\n    return this.http.get(`/api/display/${tournamentId}`, params);\n  }\n\n  /**\n   *\n   */\n  getDisplay(tournamentId: number, displayId: number): Observable {\n    return this.http.get(`/api/display/${tournamentId}/${displayId}`, { responseType: 'text' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DivisionEditorComponent.html":{"url":"components/DivisionEditorComponent.html","title":"component - DivisionEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DivisionEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/tournament/divisions/division-editor/division-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-division-editor\n            \n\n            \n                styleUrls\n                ./division-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./division-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                divisionForm\n                            \n                            \n                                divisionTypes\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                delete\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                division\n                            \n                            \n                                standalone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                divisionChanged\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, graph: GraphService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/tournament/divisions/division-editor/division-editor.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        division\n                    \n                \n                \n                    \n                        Type :         IDivision\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/division-editor/division-editor.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        standalone\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/division-editor/division-editor.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        divisionChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/division-editor/division-editor.component.ts:16\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/division-editor/division-editor.component.ts:65\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/division-editor/division-editor.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/division-editor/division-editor.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/division-editor/division-editor.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/division-editor/division-editor.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            divisionForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/division-editor/division-editor.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            divisionTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DivisionType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/division-editor/division-editor.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            types\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { id: DivisionType.Age, name: 'Age' },\n    { id: DivisionType.Gender, name: 'Gender' }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/division-editor/division-editor.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, EventEmitter, Output, Input, HostListener } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { IDivision, DivisionType } from 'app/model';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { DivisionsComponent } from '../divisions.component';\n\n@Component({\n  selector: 'app-division-editor',\n  templateUrl: './division-editor.component.html',\n  styleUrls: ['./division-editor.component.scss']\n})\nexport class DivisionEditorComponent implements OnInit {\n  @Input() standalone = false;\n  @Input() division: IDivision = {};\n  @Output() divisionChanged: EventEmitter = new EventEmitter();\n  divisionForm: FormGroup;\n  divisionTypes = DivisionType;\n  types = [\n    { id: DivisionType.Age, name: 'Age' },\n    { id: DivisionType.Gender, name: 'Gender' }\n  ];\n\n  constructor(private fb: FormBuilder, private graph: GraphService) { }\n\n  ngOnInit() {\n    this.divisionForm = this.fb.group({\n      id: [this.division.id],\n      name: [this.division.name, [Validators.required]],\n      tournamentId: [this.division.tournamentId],\n      sortOrder: [this.division.sortOrder],\n      min: [this.division.min, [Validators.required]],\n      max: [this.division.max, [Validators.required]],\n      scorable: [this.division.scorable],\n      type: [this.division.type, [Validators.required]]\n    });\n  }\n\n\n  save() {\n    if (this.division.tournamentId) {\n      this.graph.saveData('Division', this.divisionForm.value, DivisionsComponent.divisionsQuery).subscribe(result => {\n        this.divisionChanged.emit(result);\n      });\n    } else {\n      this.divisionChanged.emit(this.divisionForm.value);\n    }\n  }\n\n  delete() {\n    if (!this.standalone) {\n      this.graph.deleteData('Division', this.divisionForm.value.id).subscribe(result => {\n        this.divisionChanged.emit(result);\n      });\n    } else {\n      this.divisionChanged.emit('DELETED');\n    }\n  }\n\n  close() {\n    this.divisionChanged.emit(this.division);\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === 'Escape') {\n      this.close();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n            {{type.name}}\n          \n        \n      \n      \n        \n          \n        \n        \n          \n        \n      \n      \n        {{'Judges should score this division' | translate }}\n      \n    \n    \n      \n       Cancel\n       Delete\n    \n  \n\n\n    \n\n    \n                \n                    ./division-editor.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    {{type.name}}                                                                                                      {{\\'Judges should score this division\\' | translate }}                           Cancel       Delete      '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'DivisionEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DivisionLookupComponent.html":{"url":"components/DivisionLookupComponent.html","title":"component - DivisionLookupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DivisionLookupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/_shared/division-lookup/division-lookup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DivisionLookupComponent), multi: true }\n                \n            \n\n\n            \n                selector\n                app-division-lookup\n            \n\n            \n                styleUrls\n                ./division-lookup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./division-lookup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childControl\n                            \n                            \n                                compareWith\n                            \n                            \n                                divisions\n                            \n                            \n                                originalValue\n                            \n                            \n                                propagateValueChange\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                placeholder\n                            \n                            \n                                tournamentId\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(graph: GraphService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : 'Division'\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tournamentId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (value: IDivision) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: IDivision)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                IDivision\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            divisions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDivision[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            originalValue\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateValueChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/division-lookup/division-lookup.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef, OnDestroy } from '@angular/core';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { IDivision, DivisionType } from 'app/model';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n  selector: 'app-division-lookup',\n  templateUrl: './division-lookup.component.html',\n  styleUrls: ['./division-lookup.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DivisionLookupComponent), multi: true }\n  ]\n})\nexport class DivisionLookupComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  @Input() placeholder = 'Division';\n  @Input() icon;\n  @Input() type: string;\n  @Input() tournamentId: number;\n\n  divisions: IDivision[] = [];\n  childControl = new FormControl();\n  originalValue;\n\n  private subscriptions: Subscription[] = [];\n\n  propagateValueChange: (value: IDivision) => void; // Fired when value changes\n  compareWith = (val, sel) => val.id === sel.id;\n\n  constructor(private graph: GraphService) { }\n\n  ngOnInit() {\n    this.graph.getData(`{getDivisions(tournamentId:${this.tournamentId},type:${DivisionType[this.type]}){id,name,type,min,max,scorable}}`).subscribe(res => {\n      this.divisions = res.getDivisions;\n    });\n    this.subscriptions.push(this.childControl.valueChanges.subscribe(val => {\n      if (this.propagateValueChange && val !== this.originalValue) {\n        this.originalValue = val;\n        this.propagateValueChange(val);\n      }\n    }));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  writeValue(value: IDivision): void {\n    if (this.childControl.value !== value) {\n      this.originalValue = value;\n      this.childControl.setValue(value);\n      this.childControl.markAsPristine();\n    }\n  }\n  registerOnChange(fn: (value: IDivision) => void) {\n    this.propagateValueChange = fn;\n  }\n  registerOnTouched(fn: any): void { }\n  setDisabledState?(isDisabled: boolean): void {\n    this.childControl[isDisabled ? 'disable' : 'enable']();\n  }\n}\n\n    \n\n    \n        \n  {{ placeholder }}\n  \n    {{division.name}}\n  \n\n\n    \n\n    \n                \n                    ./division-lookup.component.scss\n                \n                :host {\n  display: inline-block;\n  .mat-form-field {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ placeholder }}      {{division.name}}  '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'DivisionLookupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DivisionsComponent.html":{"url":"components/DivisionsComponent.html","title":"component - DivisionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DivisionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/tournament/divisions/divisions.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-divisions\n            \n\n            \n                styleUrls\n                ./divisions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./divisions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ageDivisions\n                            \n                            \n                                defaultDivisions\n                            \n                            \n                                    Static\n                                divisionsQuery\n                            \n                            \n                                genderDivisions\n                            \n                            \n                                isAdding\n                            \n                            \n                                selected\n                            \n                            \n                                subscriptions\n                            \n                            \n                                tournamentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDefaults\n                            \n                            \n                                addDivision\n                            \n                            \n                                divisionReceived\n                            \n                            \n                                drop\n                            \n                            \n                                findMissingDefaults\n                            \n                            \n                                loadDivisions\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                    Async\n                                saveDivisions\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                divisions\n                            \n                            \n                                standalone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                divisionsChanged\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    canAddDefaults\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(graph: GraphService, configService: ConfigurationService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        divisions\n                    \n                \n                \n                    \n                        Type :         IDivision[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        standalone\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        divisionsChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:32\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:156\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDefaults\n                        \n                        \n                    \n                \n            \n            \n                \naddDefaults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDivision\n                        \n                        \n                    \n                \n            \n            \n                \naddDivision()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            divisionReceived\n                        \n                        \n                    \n                \n            \n            \n                \ndivisionReceived(divisions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    divisions\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \ndrop(event: CdkDragDrop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CdkDragDrop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findMissingDefaults\n                        \n                        \n                    \n                \n            \n            \n                \nfindMissingDefaults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadDivisions\n                        \n                        \n                    \n                \n            \n            \n                \nloadDivisions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveDivisions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveDivisions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            select\n                        \n                        \n                    \n                \n            \n            \n                \nselect(division: IDivision)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    division\n                                    \n                                                IDivision\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ageDivisions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDivision[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultDivisions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDivision[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            divisionsQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `{\n    id,\n    name,\n    sortOrder,\n    type,\n    min,\n    max,\n    scorable\n  }`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genderDivisions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDivision[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdding\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDivision\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        canAddDefaults\n                    \n                \n\n                \n                    \n                        getcanAddDefaults()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/tournament/divisions/divisions.component.ts:39\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, HostListener, OnDestroy, OnInit, Input, EventEmitter, Output, Injector, OnChanges, SimpleChanges } from '@angular/core';\n// import { DragulaService } from 'ng2-dragula';\nimport { Subscription } from 'rxjs';\n\nimport { ConfigurationService } from 'app/shared/services/api';\nimport { IDivision, DivisionType } from 'app/model';\nimport { TournamentEditorComponent } from 'app/views/configure/tournament/tournament-editor/tournament-editor.component';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-divisions',\n  templateUrl: './divisions.component.html',\n  styleUrls: ['./divisions.component.scss']\n})\nexport class DivisionsComponent implements OnInit, OnDestroy, OnChanges {\n  static divisionsQuery = `{\n    id,\n    name,\n    sortOrder,\n    type,\n    min,\n    max,\n    scorable\n  }`;\n\n  @Input() standalone = false;\n  @Input() divisions: IDivision[] = [];\n  tournamentId: number;\n\n\n  @Output() divisionsChanged = new EventEmitter();\n  ageDivisions: IDivision[];\n  genderDivisions: IDivision[];\n  defaultDivisions: IDivision[];\n  selected: IDivision;\n  isAdding = false;\n\n  get canAddDefaults() { return this.findMissingDefaults().length; }\n\n  subscriptions: Subscription[] = [];\n\n  constructor(\n    private graph: GraphService,\n    private configService: ConfigurationService,\n    private injector: Injector) { }\n\n  async ngOnInit() {\n    const defaults = await this.configService.getByname('defaultValues').toPromise();\n    this.defaultDivisions = (typeof defaults.value === 'string' ? JSON.parse(defaults.value) : defaults.value).division;\n    if (!this.standalone) {\n      this.tournamentId = this.injector.get(TournamentEditorComponent).tournamentId;\n      this.loadDivisions();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.divisions && changes.divisions.currentValue) {\n      this.divisionReceived(this.divisions);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s ? s.unsubscribe() : null);\n  }\n\n  drop(event: CdkDragDrop) {\n    moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    event.container.data.forEach((div, idx) => (div.sortOrder = idx));\n    this.saveDivisions();\n  }\n\n  async saveDivisions(): Promise {\n    this.divisions = [...this.genderDivisions, ...this.ageDivisions];\n    if (this.tournamentId) {\n      const result = (await this.graph.saveData('Divisions', this.divisions, DivisionsComponent.divisionsQuery).toPromise());\n      this.divisions = result.saveDivisions;\n    }\n    this.divisionsChanged.emit(this.divisions);\n    return this.divisions;\n  }\n\n  loadDivisions() {\n    if (this.tournamentId) {\n      this.graph.getData(`{getDivisions(tournamentId:${this.tournamentId})${DivisionsComponent.divisionsQuery}}`).subscribe(res => this.divisionReceived(res.getDivisions));\n    } else if (this.divisions) {\n      this.divisionReceived(this.divisions);\n    }\n    this.divisionsChanged.emit(this.divisions);\n  }\n\n  divisionReceived(divisions) {\n    this.divisions = divisions;\n    this.genderDivisions = this.divisions.filter(d => d.type === DivisionType.Gender);\n    this.ageDivisions = this.divisions.filter(d => d.type === DivisionType.Age);\n  }\n\n  addDivision() {\n    this.isAdding = true;\n    this.selected = (this.standalone ? { name: null, sortOrder: null, type: null } : {\n      id: null, name: null, sortOrder: null, type: null, tournamentId: this.tournamentId\n    });\n  }\n\n  addDefaults() {\n    if (this.tournamentId && this.defaultDivisions) {\n      const divisions = this.findMissingDefaults().map(group => {\n        group.tournamentId = this.tournamentId;\n        return group;\n      });\n      this.graph.saveData('Divisions', divisions, DivisionsComponent.divisionsQuery).subscribe(result => this.loadDivisions());\n    }\n  }\n\n  findMissingDefaults() {\n    if (this.tournamentId && this.defaultDivisions && this.defaultDivisions.length) {\n      return this.defaultDivisions.filter(def => this.divisions.findIndex(d => d.name === def.name)  this.selected[k] = $event[k]);\n\n      switch ($event.type) {\n        case DivisionType.Gender: divisions = this.genderDivisions; break;\n        case DivisionType.Age: divisions = this.ageDivisions; break;\n\n      }\n      if (this.isAdding) {\n        // Add element to given bin\n        divisions.push($event);\n      }\n    } else {\n      // $event === 'DELETED', Remove element from given bin\n      divisions.splice(divisions.findIndex(d => d.sortOrder === this.selected.sortOrder), 1);\n    }\n\n    this.isAdding = false;\n    this.divisions = this.ageDivisions.concat(this.genderDivisions); // Re-create divisions from the two bins\n    this.select(null);\n    this.loadDivisions();\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === '+' || evt.key === 'NumpadAdd') {\n      this.addDivision();\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n        Gender group\n      \n    \n    \n      \n        \n          \n            {{ division.name }}\n          \n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n        Age group\n      \n    \n    \n      \n        \n          \n            {{ division.name }}\n          \n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n\n  \n\n\n\n  \n  Add Divisions\n\n\n  \n  Add Default Divisions\n\n\n    \n\n    \n                \n                    ./divisions.component.scss\n                \n                section header {\n  margin-left: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Gender group                                                  {{ division.name }}                                                                                                                    Age group                                                  {{ division.name }}                                                                                              Add Divisions    Add Default Divisions'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'DivisionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DivisionsModule.html":{"url":"modules/DivisionsModule.html","title":"module - DivisionsModule","body":"\n                   \n\n\n\n\n    Modules\n    DivisionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DivisionsModule\n\n\n\ncluster_DivisionsModule_declarations\n\n\n\ncluster_DivisionsModule_imports\n\n\n\ncluster_DivisionsModule_exports\n\n\n\n\nDivisionEditorComponent\n\nDivisionEditorComponent\n\n\n\nDivisionsModule\n\nDivisionsModule\n\nDivisionsModule -->\n\nDivisionEditorComponent->DivisionsModule\n\n\n\n\n\nDivisionsComponent\n\nDivisionsComponent\n\nDivisionsModule -->\n\nDivisionsComponent->DivisionsModule\n\n\n\n\n\nDivisionEditorComponent \n\nDivisionEditorComponent \n\nDivisionEditorComponent  -->\n\nDivisionsModule->DivisionEditorComponent \n\n\n\n\n\nDivisionsComponent \n\nDivisionsComponent \n\nDivisionsComponent  -->\n\nDivisionsModule->DivisionsComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDivisionsModule -->\n\nSharedModule->DivisionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/configure/tournament/divisions/divisions.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DivisionEditorComponent\n                        \n                        \n                            DivisionsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DivisionEditorComponent\n                        \n                        \n                            DivisionsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n// import { DragulaModule } from 'ng2-dragula';\nimport { MatCardModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatOptionModule, MatButtonModule, MatCheckboxModule } from '@angular/material';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport { DivisionsComponent } from './divisions.component';\nimport { DivisionEditorComponent } from './division-editor/division-editor.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    // DragulaModule.forRoot(),\n\n    DragDropModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatCardModule,\n    MatButtonModule,\n    MatCheckboxModule,\n\n    SharedModule\n  ],\n  declarations: [\n    DivisionsComponent, DivisionEditorComponent\n  ],\n  exports: [\n    DivisionsComponent, DivisionEditorComponent\n  ]\n})\nexport class DivisionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDialogComponent.html":{"url":"components/ErrorDialogComponent.html","title":"component - ErrorDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/error-dialog/error-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-dialog\n            \n\n            \n                styleUrls\n                ./error-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                counter\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                step\n                            \n                            \n                                timeRemaining\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                countDown\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/error-dialog/error-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/error-dialog/error-dialog.component.ts:43\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/error-dialog/error-dialog.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            countDown\n                        \n                        \n                    \n                \n            \n            \n                \ncountDown()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/error-dialog/error-dialog.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/error-dialog/error-dialog.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/error-dialog/error-dialog.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/error-dialog/error-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/error-dialog/error-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            step\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/error-dialog/error-dialog.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeRemaining\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/error-dialog/error-dialog.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, HostListener } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-error-dialog',\n  templateUrl: './error-dialog.component.html',\n  styleUrls: ['./error-dialog.component.scss']\n})\nexport class ErrorDialogComponent implements OnInit {\n  timeRemaining = 0;\n  step = 100;\n\n  counter;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit() {\n    this.countDown();\n  }\n\n  close() {\n    clearTimeout(this.counter);\n    this.dialogRef.close();\n  }\n\n  countDown() {\n    const totalTime = this.data.autocloseAfter;\n    clearTimeout(this.counter);\n    this.counter = setTimeout(() => {\n      this.timeRemaining += (this.step * 100 / totalTime);\n      if (this.timeRemaining \n    \n\n    \n        {{ data.header }}\n{{ 'Error' | translate }}\n\n\n  {{ data.message }}\n  {{ data.stack }}\n\n\n\n  {{'Ok' | translate}}\n\n\n  \n\n\n    \n\n    \n                \n                    ./error-dialog.component.scss\n                \n                footer {\n  padding-top: 16px;\n  margin: 4px -24px -24px -24px;\n}\n\n.mat-dialog-content {\n  white-space: pre-wrap;\n  pre {\n    max-height: 10rem;\n    font-size: 0.8em;\n    margin: 0;\n    padding: 0.5rem;\n    white-space: pre;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.header }}{{ \\'Error\\' | translate }}  {{ data.message }}  {{ data.stack }}  {{\\'Ok\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/error-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                Generic error handler. Error message is displayed in app.component\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _error\n                            \n                            \n                                    Private\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearError\n                            \n                            \n                                setError\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    error\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/error-handler.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearError\n                        \n                        \n                    \n                \n            \n            \n                \nclearError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/error-handler.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setError\n                        \n                        \n                    \n                \n            \n            \n                \nsetError(value: string, header?: string, stack?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/error-handler.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    stack\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/interceptors/error-handler.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/interceptors/error-handler.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n\n                \n                    \n                        geterror()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/interceptors/error-handler.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { ErrorDialogComponent } from 'app/shared/components/error-dialog/error-dialog.component';\n\n/**\n * Generic error handler. Error message is displayed in app.component\n */\n@Injectable({ providedIn: 'root' })\nexport class ErrorHandlerService {\n  private dialogRef: MatDialogRef;\n\n  private _error: string;\n  get error() { return this._error; }\n\n  constructor(private dialog: MatDialog) { }\n\n  setError(value: string, header?: string, stack?: string) {\n    this.clearError();\n    if (value) {\n      if (typeof value === 'string') {\n        this._error = value.replace(/^\"|\"$/g, '');\n      } else if (typeof value === 'object') {\n        this._error = value['message'] ? value['message'] : value[0];\n      }\n      const opts = {\n        header: header,\n        message: this._error,\n        stack: stack,\n        autocloseAfter: 10 * 1000\n      };\n      this.dialogRef = this.dialog.open(ErrorDialogComponent, { data: opts });\n    }\n  }\n\n  clearError() {\n    if (this.dialogRef) { this.dialogRef.close(); }\n    this._error = null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventComponent.html":{"url":"components/EventComponent.html","title":"component - EventComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/event/event.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-event\n            \n\n            \n                styleUrls\n                ./event.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./event.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                query\n                            \n                            \n                                subscriptions\n                            \n                            \n                                tournament\n                            \n                            \n                                tournamentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, graph: GraphService, seo: SEOService, browser: BrowserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/event/event.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seo\n                                                  \n                                                        \n                                                                        SEOService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        browser\n                                                  \n                                                        \n                                                                        BrowserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/event.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/event.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `{\n    id,\n    name,\n    description_en,\n    startDate,\n    endDate\n  }`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/event.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/event.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournament\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITournament\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/event.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/event.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { ITournament } from 'app/model/ITournament';\nimport { BrowserService } from 'app/shared/browser.service';\nimport { SEOService } from 'app/shared/services/seo.service';\n\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['./event.component.scss']\n})\nexport class EventComponent implements OnInit, OnDestroy {\n  query = `{\n    id,\n    name,\n    description_en,\n    startDate,\n    endDate\n  }`;\n  tournamentId: number;\n  tournament: ITournament;\n  subscriptions: Subscription[] = [];\n\n  constructor(private route: ActivatedRoute, private graph: GraphService, private seo: SEOService, private browser: BrowserService) { }\n\n  ngOnInit() {\n    this.subscriptions.push(this.route.params.subscribe((params: any) => {\n      const id = this.tournamentId = +params.id;\n      this.graph.getData(`{tournament(id:${id})${this.query}}`).subscribe((data) => {\n        this.tournament = data.tournament;\n        this.seo.setTitle(this.tournament.name, this.tournament.description_en);\n      });\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n\n    \n\n    \n        \n  \n    {{ tournament.startDate | date: 'dd.MM' }} - {{ tournament.endDate | date: 'dd.MM' }} {{ tournament.endDate\n      | date: 'yyyy' }}\n    {{ tournament.name }}\n  \n\n  \n    \n  \n  \n    \n      \n      Settings \n    \n    \n      \n      Schedule\n    \n    \n      \n      Results \n    \n    \n      \n      {{'Display' | translate }}\n    \n    \n      \n      {{'Judge signoff' | translate }}\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./event.component.scss\n                \n                @import \"../../../styles/variables\";\nheader {\n  padding: 1rem 0.5rem;\n  line-height: 3em;\n  position: sticky;\n  top: 3rem;\n  z-index: 5;\n  pointer-events: none;\n  .mat-icon-button {\n    pointer-events: auto;\n  }\n  // @media (min-width: $stop1) {\n    display: flex;\n    .hgroup {\n      flex: 1;\n    }\n    .buttons {\n      margin-top: 0.8rem;\n    }\n  // }\n  &::after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n  small {\n    font-size: 0.8em;\n    line-height: normal;\n    font-weight: normal;\n    display: block;\n  }\n}\n\n::ng-deep .buttons {\n  .active {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ tournament.startDate | date: \\'dd.MM\\' }} - {{ tournament.endDate | date: \\'dd.MM\\' }} {{ tournament.endDate      | date: \\'yyyy\\' }}    {{ tournament.name }}                            Settings                     Schedule                    Results                     {{\\'Display\\' | translate }}                    {{\\'Judge signoff\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'EventComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventModule.html":{"url":"modules/EventModule.html","title":"module - EventModule","body":"\n                   \n\n\n\n\n    Modules\n    EventModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventModule\n\n\n\ncluster_EventModule_declarations\n\n\n\ncluster_EventModule_imports\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\n\n\nEventModule\n\nEventModule\n\nEventModule -->\n\nContextMenuComponent->EventModule\n\n\n\n\n\nDisplayComponent\n\nDisplayComponent\n\nEventModule -->\n\nDisplayComponent->EventModule\n\n\n\n\n\nEventComponent\n\nEventComponent\n\nEventModule -->\n\nEventComponent->EventModule\n\n\n\n\n\nFullscreenComponent\n\nFullscreenComponent\n\nEventModule -->\n\nFullscreenComponent->EventModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nEventModule -->\n\nListComponent->EventModule\n\n\n\n\n\nResultsComponent\n\nResultsComponent\n\nEventModule -->\n\nResultsComponent->EventModule\n\n\n\n\n\nScoreEditorComponent\n\nScoreEditorComponent\n\nEventModule -->\n\nScoreEditorComponent->EventModule\n\n\n\n\n\nSignoffReportComponent\n\nSignoffReportComponent\n\nEventModule -->\n\nSignoffReportComponent->EventModule\n\n\n\n\n\nEventRoutingModule\n\nEventRoutingModule\n\nEventModule -->\n\nEventRoutingModule->EventModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEventModule -->\n\nSharedModule->EventModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/event/event.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContextMenuComponent\n                        \n                        \n                            DisplayComponent\n                        \n                        \n                            EventComponent\n                        \n                        \n                            FullscreenComponent\n                        \n                        \n                            ListComponent\n                        \n                        \n                            ResultsComponent\n                        \n                        \n                            ScoreEditorComponent\n                        \n                        \n                            SignoffReportComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ContextMenuComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EventRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Framework & libs\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MarkdownToHtmlModule } from 'markdown-to-html-pipe';\nimport {\n  MatCardModule, MatFormFieldModule, MatSelectModule, MatOptionModule, MatSlideToggleModule,\n  MatButtonModule, MatDialogModule, MatListModule, MatProgressSpinnerModule, MatMenuModule, MatExpansionModule\n} from '@angular/material';\n\n// Module dependencies\nimport { SharedModule } from 'app/shared/shared.module';\nimport { EventRoutingModule } from './event-routing.module';\n\n// Module components\nimport { EventComponent } from './event.component';\nimport { ListComponent } from './list/list.component';\nimport { DisplayComponent } from './display/display.component';\nimport { FullscreenComponent } from './display/fullscreen/fullscreen.component';\nimport { ResultsComponent } from './results/results.component';\nimport { SignoffReportComponent } from './signoff-report/signoff-report.component';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { ContextMenuComponent } from './list/context-menu/context-menu.component';\nimport { ScoreEditorComponent } from './list/score-editor/score-editor.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MarkdownToHtmlModule,\n\n    MatExpansionModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatListModule,\n\n    EventRoutingModule\n  ],\n  declarations: [\n    EventComponent,\n    ListComponent,\n\n    DisplayComponent,\n    FullscreenComponent,\n\n    ResultsComponent,\n\n    SignoffReportComponent,\n\n    ContextMenuComponent,\n\n    ScoreEditorComponent\n  ],\n  entryComponents: [\n    ContextMenuComponent\n  ]\n})\nexport class EventModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventRoutingModule.html":{"url":"modules/EventRoutingModule.html","title":"module - EventRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EventRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/event/event-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListComponent } from './list/list.component';\nimport { ResultsComponent } from './results/results.component';\nimport { SignoffReportComponent } from './signoff-report/signoff-report.component';\nimport { DisplayComponent } from './display/display.component';\nimport { FullscreenComponent } from './display/fullscreen/fullscreen.component';\nimport { EventComponent } from './event.component';\n\nimport { RoleGuard, RoleData } from 'app/shared/guards/role-guard';\nimport { Role } from 'app/model';\n\nconst routes: Routes = [\n  {\n    path: ':id', component: EventComponent, children: [\n      { path: '', pathMatch: 'full', redirectTo: 'list' },\n      { path: 'list', component: ListComponent },\n      { path: 'results', component: ResultsComponent },\n      { path: 'signoff', component: SignoffReportComponent, canActivate: [RoleGuard], data: { role: \"Role.Secretariat.valueOf()\" } as RoleData },\n      // We wont prevent these routes, but we wont display them in menus either. This will enable organizers to display the view on screens without\n      // having to log in to do this.\n      { path: 'display', component: DisplayComponent },\n      { path: 'display/:displayId', component: FullscreenComponent },\n    ]\n  },\n  { path: '**', redirectTo: '/' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EventRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpansionRow.html":{"url":"interfaces/ExpansionRow.html","title":"interface - ExpansionRow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExpansionRow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/expansion-source.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        detailRow\n                                \n                                \n                                        expanded\n                                \n                                \n                                        T\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detailRow\n                                    \n                                \n                                \n                                    \n                                        detailRow:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        T\n                                    \n                                \n                                \n                                    \n                                        T:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DataSource } from '@angular/cdk/table';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Sort } from '@angular/material';\nimport { SubjectSource } from 'app/shared/services/subject-source';\n\nexport interface ExpansionRow {\n  detailRow: boolean;\n  expanded: boolean;\n  T;\n}\nexport class ExpansionSource extends SubjectSource {\n  private alternateSubject = new BehaviorSubject(null);\n  private get realRows() { return )[]> this.alternateSubject.value; }\n\n  currentSort: Sort;\n\n  constructor(public subject: BehaviorSubject) {\n    super(subject);\n    this.subject.subscribe(values => {\n      const rows = [];\n      values.forEach(element => rows.push(element, {detailRow: true, expanded: false, element}));\n      this.alternateSubject.next(rows);\n    });\n  }\n\n  connect(): Observable {\n    return this.alternateSubject;\n  }\n\n  isExpansionDetailRow = (row: any) => row.hasOwnProperty('detailRow');\n\n  sortData($event: Sort, elements?: T[]) {\n    this.clearSelection();\n    super.sortData($event, elements);\n  }\n\n  add(element: T): number {\n    this.clearSelection();\n    return super.add(element);\n  }\n\n  select(element: T, row?: number) {\n    this.clearSelection();\n\n    if (element != null) {\n      row = row || this.alternateSubject.value.findIndex(m => m === element);\n      (> this.realRows[row + 1]).expanded = true;\n    }\n  }\n\n  findIndexOf(element: T) {\n    return this.alternateSubject.value.findIndex(m => m === element);\n  }\n\n  clearSelection() {\n    this.realRows.filter(r => r.hasOwnProperty('detailRow')).forEach(r => (> r).expanded = false );\n  }\n\n  disconnect() {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpansionSource.html":{"url":"classes/ExpansionSource.html","title":"class - ExpansionSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpansionSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/expansion-source.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SubjectSource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alternateSubject\n                            \n                            \n                                currentSort\n                            \n                            \n                                isExpansionDetailRow\n                            \n                            \n                                    Public\n                                subject\n                            \n                            \n                                sortChanged\n                            \n                            \n                                    Public\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                clearSelection\n                            \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                findIndexOf\n                            \n                            \n                                select\n                            \n                            \n                                sortData\n                            \n                            \n                                add\n                            \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                findIndexOf\n                            \n                            \n                                sortData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    realRows\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subject: BehaviorSubject)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/expansion-source.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subject\n                                                  \n                                                        \n                                                                    BehaviorSubject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alternateSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/expansion-source.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Sort\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/expansion-source.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isExpansionDetailRow\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/expansion-source.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/expansion-source.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                            \n                                \n                                    Inherited from         SubjectSource\n\n                                \n                            \n                        \n                            \n                                    Defined in         SubjectSource:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SubjectSource\n\n                                \n                            \n                        \n                            \n                                    Defined in         SubjectSource:13\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(element: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/expansion-source.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearSelection\n                        \n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/expansion-source.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/expansion-source.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/expansion-source.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findIndexOf\n                        \n                        \n                    \n                \n            \n            \n                \nfindIndexOf(element: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/expansion-source.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            select\n                        \n                        \n                    \n                \n            \n            \n                \nselect(element: T, row?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/expansion-source.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    row\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortData\n                        \n                        \n                    \n                \n            \n            \n                \nsortData($event: Sort, elements?: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/expansion-source.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Sort\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elements\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(element: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SubjectSource\n\n                \n            \n            \n                \n                        Defined in         SubjectSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Inherited from         SubjectSource\n\n                \n            \n            \n                \n                        Defined in         SubjectSource:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Inherited from         SubjectSource\n\n                \n            \n            \n                \n                        Defined in         SubjectSource:51\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findIndexOf\n                        \n                        \n                    \n                \n            \n            \n                \nfindIndexOf(element: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SubjectSource\n\n                \n            \n            \n                \n                        Defined in         SubjectSource:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortData\n                        \n                        \n                    \n                \n            \n            \n                \nsortData($event: Sort, elements?: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         SubjectSource\n\n                \n            \n            \n                \n                        Defined in         SubjectSource:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Sort\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elements\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        realRows\n                    \n                \n\n                \n                    \n                        getrealRows()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/expansion-source.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DataSource } from '@angular/cdk/table';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Sort } from '@angular/material';\nimport { SubjectSource } from 'app/shared/services/subject-source';\n\nexport interface ExpansionRow {\n  detailRow: boolean;\n  expanded: boolean;\n  T;\n}\nexport class ExpansionSource extends SubjectSource {\n  private alternateSubject = new BehaviorSubject(null);\n  private get realRows() { return )[]> this.alternateSubject.value; }\n\n  currentSort: Sort;\n\n  constructor(public subject: BehaviorSubject) {\n    super(subject);\n    this.subject.subscribe(values => {\n      const rows = [];\n      values.forEach(element => rows.push(element, {detailRow: true, expanded: false, element}));\n      this.alternateSubject.next(rows);\n    });\n  }\n\n  connect(): Observable {\n    return this.alternateSubject;\n  }\n\n  isExpansionDetailRow = (row: any) => row.hasOwnProperty('detailRow');\n\n  sortData($event: Sort, elements?: T[]) {\n    this.clearSelection();\n    super.sortData($event, elements);\n  }\n\n  add(element: T): number {\n    this.clearSelection();\n    return super.add(element);\n  }\n\n  select(element: T, row?: number) {\n    this.clearSelection();\n\n    if (element != null) {\n      row = row || this.alternateSubject.value.findIndex(m => m === element);\n      (> this.realRows[row + 1]).expanded = true;\n    }\n  }\n\n  findIndexOf(element: T) {\n    return this.alternateSubject.value.findIndex(m => m === element);\n  }\n\n  clearSelection() {\n    this.realRows.filter(r => r.hasOwnProperty('detailRow')).forEach(r => (> r).expanded = false );\n  }\n\n  disconnect() {}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FullscreenComponent.html":{"url":"components/FullscreenComponent.html","title":"component - FullscreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FullscreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/event/display/fullscreen/fullscreen.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-fullscreen\n            \n\n            \n                styleUrls\n                ./fullscreen.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fullscreen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayHtml\n                            \n                            \n                                displayId\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadDisplay\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, parent: EventComponent, route: ActivatedRoute, router: Router, graph: GraphService, displayService: DisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/event/display/fullscreen/fullscreen.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        EventComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayService\n                                                  \n                                                        \n                                                                        DisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:keydown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:keydown(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/display/fullscreen/fullscreen.component.ts:56\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadDisplay\n                        \n                        \n                    \n                \n            \n            \n                \nloadDisplay(force?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/display/fullscreen/fullscreen.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    force\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/display/fullscreen/fullscreen.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/display/fullscreen/fullscreen.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayHtml\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/views/event/display/fullscreen/fullscreen.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/display/fullscreen/fullscreen.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/display/fullscreen/fullscreen.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { DisplayService } from 'app/shared/services/api';\nimport { EventComponent } from '../../event.component';\nimport { GraphService } from 'app/shared/services/graph.service';\n\n@Component({\n  selector: 'app-fullscreen',\n  templateUrl: './fullscreen.component.html',\n  styleUrls: ['./fullscreen.component.scss']\n})\nexport class FullscreenComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n\n  displayId: number;\n  displayHtml;\n\n  constructor(\n    private elRef: ElementRef,\n    private parent: EventComponent,\n    private route: ActivatedRoute,\n    private router: Router,\n    private graph: GraphService,\n    private displayService: DisplayService) { }\n\n  ngOnInit() {\n    this.subscriptions.push(this.route.params.subscribe((params: any) => {\n      this.displayId = +params.displayId;\n      this.subscriptions.push(this.graph.listen('teamInDisciplineModified', '{id}').subscribe(res => {\n        this.loadDisplay(true);\n      }));\n      this.loadDisplay();\n    }));\n\n    // Go fullscreen\n    const elm = this.elRef.nativeElement;\n    elm.requestFullscreen ? elm.requestFullscreen()\n      : elm.msRequestFullscreen ? elm.msRequestFullscreen()\n        : elm.mozRequestFullScreen ? elm.mozRequestFullScreen()\n          : elm.webkitRequestFullscreen ? elm.webkitRequestFullscreen()\n            : function () { }() //  this.displayHtml = res);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  @HostListener('window:keydown', ['$event'])\n  onKeydown(evt: KeyboardEvent) {\n    if (evt.key === 'Escape') {\n      this.router.navigate(['../'], { relativeTo: this.route });\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./fullscreen.component.scss\n                \n                :host ::ng-deep {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  color: white;\n  font-size: 6.6vw;\n  background: black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'FullscreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphql.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApolloModule, APOLLO_OPTIONS } from 'apollo-angular';\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\nimport { ApolloLink, split } from 'apollo-link';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { HttpBatchLinkModule, HttpBatchLink } from 'apollo-angular-link-http-batch';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { OperationDefinitionNode } from 'graphql';\n\nexport const graphqlUri = '/api/graph'; //  {\n    const headers = operation.getContext().headers;\n    if (headers) { operation.extensions = headers; }\n    return forward(operation);\n  });\n\n  // Create the websocket for subscriptions\n  // This replaces ServerSentEvents as biderctional comm\n  const wsProtocol = location.protocol.replace('http', 'ws');\n  const wsClient = new WebSocketLink({\n    uri: `${wsProtocol}//${location.host}${graphqlSubUri}`, // Should be able to run on same endpoint\n    options: {\n      reconnect: true,\n    },\n  });\n\n  // Split the connection up based on type of comm\n  // If query or mutation, use http. If subscription, use ws.\n  const link = split(\n    ({ query }) => {\n      const { kind, operation } = getMainDefinition(query);\n      return kind === 'OperationDefinition' && operation === 'subscription';\n    },\n    wsClient,\n    headerLink.concat(stdLink)\n  )\n\n  // Create the apollo client\n  return {\n    link: link,\n    cache: new InMemoryCache(/*{\n      addTypename: false\n    }*/),\n    defaultOptions: {\n      watchQuery: {\n        fetchPolicy: 'cache-and-network',\n        errorPolicy: 'ignore',\n      },\n      query: {\n        fetchPolicy: 'network-only',\n        errorPolicy: 'all',\n      },\n      mutate: {\n        errorPolicy: 'all'\n      }\n    }\n  };\n}\n\n@NgModule({\n  imports: [HttpBatchLinkModule],\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphService.html":{"url":"injectables/GraphService.html","title":"injectable - GraphService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/graph.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                deleteData\n                            \n                            \n                                get\n                            \n                            \n                                getData\n                            \n                            \n                                jsonToGql\n                            \n                            \n                                listen\n                            \n                            \n                                    Private\n                                mapFromArray\n                            \n                            \n                                    Private\n                                mapFromObject\n                            \n                            \n                                post\n                            \n                            \n                                saveData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, apollo: Apollo)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/graph.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apollo\n                                                  \n                                                        \n                                                                    Apollo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/graph.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteData\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteData(type: string, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/graph.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(query: string, options?: QueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/graph.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            QueryOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData(queryStr: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/graph.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            jsonToGql\n                        \n                        \n                    \n                \n            \n            \n                \njsonToGql(val: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/graph.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listen\n                        \n                        \n                    \n                \n            \n            \n                \nlisten(channel: string, query: string, options?: SubscriptionOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/graph.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            SubscriptionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mapFromArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapFromArray(arr)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/graph.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mapFromObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapFromObject(obj)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/graph.service.ts:83\n                \n            \n\n\n            \n                \n                    GraphQL value parser\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            post\n                        \n                        \n                    \n                \n            \n            \n                \npost(query: string, options?: MutationOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/graph.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            MutationOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveData\n                        \n                        \n                    \n                \n            \n            \n                \nsaveData(type: string, data: any, returnVal: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/graph.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    returnVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { map, debounceTime } from 'rxjs/operators';\nimport { Observable, of, Observer } from 'rxjs';\nimport * as moment from 'moment';\nimport { CommonService } from 'app/shared/services/common.service';\n\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\nimport { QueryOptions, MutationOptions, SubscriptionOptions } from 'apollo-angular/types';\nimport { Logger } from './Logger';\n\n@Injectable({ providedIn: 'root' })\nexport class GraphService {\n  constructor(private http: HttpClient, private apollo: Apollo) { }\n\n  getData(queryStr: string): Observable {\n    return this.get(queryStr).pipe(map(res => res.data));\n  }\n\n  deleteData(type: string, id: number): Observable {\n    const query = `{ delete${type}(id:${id}) }`;\n    return this.delete(query).pipe(map(res => res.data));\n  }\n\n  saveData(type: string, data: any, returnVal: string): Observable {\n    const query = `{ save${type} (input:${this.jsonToGql(data)}) ${returnVal}}`;\n    return this.post(query).pipe(map(res => res.data));\n  }\n\n  get(query: string, options?: QueryOptions): Observable {\n    // return this.http.get(`/api/graph/?query=${CommonService.compressString(query)}`, options);\n    return this.apollo.query(Object.assign({ query: gql`${query}` }, options));\n    // return this.apollo.watchQuery(Object.assign({ query: gql`${query}` }, options)).valueChanges;\n  }\n\n  post(query: string, options?: MutationOptions): Observable {\n    const queryStr = `mutation ${query}`;\n    // return this.http.post(`/api/graph`, Object.assign({ query: queryStr }, options));\n    return Observable.create((observer: Observer) => {\n      this.apollo.mutate(Object.assign({ mutation: gql`${queryStr}` }, options)).subscribe(res => {\n        // Clear cache immediatelly after a save operation\n        this.apollo.getClient().clearStore()\n          .catch(ex => Logger.log(ex))\n          .finally(() => {\n            observer.next(res);\n            observer.complete();\n          });\n      });\n    });\n  }\n\n  delete(query: string): Observable {\n    const queryStr = `mutation ${query}`;\n    // return this.http.delete(`/api/graph/?query=${CommonService.compressString(queryStr)}`);\n    return Observable.create(observer => {\n      this.apollo.mutate({ mutation: gql`${queryStr}` }).subscribe(res => {\n        // Clear cache immediatelly on a delete operation\n        this.apollo.getClient().clearStore()\n          .catch(ex => Logger.log(ex))\n          .finally(() => {\n            observer.next(res);\n            observer.complete();\n          });\n      });\n    });\n  }\n\n  listen(channel: string, query: string, options?: SubscriptionOptions): Observable {\n    const queryStr = `subscription {${channel}${query}}`;\n    // return Observable.create((observer: Observer) => {\n    return this.apollo.subscribe(Object.assign({ query: gql`${queryStr}` }, options))\n      .pipe(debounceTime(400));\n  }\n\n  jsonToGql(val: any): string {\n    return Array.isArray(val) ? this.mapFromArray(val) : this.mapFromObject(val);\n  }\n\n  /**\n   * GraphQL value parser\n   */\n  private mapFromObject(obj): string {\n    return `{${Object.keys(obj).reduce((str, k) => {\n      str += `${str.length ? ',\\n' : ''}`;\n      if (obj[k] == null) {\n        return str += `${k}: null`;\n      }\n\n\n      else if (Array.isArray(obj[k])) {\n        return str += `${k}: [${obj[k].reduce((s, i) => {\n          s += s.length ? ',' : '';\n          return i['id']\n            ? s += i ? `{id: \"${i['id']}\"}` : ''  // Contains id, reduce to just id references\n            : s += `${this.mapFromObject(i)}`;    // Something else, keep it\n        }, '')}]`;\n      }\n\n\n      else if (obj[k] instanceof Date) {\n        return str += `${k}: ${obj[k].getTime()}`;\n      }\n\n\n      else if (moment.isMoment(obj[k])) {\n        const d = obj[k].toDate();\n        return str += `${k}: ${d.getTime()}`;\n      }\n\n\n      else if (typeof obj[k] === 'object') {\n        if (obj[k]['id']) { return str += `${k}Id: \"${obj[k]['id']}\"`; }\n        return str += `${k}: ${this.mapFromObject(obj[k])}`;\n      }\n\n\n      // Default value\n      return str += `${k}: ${typeof obj[k] === 'string' || k === 'id' ? `\"${('' + obj[k]).replace(/\\n/gm, '\\\\n')}\"` : obj[k]}`;\n    }, '')}}`;\n  }\n\n  private mapFromArray(arr): string {\n    return `[${arr.map(a => this.mapFromObject(a))}]`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpBlockComponent.html":{"url":"components/HelpBlockComponent.html","title":"component - HelpBlockComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HelpBlockComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/help-block/help-block.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-help-block\n            \n\n            \n                styleUrls\n                ./help-block.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./help-block.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/help-block/help-block.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/help-block/help-block.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help-block',\n  templateUrl: './help-block.component.html',\n  styleUrls: ['./help-block.component.scss']\n})\nexport class HelpBlockComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./help-block.component.scss\n                \n                @import \"../../../../styles/variables\";\n\n:host {\n  $helpColor: $primary;\n  $helpBorder: darken($helpColor, 10%);\n\n  display: inline-block;\n  position: absolute;\n  bottom: 5px;\n  right: 0;\n  vertical-align: top;\n  opacity: 0;\n  transition: opacity 0.5s ease-in;\n  .fa {\n    color: darken($helpColor, 50%);\n    font-size: 1.2rem;\n    padding: 6px;\n    &:hover +.help {\n      display: block;\n    }\n  }\n  .help {\n    position: absolute;\n    right: -25%;\n    display: none;\n    padding: 0 $padding;\n    margin: 0 10px;\n    z-index: 100;\n    margin-left: -38px;\n    min-width: 200px;\n    top: 1.5rem;\n    &:hover {\n      display: block;\n    }\n    &:before {\n      content: '';\n      display: block;\n      width: 10px;\n      height: 10px;\n      background: $helpColor;\n      border-style: solid;\n      border-color: $helpBorder;\n      border-width: 1px 0 0 1px;\n      transform: rotate(45deg);\n      position: absolute;\n      top: -5px;\n      right: 12px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'HelpBlockComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _types\n                            \n                            \n                                current\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCalendarLink\n                            \n                            \n                                getDateSpan\n                            \n                            \n                                getDescription\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    types\n                                \n                                \n                                    hasTournaments\n                                \n                                \n                                    hasFuture\n                                \n                                \n                                    hasPast\n                                \n                                \n                                    future\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer, graph: GraphService, translate: TranslateService, seo: SEOService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/home/home.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seo\n                                                  \n                                                        \n                                                                        SEOService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCalendarLink\n                        \n                        \n                    \n                \n            \n            \n                \ngetCalendarLink(tournament: ITournament)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/home.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournament\n                                    \n                                                ITournament\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDateSpan\n                        \n                        \n                    \n                \n            \n            \n                \ngetDateSpan(tournament: ITournament)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/home.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournament\n                                    \n                                                ITournament\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetDescription(tournament: ITournament)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/home.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournament\n                                    \n                                                ITournament\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/home.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/home.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _types\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TournamentType[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/home/home.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/home/home.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/home/home.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `{\n    getTournaments {\n      id,\n      name,\n      description_no,\n      description_en,\n      startDate,\n      endDate,\n      times{day,time},\n      venue{id,name,address,capacity,latitude,longitude}\n    }}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/home/home.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        types\n                    \n                \n\n                \n                    \n                        gettypes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/home/home.component.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasTournaments\n                    \n                \n\n                \n                    \n                        gethasTournaments()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/home/home.component.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasFuture\n                    \n                \n\n                \n                    \n                        gethasFuture()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/home/home.component.ts:40\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasPast\n                    \n                \n\n                \n                    \n                        gethasPast()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/home/home.component.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        future\n                    \n                \n\n                \n                    \n                        getfuture()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/home/home.component.ts:48\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { ITournament } from 'app/model';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { CommonService } from 'app/shared/services/common.service';\n\nimport * as moment from 'moment';\nimport { SEOService } from 'app/shared/services/seo.service';\n\ninterface TournamentType { name: string; tournaments: ITournament[]; }\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  private query = `{\n    getTournaments {\n      id,\n      name,\n      description_no,\n      description_en,\n      startDate,\n      endDate,\n      times{day,time},\n      venue{id,name,address,capacity,latitude,longitude}\n    }}`;\n\n  current = [];\n  isLoading = true;\n\n  // Future first, allways\n  private _types: TournamentType[] = [];\n  get types() { return this._types.sort((a: TournamentType, b: TournamentType) => (a.name === 'Future') ? -1 : 1); }\n\n  get hasTournaments() { return this.types.filter(t => t.tournaments.length > 0).length > 0; }\n  get hasFuture() {\n    const future = this.types.find(t => t.name === 'Future');\n    return future && future.tournaments && future.tournaments.length > 0;\n  }\n  get hasPast() {\n    const past = this.types.find(t => t.name === 'Past');\n    return past && past.tournaments && past.tournaments.length > 0;\n  }\n  get future() {\n    return this.hasFuture ? this.types.find(t => t.name === 'Future').tournaments : [];\n  }\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private graph: GraphService,\n    private translate: TranslateService,\n    private seo: SEOService\n  ) { }\n\n  ngOnInit() {\n    // Page meta tags\n    this.seo.setTitle('', `A complete web based system for managing the secretariat for Team Gymnastic sports.`);\n\n    // Make sure texts exists and are translated\n    this.translate.get(['Future', 'Past']).subscribe();\n\n    // Get page data\n    this.graph.getData(this.query).subscribe(data => {\n      const now = new Date().getTime();\n      this._types = [\n        { name: 'Future', tournaments: data.getTournaments.filter(t => now  now > t.endDate) }\n      ];\n      this.current = data.getTournaments.filter(t => now >= t.startDate && now \n    \n\n    \n        \n\n\n\n  \n    {{ tournament.name }}\n    \n      \n        {{ getDateSpan(tournament) }}\n      \n    \n  \n\n  \n    \n  \n  \n    \n    {{ 'Get directions' | translate }}\n  \n  \n    \n    Go to scoreboard\n  \n  \n    \n    Go to results\n  \n\n\n\n\n  \n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        No tournament today.\n      \n      Come back later or checkout the past tournaments we have listed out for you on the right hand side.\n      Come back later.\n    \n  \n\n  \n  \n    \n      \n        \n          \n            {{ type.name | translate }}&nbsp;tournaments\n          \n          \n            \n              {{ tournament.name }}\n              {{ tournament.startDate | date: 'dd.MM.yyyy' }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                @import \"../../../styles/variables\";\n\n.mat-card {\n  padding: 0;\n  overflow: hidden;\n  .mat-subheader {\n    border-bottom: 1px solid #bbb;\n    background: rgba($primary, 0.8);\n    color: white;\n    padding-top: 0;\n    padding-bottom: 0;\n    height: 1.3rem;\n  }\n  .flex {\n    width: 100%;\n  }\n}\n\n.content-container {\n  display: flex;\n  flex-wrap: wrap;\n  @media (min-width: $stop1) {\n    margin-top: 4rem;\n  }\n}\n.main-content {\n  flex: 1;\n  color: black;\n  margin-bottom: 3rem;\n  background: rgba(white,0.4);\n  padding: 16px;\n  border-radius: 8px;\n  min-width: 400px;\n  @media (max-width: $stop1) {\n    min-width: 100%;\n    border-radius: 0;\n  }\n  @media (min-width: $stop1) {\n    margin-right: 1rem;\n  }\n  header {\n    color: white;\n    display: flex;\n    flex-wrap: wrap;\n    margin: 0 0 2rem 0;\n    justify-content: flex-end;\n    h1 {\n      text-shadow: 0px 3px 10px black, 0 0 3px black;\n      color: inherit;\n      margin: 0;\n      flex: 1;\n      min-width: 25rem;\n      @media (max-width: $stop2) {\n        min-width: 100%;\n      }\n    }\n    div {\n      margin-top: 0.6rem;\n      text-shadow: 0 0 3px black;\n      text-align: right;\n      a {\n        color: inherit;\n      }\n    }\n  }\n}\n\n.tournament-list {\n  @media (max-width: $stop1) {\n    flex: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ tournament.name }}                  {{ getDateSpan(tournament) }}                              {{ \\'Get directions\\' | translate }}            Go to scoreboard            Go to results                                                                                          No tournament today.            Come back later or checkout the past tournaments we have listed out for you on the right hand side.      Come back later.                                                  {{ type.name | translate }} tournaments                                              {{ tournament.name }}              {{ tournament.startDate | date: \\'dd.MM.yyyy\\' }}                                          '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpAction.html":{"url":"interfaces/HttpAction.html","title":"interface - HttpAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/http-action.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        failed\n                                \n                                \n                                            Optional\n                                        isComplete\n                                \n                                \n                                        method\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failed\n                                    \n                                \n                                \n                                    \n                                        failed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         HttpMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpMethod\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpMethod } from './http-method';\n\nexport interface HttpAction {\n  url: string;\n  method: HttpMethod;\n  isComplete?: boolean;\n  failed?: boolean;\n  values?: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpCacheInterceptor.html":{"url":"interceptors/HttpCacheInterceptor.html","title":"interceptor - HttpCacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpCacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/http-cache.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Intercepting all HTTP requests, caching every GET, if not a 'noCache' header is set.\nIf a PUT, POST or DELETE is executed, the global cache is invalidated.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: HttpCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/http-cache.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        HttpCacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/http-cache.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpCacheService } from './http-cache.service';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Intercepting all HTTP requests, caching every GET, if not a 'noCache' header is set.\n * If a PUT, POST or DELETE is executed, the global cache is invalidated.\n */\n@Injectable()\nexport class HttpCacheInterceptor implements HttpInterceptor {\n  constructor(private cache: HttpCacheService) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    if (['PUT', 'POST', 'DELETE'].indexOf(req.method) > -1) {\n      // Force reload of cache after a modification is done.\n      this.cache.invalidateAll();\n    } else if (req.method === 'GET' && !req.headers.has('noCache') && this.cache.contains(req.urlWithParams)) {\n      // Exists in cache. Return cached result instead of executing the http query\n      return of(this.cache.get(req.urlWithParams));\n    }\n\n    // Execute request\n    return next.handle(req).pipe(\n      map(result => {\n        const done = !(Object.keys(result).length === 1 && result.type === 0);\n        // Cache result\n        if (done && req.method === 'GET' && !req.headers.has('noCache')) {\n          this.cache.add(req.urlWithParams, result);\n        }\n        // Return original result\n        return result;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpCacheService.html":{"url":"injectables/HttpCacheService.html","title":"injectable - HttpCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/http-cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                contains\n                            \n                            \n                                get\n                            \n                            \n                                invalidate\n                            \n                            \n                                invalidateAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/http-cache.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(url: string, obj: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/http-cache.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contains\n                        \n                        \n                    \n                \n            \n            \n                \ncontains(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/http-cache.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/http-cache.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invalidate\n                        \n                        \n                    \n                \n            \n            \n                \ninvalidate(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/http-cache.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invalidateAll\n                        \n                        \n                    \n                \n            \n            \n                \ninvalidateAll(urlPart?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/http-cache.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    urlPart\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/interceptors/http-cache.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpCacheService {\n  cache: { [url: string]: any } = [];\n\n  constructor() { }\n\n  contains(url: string) {\n    return this.cache.hasOwnProperty(url);\n  }\n\n  get(url: string) {\n    return this.cache[url];\n  }\n\n  add(url: string, obj: any) {\n    this.cache[url] = obj;\n  }\n\n  invalidate(url: string) {\n    delete this.cache[url];\n  }\n\n  invalidateAll(urlPart?: string) {\n    if (urlPart) {\n      // invalidate all urls resembling given\n      Object.keys(this.cache).forEach(key => {\n        if (key.indexOf(urlPart) > -1) {\n          this.invalidate(key);\n        }\n      });\n    } else {\n      this.cache = [];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpStateService.html":{"url":"injectables/HttpStateService.html","title":"injectable - HttpStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/http-state.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                httpAction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                notifySubscribers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/http-state.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            notifySubscribers\n                        \n                        \n                    \n                \n            \n            \n                \nnotifySubscribers(req: HttpRequest, res?: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/http-state.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { url: any; operation: string; method: any; values: any; isComplete: boolean; failed: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            httpAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/interceptors/http-state.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest } from '@angular/common/http';\nimport { HttpResponse } from '@angular/common/http';\n\nimport { Subject } from 'rxjs';\nimport { HttpAction } from './http-action.model';\nimport { HttpMethod } from './http-method';\nimport { graphqlUri } from 'app/graphql.module';\nimport { CommonService } from '../services/common.service';\n\n\n/**\n *\n */\n@Injectable({ providedIn: 'root' })\nexport class HttpStateService {\n  public httpAction: Subject = new Subject();\n\n  constructor() { }\n\n  notifySubscribers(req: HttpRequest, res?: HttpResponse) {\n    let method: HttpMethod;\n    let operation = 'N/A';\n    switch (req.method) {\n      case 'GET': method = HttpMethod.Get; operation = 'load'; break;\n      case 'POST': method = HttpMethod.Post; operation = 'save'; break;\n      case 'PUT': method = HttpMethod.Put; operation = 'save'; break;\n      case 'DELETE': method = HttpMethod.Delete; operation = 'delete'; break;\n      case 'HEAD': method = HttpMethod.Head; break;\n      case 'PATCH': method = HttpMethod.Patch; break;\n      case 'OPTIONS': method = HttpMethod.Options; break;\n    }\n\n    if (req.url === graphqlUri) {\n      const q = CommonService.compressString(req.body.query);\n      if (q.indexOf('mutation{save') > -1) {\n        operation = 'save';\n      } else if (q.indexOf('mutation{delete') > -1) {\n        operation = 'delete';\n      } else {\n        operation = 'load';\n      }\n    }\n\n    const obj: HttpRequest | HttpResponse = res ? res : req;\n    const action = { url: obj.url, operation: operation, method: method, values: obj.body, isComplete: res != null, failed: res && res.status !== 200 };\n    this.httpAction.next(action);\n    return action;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBelongsToClub.html":{"url":"interfaces/IBelongsToClub.html","title":"interface - IBelongsToClub","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBelongsToClub\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/IBelongsToClub.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        club\n                                \n                                \n                                        clubId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        club\n                                    \n                                \n                                \n                                    \n                                        club:         IClub\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IClub\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clubId\n                                    \n                                \n                                \n                                    \n                                        clubId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IClub } from 'app/model';\n\nexport interface IBelongsToClub {\n  clubId: number;\n  club: IClub;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClub.html":{"url":"interfaces/IClub.html","title":"interface - IClub","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IClub\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/IClub.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        gymnasts\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        teams\n                                \n                                \n                                        users\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gymnasts\n                                    \n                                \n                                \n                                    \n                                        gymnasts:         IGymnast[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGymnast[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                    \n                                \n                                \n                                    \n                                        teams:         ITeam[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeam[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                    \n                                \n                                \n                                    \n                                        users:         IUser[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUser[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ITeam } from './ITeam';\nimport { IGymnast } from './IGymnast';\nimport { IUser } from './IUser';\n\nexport interface IClub {\n  id: number;\n  name: string;\n  teams: ITeam[];\n  users: IUser[];\n  gymnasts: IGymnast[];\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConfiguration.html":{"url":"interfaces/IConfiguration.html","title":"interface - IConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/IConfiguration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IConfiguration {\n  name: string;\n  value: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreatedBy.html":{"url":"interfaces/ICreatedBy.html","title":"interface - ICreatedBy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICreatedBy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/ICreatedBy.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdBy\n                                \n                                \n                                        createdById\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                    \n                                \n                                \n                                    \n                                        createdBy:         IUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdById\n                                    \n                                \n                                \n                                    \n                                        createdById:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IUser } from './IUser';\n\nexport interface ICreatedBy {\n  createdBy: IUser;\n  createdById: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDiscipline.html":{"url":"interfaces/IDiscipline.html","title":"interface - IDiscipline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDiscipline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/IDiscipline.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        judges\n                                \n                                \n                                        judgesPlain\n                                \n                                \n                                        name\n                                \n                                \n                                        scoreGroups\n                                \n                                \n                                            Optional\n                                        sortOrder\n                                \n                                \n                                            Optional\n                                        teams\n                                \n                                \n                                        tournament\n                                \n                                \n                                        tournamentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        judges\n                                    \n                                \n                                \n                                    \n                                        judges:         IJudgeInScoreGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IJudgeInScoreGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        judgesPlain\n                                    \n                                \n                                \n                                    \n                                        judgesPlain:         IJudge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IJudge[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scoreGroups\n                                    \n                                \n                                \n                                    \n                                        scoreGroups:     IScoreGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IScoreGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortOrder\n                                    \n                                \n                                \n                                    \n                                        sortOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                    \n                                \n                                \n                                    \n                                        teams:         ITeam[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeam[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournament\n                                    \n                                \n                                \n                                    \n                                        tournament:         ITournament\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITournament\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IScoreGroup } from './IScoreGroup';\nimport { ITournament } from './ITournament';\nimport { ITeam } from './ITeam';\nimport { IJudge } from './IJudge';\nimport { IJudgeInScoreGroup } from './IJudgeInScoreGroup';\n\nexport interface IDiscipline {\n  id: number;\n  name: string;\n  sortOrder?: number;\n  teams?: ITeam[];\n  tournamentId: number;\n  tournament: ITournament;\n  scoreGroups: IScoreGroup[];\n  judges: IJudgeInScoreGroup[];\n  judgesPlain: IJudge[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDivision.html":{"url":"interfaces/IDivision.html","title":"interface - IDivision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDivision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/IDivision.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        max\n                                \n                                \n                                            Optional\n                                        min\n                                \n                                \n                                        name\n                                \n                                \n                                        scorable\n                                \n                                \n                                        sortOrder\n                                \n                                \n                                        teams\n                                \n                                \n                                        tournament\n                                \n                                \n                                        tournamentId\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scorable\n                                    \n                                \n                                \n                                    \n                                        scorable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortOrder\n                                    \n                                \n                                \n                                    \n                                        sortOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                    \n                                \n                                \n                                    \n                                        teams:         ITeam[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeam[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournament\n                                    \n                                \n                                \n                                    \n                                        tournament:         ITournament\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITournament\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         DivisionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DivisionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DivisionType } from './DivisionType';\nimport { ITournament } from './ITournament';\nimport { ITeam } from './ITeam';\n\nexport interface IDivision {\n  id: number;\n  name: string;\n  sortOrder: number;\n  min?: number;\n  max?: number;\n  scorable: boolean;\n  type: DivisionType;\n  teams: ITeam[];\n  tournamentId: number;\n  tournament: ITournament;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGymnast.html":{"url":"interfaces/IGymnast.html","title":"interface - IGymnast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGymnast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/IGymnast.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IBelongsToClub\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        allergies\n                                \n                                \n                                            Optional\n                                        birthDate\n                                \n                                \n                                        birthYear\n                                \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                        gender\n                                \n                                \n                                            Optional\n                                        guardian1\n                                \n                                \n                                            Optional\n                                        guardian1Email\n                                \n                                \n                                            Optional\n                                        guardian1Phone\n                                \n                                \n                                            Optional\n                                        guardian2\n                                \n                                \n                                            Optional\n                                        guardian2Email\n                                \n                                \n                                            Optional\n                                        guardian2Phone\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        phone\n                                \n                                \n                                        team\n                                \n                                \n                                        troop\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allergies\n                                    \n                                \n                                \n                                    \n                                        allergies:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthDate\n                                    \n                                \n                                \n                                    \n                                        birthDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthYear\n                                    \n                                \n                                \n                                    \n                                        birthYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:         Gender\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Gender\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guardian1\n                                    \n                                \n                                \n                                    \n                                        guardian1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guardian1Email\n                                    \n                                \n                                \n                                    \n                                        guardian1Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guardian1Phone\n                                    \n                                \n                                \n                                    \n                                        guardian1Phone:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guardian2\n                                    \n                                \n                                \n                                    \n                                        guardian2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guardian2Email\n                                    \n                                \n                                \n                                    \n                                        guardian2Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guardian2Phone\n                                    \n                                \n                                \n                                    \n                                        guardian2Phone:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:         ITeam[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeam[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        troop\n                                    \n                                \n                                \n                                    \n                                        troop:         ITroop[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITroop[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ITeam } from './ITeam';\nimport { IClub } from './IClub';\nimport { DivisionType } from './DivisionType';\nimport { Gender } from './Gender';\nimport { ITroop } from './ITroop';\nimport { IBelongsToClub } from './IBelongsToClub';\n\nexport interface IGymnast extends IBelongsToClub {\n  id: number;\n  name: string;\n  birthYear: number;\n  birthDate?: Date;\n  email?: string;\n  phone?: number;\n  gender: Gender;\n  allergies?: string;\n  guardian1?: string;\n  guardian2?: string;\n  guardian1Phone?: number;\n  guardian2Phone?: number;\n  guardian1Email?: string;\n  guardian2Email?: string;\n  troop: ITroop[];\n  team: ITeam[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IJudge.html":{"url":"interfaces/IJudge.html","title":"interface - IJudge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IJudge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/IJudge.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        allergies\n                                \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        phone\n                                \n                                \n                                        scoreGroups\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allergies\n                                    \n                                \n                                \n                                    \n                                        allergies:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scoreGroups\n                                    \n                                \n                                \n                                    \n                                        scoreGroups:         IJudgeInScoreGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IJudgeInScoreGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IScoreGroup } from './IScoreGroup';\nimport { IJudgeInScoreGroup } from './IJudgeInScoreGroup';\n\nexport interface IJudge {\n  id: number;\n  name: string;\n  email: string;\n  phone: string;\n  allergies: string;\n  scoreGroups: IJudgeInScoreGroup[];\n}\n\nexport class Judge implements IJudge {\n  id = null;\n  name = null;\n  email = null;\n  phone = null;\n  allergies = null;\n  scoreGroups = null;\n\n  constructor() {\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IJudgeInScoreGroup.html":{"url":"interfaces/IJudgeInScoreGroup.html","title":"interface - IJudgeInScoreGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IJudgeInScoreGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/IJudgeInScoreGroup.ts\n        \n\n            \n                Description\n            \n            \n                Resolves many-to-many relation between Judge and ScoreGroup.\nThis is done in order to save the ordering of judges within the scoregroup.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        judge\n                                \n                                \n                                        scoreGroup\n                                \n                                \n                                        scoreGroupId\n                                \n                                \n                                        sortNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        judge\n                                    \n                                \n                                \n                                    \n                                        judge:         IJudge\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IJudge\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scoreGroup\n                                    \n                                \n                                \n                                    \n                                        scoreGroup:         IScoreGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IScoreGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scoreGroupId\n                                    \n                                \n                                \n                                    \n                                        scoreGroupId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortNumber\n                                    \n                                \n                                \n                                    \n                                        sortNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IJudge } from './IJudge';\nimport { IScoreGroup } from './IScoreGroup';\n\n/**\n * Resolves many-to-many relation between `Judge` and `ScoreGroup`.\n * This is done in order to save the ordering of judges within the scoregroup.\n *\n * @export\n */\nexport interface IJudgeInScoreGroup {\n  scoreGroupId: number;\n  scoreGroup: IScoreGroup;\n  judge: IJudge;\n  sortNumber: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMedia.html":{"url":"interfaces/IMedia.html","title":"interface - IMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/IMedia.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clubId\n                                \n                                \n                                        discipline\n                                \n                                \n                                        disciplineId\n                                \n                                \n                                        disciplineName\n                                \n                                \n                                        fileName\n                                \n                                \n                                        id\n                                \n                                \n                                        isPlaying\n                                \n                                \n                                        mimeType\n                                \n                                \n                                        originalName\n                                \n                                \n                                        team\n                                \n                                \n                                        teamId\n                                \n                                \n                                        tournament\n                                \n                                \n                                        tournamentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clubId\n                                    \n                                \n                                \n                                    \n                                        clubId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discipline\n                                    \n                                \n                                \n                                    \n                                        discipline:         IDiscipline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDiscipline\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disciplineId\n                                    \n                                \n                                \n                                    \n                                        disciplineId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disciplineName\n                                    \n                                \n                                \n                                    \n                                        disciplineName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPlaying\n                                    \n                                \n                                \n                                    \n                                        isPlaying:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalName\n                                    \n                                \n                                \n                                    \n                                        originalName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:         ITeam\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeam\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamId\n                                    \n                                \n                                \n                                    \n                                        teamId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournament\n                                    \n                                \n                                \n                                    \n                                        tournament:         ITournament\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITournament\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDiscipline } from './IDiscipline';\nimport { ITeam } from './ITeam';\nimport { ITournament } from './ITournament';\n\nexport interface IMedia {\n  disciplineName: string;\n  clubId: number;\n  id: number;\n  fileName: string;\n  originalName: string;\n  mimeType: string;\n  disciplineId: number;\n  discipline: IDiscipline;\n  teamId: number;\n  team: ITeam;\n  tournamentId: number;\n  tournament: ITournament;\n  isPlaying: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IScore.html":{"url":"interfaces/IScore.html","title":"interface - IScore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IScore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/IScore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        judgeIndex\n                                \n                                \n                                        participant\n                                \n                                \n                                        participantId\n                                \n                                \n                                        scoreGroup\n                                \n                                \n                                        scoreGroupId\n                                \n                                \n                                        updated\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        judgeIndex\n                                    \n                                \n                                \n                                    \n                                        judgeIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        participant\n                                    \n                                \n                                \n                                    \n                                        participant:         ITeamInDiscipline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeamInDiscipline\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        participantId\n                                    \n                                \n                                \n                                    \n                                        participantId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scoreGroup\n                                    \n                                \n                                \n                                    \n                                        scoreGroup:         IScoreGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IScoreGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scoreGroupId\n                                    \n                                \n                                \n                                    \n                                        scoreGroupId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated\n                                    \n                                \n                                \n                                    \n                                        updated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ITeamInDiscipline } from './ITeamInDiscipline';\nimport { IScoreGroup } from './IScoreGroup';\n\nexport interface IScore {\n  updated: Date;\n  id: number;\n  value: number;\n  scoreGroupId: number;\n  scoreGroup: IScoreGroup;\n  judgeIndex: number;\n  participantId: number;\n  participant: ITeamInDiscipline;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IScoreContainer.html":{"url":"interfaces/IScoreContainer.html","title":"interface - IScoreContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IScoreContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/views/event/list/IScoreContainer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        avg\n                                \n                                \n                                        scoreGroup\n                                \n                                \n                                        scoreGroupId\n                                \n                                \n                                        scores\n                                \n                                \n                                            Optional\n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avg\n                                    \n                                \n                                \n                                    \n                                        avg:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scoreGroup\n                                    \n                                \n                                \n                                    \n                                        scoreGroup:         IScoreGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IScoreGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scoreGroupId\n                                    \n                                \n                                \n                                    \n                                        scoreGroupId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scores\n                                    \n                                \n                                \n                                    \n                                        scores:         IScore[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IScore[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IScoreGroup, IScore } from 'app/model';\n\nexport interface IScoreContainer {\n  // group: IScoreGroup;\n  scoreGroupId: number;\n  scoreGroup: IScoreGroup;\n  scores: IScore[];\n  avg?: number;\n  total?: number;\n}\n\nexport class ScoreContainer implements IScoreContainer {\n  get total(): number {\n    return this.scores.reduce((prev, curr) => prev += curr.value, 0);\n  }\n  get avg(): number {\n    return this.total / this.scores.length;\n  }\n  constructor(public scoreGroupId: number, public scoreGroup: IScoreGroup, public scores: IScore[]) { }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IScoreGroup.html":{"url":"interfaces/IScoreGroup.html","title":"interface - IScoreGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IScoreGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/IScoreGroup.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        discipline\n                                \n                                \n                                        disciplineId\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        judgeCount\n                                \n                                \n                                        judges\n                                \n                                \n                                        max\n                                \n                                \n                                        min\n                                \n                                \n                                        name\n                                \n                                \n                                        operation\n                                \n                                \n                                            Optional\n                                        sortOrder\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        discipline\n                                    \n                                \n                                \n                                    \n                                        discipline:         IDiscipline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDiscipline\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disciplineId\n                                    \n                                \n                                \n                                    \n                                        disciplineId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        judgeCount\n                                    \n                                \n                                \n                                    \n                                        judgeCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        judges\n                                    \n                                \n                                \n                                    \n                                        judges:         IJudgeInScoreGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IJudgeInScoreGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operation\n                                    \n                                \n                                \n                                    \n                                        operation:         Operation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Operation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortOrder\n                                    \n                                \n                                \n                                    \n                                        sortOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Operation } from './Operation';\nimport { IDiscipline } from './IDiscipline';\nimport { IJudge } from './IJudge';\nimport { IJudgeInScoreGroup } from './IJudgeInScoreGroup';\n\nexport interface IScoreGroup {\n  id: number;\n  name: string;\n  type: string;\n  sortOrder?: number;\n  judges: IJudgeInScoreGroup[];\n  judgeCount?: number;\n  max: number;\n  min: number;\n  disciplineId: number;\n  discipline?: IDiscipline;\n  operation: Operation;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeam.html":{"url":"interfaces/ITeam.html","title":"interface - ITeam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITeam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/ITeam.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ITroop\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        class\n                                \n                                \n                                        disciplines\n                                \n                                \n                                        divisionName\n                                \n                                \n                                        divisions\n                                \n                                \n                                        tournament\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                    \n                                \n                                \n                                    \n                                        class:         Classes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Classes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disciplines\n                                    \n                                \n                                \n                                    \n                                        disciplines:         IDiscipline[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDiscipline[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        divisionName\n                                    \n                                \n                                \n                                    \n                                        divisionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        divisions\n                                    \n                                \n                                \n                                    \n                                        divisions:         IDivision[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDivision[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournament\n                                    \n                                \n                                \n                                    \n                                        tournament:         ITournament\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITournament\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ITournament } from './ITournament';\nimport { IDiscipline } from './IDiscipline';\nimport { IDivision } from './IDivision';\nimport { Classes } from './Classes';\nimport { ITroop } from './ITroop';\n\nexport interface ITeam extends ITroop {\n  divisionName: string;\n  class: Classes;\n  divisions: IDivision[];\n  disciplines: IDiscipline[];\n  tournament: ITournament;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamInDiscipline.html":{"url":"interfaces/ITeamInDiscipline.html","title":"interface - ITeamInDiscipline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITeamInDiscipline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/ITeamInDiscipline.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        calculatedStartTime\n                                \n                                \n                                        discipline\n                                \n                                \n                                        disciplineId\n                                \n                                \n                                        disciplineName\n                                \n                                \n                                        disciplineSortOrder\n                                \n                                \n                                        divisionName\n                                \n                                \n                                        divisions\n                                \n                                \n                                        divisionSortOrder\n                                \n                                \n                                        endTime\n                                \n                                \n                                        id\n                                \n                                \n                                        markDeleted\n                                \n                                \n                                        media\n                                \n                                \n                                        publishTime\n                                \n                                \n                                        scorable\n                                \n                                \n                                        scores\n                                \n                                \n                                        sortNumber\n                                \n                                \n                                        startNumber\n                                \n                                \n                                        startTime\n                                \n                                \n                                        team\n                                \n                                \n                                        teamId\n                                \n                                \n                                        total\n                                \n                                \n                                        totalByScoreGroup\n                                \n                                \n                                        tournament\n                                \n                                \n                                        tournamentId\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        calculatedStartTime\n                                    \n                                \n                                \n                                    \n                                        calculatedStartTime:     Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Moment\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discipline\n                                    \n                                \n                                \n                                    \n                                        discipline:         IDiscipline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDiscipline\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disciplineId\n                                    \n                                \n                                \n                                    \n                                        disciplineId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disciplineName\n                                    \n                                \n                                \n                                    \n                                        disciplineName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disciplineSortOrder\n                                    \n                                \n                                \n                                    \n                                        disciplineSortOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        divisionName\n                                    \n                                \n                                \n                                    \n                                        divisionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        divisions\n                                    \n                                \n                                \n                                    \n                                        divisions:         IDivision[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDivision[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        divisionSortOrder\n                                    \n                                \n                                \n                                    \n                                        divisionSortOrder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markDeleted\n                                    \n                                \n                                \n                                    \n                                        markDeleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                    \n                                \n                                \n                                    \n                                        media:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publishTime\n                                    \n                                \n                                \n                                    \n                                        publishTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scorable\n                                    \n                                \n                                \n                                    \n                                        scorable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scores\n                                    \n                                \n                                \n                                    \n                                        scores:         IScore[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IScore[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortNumber\n                                    \n                                \n                                \n                                    \n                                        sortNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startNumber\n                                    \n                                \n                                \n                                    \n                                        startNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:         ITeam\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeam\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamId\n                                    \n                                \n                                \n                                    \n                                        teamId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalByScoreGroup\n                                    \n                                \n                                \n                                    \n                                        totalByScoreGroup:         TotalByScoreGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TotalByScoreGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournament\n                                    \n                                \n                                \n                                    \n                                        tournament:         ITournament\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITournament\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         ParticipationType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParticipationType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Moment } from 'moment';\n\nimport { ITournament } from './ITournament';\nimport { IDiscipline } from './IDiscipline';\nimport { IScore } from './IScore';\nimport { ITeam } from './ITeam';\nimport { ParticipationType } from './ParticipationType';\nimport { IDivision } from './IDivision';\nimport { IScoreGroup } from './IScoreGroup';\n\nexport interface TotalByScoreGroup {\n  group: IScoreGroup;\n  total: number;\n}\n\nexport interface ITeamInDiscipline {\n  media: any;\n  id: number;\n  startNumber: number;\n  sortNumber: number;\n  startTime: Date;\n  markDeleted: boolean;\n  calculatedStartTime?: Moment; // Exists only on client side\n  endTime: Date;\n  publishTime: Date;\n  type: ParticipationType;\n  disciplineId: number;\n  discipline: IDiscipline;\n  disciplineName: string;\n  disciplineSortOrder: number;\n  divisions: IDivision[];\n  divisionName: string;\n  divisionSortOrder: string;\n  scorable: boolean;\n  teamId: number;\n  team: ITeam;\n  tournamentId: number;\n  tournament: ITournament;\n  scores: IScore[];\n  total: string;\n  totalByScoreGroup: TotalByScoreGroup[]\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITournament.html":{"url":"interfaces/ITournament.html","title":"interface - ITournament","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITournament\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/ITournament.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IBelongsToClub\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        banquetCostPerHead\n                                \n                                \n                                        banquetFor\n                                \n                                \n                                        description_en\n                                \n                                \n                                        description_no\n                                \n                                \n                                        disciplines\n                                \n                                \n                                        divisions\n                                \n                                \n                                        endDate\n                                \n                                \n                                        id\n                                \n                                \n                                        lodging\n                                \n                                \n                                        lodingCostPerHead\n                                \n                                \n                                        media\n                                \n                                \n                                        name\n                                \n                                \n                                        providesBanquet\n                                \n                                \n                                        providesLodging\n                                \n                                \n                                        providesTransport\n                                \n                                \n                                        schedule\n                                \n                                \n                                        scheduleCount\n                                \n                                \n                                        startDate\n                                \n                                \n                                        times\n                                \n                                \n                                        transportationCostPerHead\n                                \n                                \n                                        transporting\n                                \n                                \n                                        venue\n                                \n                                \n                                        venueId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        banquetCostPerHead\n                                    \n                                \n                                \n                                    \n                                        banquetCostPerHead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        banquetFor\n                                    \n                                \n                                \n                                    \n                                        banquetFor:         IGymnast[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGymnast[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_en\n                                    \n                                \n                                \n                                    \n                                        description_en:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_no\n                                    \n                                \n                                \n                                    \n                                        description_no:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disciplines\n                                    \n                                \n                                \n                                    \n                                        disciplines:         IDiscipline[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDiscipline[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        divisions\n                                    \n                                \n                                \n                                    \n                                        divisions:         IDivision[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDivision[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDate\n                                    \n                                \n                                \n                                    \n                                        endDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lodging\n                                    \n                                \n                                \n                                    \n                                        lodging:         IGymnast[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGymnast[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lodingCostPerHead\n                                    \n                                \n                                \n                                    \n                                        lodingCostPerHead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                    \n                                \n                                \n                                    \n                                        media:         IMedia[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMedia[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providesBanquet\n                                    \n                                \n                                \n                                    \n                                        providesBanquet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providesLodging\n                                    \n                                \n                                \n                                    \n                                        providesLodging:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providesTransport\n                                    \n                                \n                                \n                                    \n                                        providesTransport:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schedule\n                                    \n                                \n                                \n                                    \n                                        schedule:     ITeamInDiscipline[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ITeamInDiscipline[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheduleCount\n                                    \n                                \n                                \n                                    \n                                        scheduleCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                    \n                                \n                                \n                                    \n                                        startDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        times\n                                    \n                                \n                                \n                                    \n                                        times:     ITournamentTimes[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ITournamentTimes[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transportationCostPerHead\n                                    \n                                \n                                \n                                    \n                                        transportationCostPerHead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transporting\n                                    \n                                \n                                \n                                    \n                                        transporting:         IGymnast[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGymnast[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        venue\n                                    \n                                \n                                \n                                    \n                                        venue:         IVenue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IVenue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        venueId\n                                    \n                                \n                                \n                                    \n                                        venueId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IMedia } from './IMedia';\nimport { IDivision } from './IDivision';\nimport { IDiscipline } from './IDiscipline';\nimport { ITeamInDiscipline } from './ITeamInDiscipline';\n\nimport { IBelongsToClub } from './IBelongsToClub';\nimport { ICreatedBy } from './ICreatedBy';\nimport { IVenue } from './IVenue';\nimport { IGymnast } from 'app/model';\n\nexport interface ITournamentTimes { day: number, time: string, train: string }\nexport interface ITournament extends IBelongsToClub, ICreatedBy {\n  id: number;\n  name: string;\n  description_no: string;\n  description_en: string;\n  startDate: number;\n  endDate: number;\n  times: ITournamentTimes[];\n  venue: IVenue;\n  venueId: number;\n  scheduleCount: number;\n  schedule: ITeamInDiscipline[];\n  disciplines: IDiscipline[];\n  divisions: IDivision[];\n  media: IMedia[];\n\n\n  // LODGING -----------------------------------------------------\n  providesLodging: boolean;\n  lodingCostPerHead: number;\n  lodging: IGymnast[];\n\n\n  // TRANSPORT ---------------------------------------------------\n  providesTransport: boolean;\n  transportationCostPerHead: number;\n  transporting: IGymnast[];\n\n\n  // BANQUET -----------------------------------------------------\n  providesBanquet: boolean;\n  banquetCostPerHead: number;\n  banquetFor: IGymnast[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITournamentTimes.html":{"url":"interfaces/ITournamentTimes.html","title":"interface - ITournamentTimes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITournamentTimes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/ITournament.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        time\n                                \n                                \n                                        train\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        train\n                                    \n                                \n                                \n                                    \n                                        train:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IMedia } from './IMedia';\nimport { IDivision } from './IDivision';\nimport { IDiscipline } from './IDiscipline';\nimport { ITeamInDiscipline } from './ITeamInDiscipline';\n\nimport { IBelongsToClub } from './IBelongsToClub';\nimport { ICreatedBy } from './ICreatedBy';\nimport { IVenue } from './IVenue';\nimport { IGymnast } from 'app/model';\n\nexport interface ITournamentTimes { day: number, time: string, train: string }\nexport interface ITournament extends IBelongsToClub, ICreatedBy {\n  id: number;\n  name: string;\n  description_no: string;\n  description_en: string;\n  startDate: number;\n  endDate: number;\n  times: ITournamentTimes[];\n  venue: IVenue;\n  venueId: number;\n  scheduleCount: number;\n  schedule: ITeamInDiscipline[];\n  disciplines: IDiscipline[];\n  divisions: IDivision[];\n  media: IMedia[];\n\n\n  // LODGING -----------------------------------------------------\n  providesLodging: boolean;\n  lodingCostPerHead: number;\n  lodging: IGymnast[];\n\n\n  // TRANSPORT ---------------------------------------------------\n  providesTransport: boolean;\n  transportationCostPerHead: number;\n  transporting: IGymnast[];\n\n\n  // BANQUET -----------------------------------------------------\n  providesBanquet: boolean;\n  banquetCostPerHead: number;\n  banquetFor: IGymnast[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITroop.html":{"url":"interfaces/ITroop.html","title":"interface - ITroop","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITroop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/ITroop.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IBelongsToClub\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        gymnasts\n                                \n                                \n                                        id\n                                \n                                \n                                        media\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gymnasts\n                                    \n                                \n                                \n                                    \n                                        gymnasts:         IGymnast[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGymnast[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                    \n                                \n                                \n                                    \n                                        media:         IMedia[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMedia[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IClub } from './IClub';\nimport { IMedia } from './IMedia';\nimport { IBelongsToClub } from './IBelongsToClub';\nimport { IGymnast } from './IGymnast';\n\nexport interface ITroop extends IBelongsToClub {\n  id: number;\n  name: string;\n  gymnasts: IGymnast[];\n  media: IMedia[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/IUser.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IBelongsToClub\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        activated\n                                \n                                \n                                        email\n                                \n                                \n                                        expire\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                                \n                                            Optional\n                                        role\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expire\n                                    \n                                \n                                \n                                    \n                                        expire:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IBelongsToClub } from './IBelongsToClub';\n\nexport enum Role {\n  Admin = 99, Organizer = 90, Secretariat = 80, Club = 50, User = 10\n}\n\nexport const RoleNames = [\n  { id: Role.Admin, name: 'Admin' },\n  { id: Role.Organizer, name: 'Organizer' },\n  { id: Role.Secretariat, name: 'Secretariat' },\n  { id: Role.Club, name: 'Club' },\n  { id: Role.User, name: 'User' },\n];\n\nexport interface IUser extends IBelongsToClub {\n  token: string;\n  expire: number;\n  id: number;\n  name: string;\n  email: string;\n  password: string;\n  role?: Role;\n  activated?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IVenue.html":{"url":"interfaces/IVenue.html","title":"interface - IVenue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IVenue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/IVenue.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ICreatedBy\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        capacity\n                                \n                                \n                                        contact\n                                \n                                \n                                        contactEmail\n                                \n                                \n                                        contactPhone\n                                \n                                \n                                        id\n                                \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                                \n                                        name\n                                \n                                \n                                        rentalCost\n                                \n                                \n                                        tournamentId\n                                \n                                \n                                        tournaments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capacity\n                                    \n                                \n                                \n                                    \n                                        capacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contact\n                                    \n                                \n                                \n                                    \n                                        contact:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactEmail\n                                    \n                                \n                                \n                                    \n                                        contactEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactPhone\n                                    \n                                \n                                \n                                    \n                                        contactPhone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rentalCost\n                                    \n                                \n                                \n                                    \n                                        rentalCost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournaments\n                                    \n                                \n                                \n                                    \n                                        tournaments:         ITournament[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITournament[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ICreatedBy } from './ICreatedBy';\nimport { ITournament } from './ITournament';\n\nexport interface IVenue extends ICreatedBy {\n  id: number;\n  name: string;\n  longitude: string;\n  latitude: string;\n  address: string;\n  rentalCost: number;\n  contact: string;\n  contactPhone: string;\n  contactEmail: string;\n  capacity: number;\n  tournamentId: number;\n  tournaments: ITournament[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/IfAuthDirective.html":{"url":"directives/IfAuthDirective.html","title":"directive - IfAuthDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  IfAuthDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/auth/if-auth.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appIfAuth]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roles\n                            \n                            \n                                userSubscription\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appIfAuth\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    appIfAuth\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, viewContainer: ViewContainerRef, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/auth/if-auth.directive.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appIfAuth\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/auth/if-auth.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/auth/if-auth.directive.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/auth/if-auth.directive.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/auth/if-auth.directive.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Role\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/directives/auth/if-auth.directive.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/directives/auth/if-auth.directive.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/directives/auth/if-auth.directive.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        appIfAuth\n                    \n                \n\n\n                \n                    \n                        setappIfAuth(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/directives/auth/if-auth.directive.ts:16\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { UserService } from 'app/shared/services/api';\nimport { Role } from 'app/model';\n\n@Directive({\n  selector: '[appIfAuth]'\n})\nexport class IfAuthDirective implements OnDestroy {\n  visible = false;\n  roles = Role;\n\n  userSubscription: Subscription;\n\n  @Input() set appIfAuth(value) {\n    const me = this;\n    if (this.userSubscription) { this.userSubscription.unsubscribe(); }\n    this.userSubscription = this.userService.getMe().subscribe(user => {\n      if (value != null) {\n        const showOnAuth = !!value;\n        const role = typeof value === 'string' && me.roles[value] ? me.roles[value] : null;\n\n        if ((showOnAuth && !user) || (!showOnAuth && user) || (role && user && user.role , private viewContainer: ViewContainerRef, private userService: UserService) { }\n\n  ngOnDestroy() {\n    if (this.userSubscription) { this.userSubscription.unsubscribe(); }\n  }\n\n  hide() {\n    this.viewContainer.clear();\n    this.visible = false;\n  }\n\n  show() {\n    if (!this.visible) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n      this.visible = true;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/tournament/info/info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info\n            \n\n            \n                styleUrls\n                ./info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                infoText\n                            \n                            \n                                lng\n                            \n                            \n                                original\n                            \n                            \n                                preview\n                            \n                            \n                                tournament\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bold\n                            \n                            \n                                    Private\n                                getSelection\n                            \n                            \n                                isChanged\n                            \n                            \n                                italic\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                returnfocus\n                            \n                            \n                                save\n                            \n                            \n                                setLang\n                            \n                            \n                                    Private\n                                splitValue\n                            \n                            \n                                toggleHeaders\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: TournamentEditorComponent, graph: GraphService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/tournament/info/info.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        TournamentEditorComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keydown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeydown(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/info/info.component.ts:118\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bold\n                        \n                        \n                    \n                \n            \n            \n                \nbold()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/info/info.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSelection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/info/info.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { start: number; end: number; startOfLine: any; endOfLine: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isChanged\n                        \n                        \n                    \n                \n            \n            \n                \nisChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/info/info.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            italic\n                        \n                        \n                    \n                \n            \n            \n                \nitalic()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/info/info.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/info/info.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            returnfocus\n                        \n                        \n                    \n                \n            \n            \n                \nreturnfocus(start, end)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/info/info.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/info/info.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLang\n                        \n                        \n                    \n                \n            \n            \n                \nsetLang(lng)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/info/info.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lng\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            splitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    splitValue(value, selection: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/info/info.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selection\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { start: any; selection: any; end: any; beforeLine: any; line: any; afterLine: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleHeaders\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleHeaders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/info/info.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoText\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('infoText', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/info/info.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lng\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.translate.currentLang\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/info/info.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            original\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/info/info.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preview\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/info/info.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournament\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITournament\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/info/info.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { ITournament } from 'app/model';\nimport { TournamentEditorComponent } from '../tournament-editor/tournament-editor.component';\nimport { GraphService } from 'app/shared/services/graph.service';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit {\n  tournament: ITournament;\n  lng: string = this.translate.currentLang;\n  preview = false;\n  original: string;\n  @ViewChild('infoText', { static: false }) infoText;\n  constructor(\n    private parent: TournamentEditorComponent,\n    private graph: GraphService,\n    private translate: TranslateService) { }\n\n  ngOnInit() {\n    this.parent.tournamentSubject.subscribe(tournament => {\n      if (tournament) {\n        this.tournament = tournament;\n        this.original = JSON.stringify([this.tournament.description_en, this.tournament.description_no]);\n      }\n    });\n  }\n\n  save() {\n    if (this.tournament.description_en && !this.tournament.description_no) {\n      this.tournament.description_no = this.tournament.description_en;\n    }\n    if (this.tournament.description_no && !this.tournament.description_en) {\n      this.tournament.description_en = this.tournament.description_no;\n    }\n    this.graph.saveData('Tournament', this.tournament, `{id,name,description_en,description_no}`).subscribe(res => {\n      this.tournament = res.saveTournament;\n      this.original = JSON.stringify([this.tournament.description_en, this.tournament.description_no]);\n    });\n  }\n\n  isChanged() {\n    const current: string = JSON.stringify([this.tournament.description_en, this.tournament.description_no]);\n    return current !== this.original;\n  }\n\n  setLang(lng) {\n    const oldLng = this.lng;\n    this.lng = lng;\n    if (!this.tournament['description_' + lng]) {\n      // Copy description over, to make translation easier.\n      this.tournament['description_' + lng] = this.tournament['description_' + oldLng];\n    }\n  }\n\n  private splitValue(value, selection: { start, end, startOfLine, endOfLine }) {\n    return {\n      start: value.substring(0, selection.start),\n      selection: value.substring(selection.start, selection.end),\n      end: value.substring(selection.end),\n\n      beforeLine: value.substring(0, selection.startOfLine),\n      line: value.substring(selection.startOfLine, selection.endOfLine),\n      afterLine: value.substring(selection.endOfLine)\n    };\n  }\n\n  private getSelection() {\n    const text: string = this.tournament['description_' + this.lng];\n    const start: number = this.infoText.nativeElement.selectionStart;\n    const end: number = this.infoText.nativeElement.selectionEnd;\n    const startOfLine = text.substring(0, start).lastIndexOf('\\n') + 1;\n    const endOfLine = text.substring(end).indexOf('\\n') || text.length;\n    return {\n      start: start,\n      end: end,\n      startOfLine: startOfLine > -1 ? startOfLine : 0,\n      endOfLine: endOfLine > -1 ? endOfLine : text.length\n    };\n  }\n\n  returnfocus(start, end) {\n    this.infoText.nativeElement.focus();\n    setTimeout(() => this.infoText.nativeElement.setSelectionRange(start, end));\n  }\n\n  bold() {\n    const selection = this.getSelection();\n    const text = this.splitValue(this.tournament['description_' + this.lng], selection);\n\n    this.tournament['description_' + this.lng] = `${text.start}**${text.selection}**${text.end}`;\n    this.returnfocus(selection.start, selection.end + 4);\n  }\n  italic() {\n    const selection = this.getSelection();\n    const text = this.splitValue(this.tournament['description_' + this.lng], selection);\n\n    this.tournament['description_' + this.lng] = `${text.start}*${text.selection}*${text.end}`;\n    this.returnfocus(selection.start, selection.end + 2);\n  }\n\n  toggleHeaders() {\n    const selection = this.getSelection();\n    const text = this.splitValue(this.tournament['description_' + this.lng], selection);\n    const line = text.line.substring(text.line.lastIndexOf('#') + 1).trim();\n    const headers = text.line.substring(0, text.line.lastIndexOf('#') + 1);\n    const head = headers.length > 4 ? '' : headers + '# ';\n\n    this.tournament['description_' + this.lng] = `${text.beforeLine}${head}${line}${text.afterLine}`;\n    this.returnfocus(selection.startOfLine, selection.startOfLine);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeypress(event: KeyboardEvent) {\n    if (event.ctrlKey) {\n      switch (event.key) {\n        case 'b': event.preventDefault(); this.bold(); break;\n        case 'i': event.preventDefault(); this.italic(); break;\n        case 'h': event.preventDefault(); this.toggleHeaders(); break;\n        case 's': event.preventDefault(); this.save(); break;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        \n        \n        \n        \n        \n        \n           Preview\n        \n        \n           Edit\n        \n      \n    \n\n    \n      \n      \n        \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./info.component.scss\n                \n                @import \"../../../../../styles/variables\";\n\ntextarea {\n  border: 1px solid #ddd;\n  border-radius: $rounded;\n  // color: transparent;\n  // caret-color: black;\n  font-family: inherit;\n  font-size: inherit;\n  width: 100%;\n}\n\n.mat-button {\n  min-width: 1rem;\n  padding: 0 10px;\n}\n\n.divider {\n  border-right: 1px solid #ddd;\n  padding-left: 1rem;\n  margin-right: 1rem;\n}\nh2 {\n  margin-top: 1rem;\n}\nsection {\n  position: relative;\n}\n.preview {\n  min-height: 342px;\n  // position: absolute;\n  // top: 1px;\n  // left: -1px;\n  // right: 0;\n  // bottom: 0;\n  // z-index: -1;\n  padding: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                       Preview                           Edit                                                                    '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Judge.html":{"url":"classes/Judge.html","title":"class - Judge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Judge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/IJudge.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IJudge\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allergies\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                scoreGroups\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/model/IJudge.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/IJudge.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/IJudge.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/IJudge.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/IJudge.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/IJudge.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreGroups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/IJudge.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IScoreGroup } from './IScoreGroup';\nimport { IJudgeInScoreGroup } from './IJudgeInScoreGroup';\n\nexport interface IJudge {\n  id: number;\n  name: string;\n  email: string;\n  phone: string;\n  allergies: string;\n  scoreGroups: IJudgeInScoreGroup[];\n}\n\nexport class Judge implements IJudge {\n  id = null;\n  name = null;\n  email = null;\n  phone = null;\n  allergies = null;\n  scoreGroups = null;\n\n  constructor() {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadIndicatorService.html":{"url":"injectables/LoadIndicatorService.html","title":"injectable - LoadIndicatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoadIndicatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/load-spinner/load-indicator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentDelete\n                            \n                            \n                                    Private\n                                currentLoad\n                            \n                            \n                                    Private\n                                currentSave\n                            \n                            \n                                    Private\n                                deleteObservable\n                            \n                            \n                                    Private\n                                deleteObservers\n                            \n                            \n                                    Private\n                                dialogRef\n                            \n                            \n                                    Public\n                                isDeleting\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    Public\n                                isSaving\n                            \n                            \n                                    Private\n                                loadObservable\n                            \n                            \n                                    Private\n                                loadObservers\n                            \n                            \n                                    Private\n                                methodToType\n                            \n                            \n                                    Private\n                                saveObservable\n                            \n                            \n                                    Private\n                                saveObservers\n                            \n                            \n                                    Private\n                                urlActivity\n                            \n                            \n                                    Public\n                                usingNetwork\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addObserver\n                            \n                            \n                                    Protected\n                                addUrl\n                            \n                            \n                                    Private\n                                createNetworkActivityObservable\n                            \n                            \n                                isDeletingFrom\n                            \n                            \n                                isLoadingFrom\n                            \n                            \n                                isSavingFrom\n                            \n                            \n                                    Protected\n                                removeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addObserver\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addObserver(url: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUrl(type: string, url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:56\n                \n            \n\n\n            \n                \n                    Package protected method called by the NetworInterceptor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createNetworkActivityObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNetworkActivityObservable(url: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:90\n                \n            \n\n\n            \n                \n                    Creates an observer, and places it in one of three assosiative arrays based on\nhttp method type, and with the url as key.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDeletingFrom\n                        \n                        \n                    \n                \n            \n            \n                \nisDeletingFrom(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoadingFrom\n                        \n                        \n                    \n                \n            \n            \n                \nisLoadingFrom(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSavingFrom\n                        \n                        \n                    \n                \n            \n            \n                \nisSavingFrom(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUrl(type: string, url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:70\n                \n            \n\n\n            \n                \n                    Package protected method called by the NetworInterceptor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentDelete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentLoad\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentSave\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deleteObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deleteObservers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDeleting\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isSaving\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadObservers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            methodToType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'GET': 'load',\n    'POST': 'save',\n    'PUT': 'save',\n    'DELETE': 'delete'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            saveObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            saveObservers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlActivity\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            usingNetwork\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/load-spinner/load-indicator.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { BehaviorSubject, Observer, Subject } from 'rxjs';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { LoadSpinnerComponent } from './load-spinner.component';\n\nexport interface UrlActivity {\n  url: string;\n  type: string; // 'load' | 'save' | 'delete';\n  active: boolean;\n}\n@Injectable({ providedIn: 'root' })\nexport class LoadIndicatorService {\n  // Tells subscribers if the network has activity of a specific type or not.\n  public usingNetwork = new BehaviorSubject(false);\n  public isSaving = new BehaviorSubject(false);\n  public isDeleting = new BehaviorSubject(false);\n  public isLoading = new BehaviorSubject(false);\n\n  private currentLoad = []; // A list of urls currently loading from the network\n  private currentSave = []; // A list of urls currently post/put through the network\n  private currentDelete = []; // A list of urls currently deleting over the network\n\n  // Tells subscribers if the network is calling specific urls or not\n  private urlActivity = new EventEmitter();\n  private loadObservers = []; private loadObservable = [];\n  private saveObservers = []; private saveObservable = [];\n  private deleteObservers = []; private deleteObservable = [];\n  private methodToType = {\n    'GET': 'load',\n    'POST': 'save',\n    'PUT': 'save',\n    'DELETE': 'delete'\n  };\n  private dialogRef: MatDialogRef;\n\n  constructor(private dialog: MatDialog) {\n    this.usingNetwork.subscribe(val => {\n      setTimeout(() => {\n        if (!this.dialogRef && val) {\n          this.dialogRef = this.dialog.open(LoadSpinnerComponent, { panelClass: 'spinner' });\n        } else if (this.dialogRef && !val) {\n          this.dialogRef.close();\n          delete this.dialogRef;\n        }\n      });\n    });\n    this.urlActivity.subscribe((val: UrlActivity) => {\n\n    });\n  }\n\n  /**\n   * Package protected method called by the NetworInterceptor\n   *\n   */\n  protected addUrl(type: string, url: string) {\n    switch (type) {\n      case 'GET': this.currentLoad.push(url); break;\n      case 'POST':\n      case 'PUT': this.currentSave.push(url); break;\n      case 'DELETE': this.currentDelete.push(url); break;\n    }\n    this.urlActivity.emit({ url: url, type: this.methodToType[type], active: true });\n  }\n\n  /**\n   * Package protected method called by the NetworInterceptor\n   *\n   */\n  protected removeUrl(type: string, url: string) {\n    switch (type) {\n      case 'GET': this.currentLoad = this.currentLoad.filter(n => n !== url); break;\n      case 'POST':\n      case 'PUT': this.currentSave = this.currentSave.filter(n => n !== url); break;\n      case 'DELETE': this.currentDelete = this.currentSave.filter(n => n !== url); break;\n    }\n    this.urlActivity.emit({ url: url, type: this.methodToType[type], active: false });\n  }\n\n  // API to listen for activities on specific urls\n  isLoadingFrom(url: string) { return this.createNetworkActivityObservable(url, 'load'); }\n  isSavingFrom(url: string) { return this.createNetworkActivityObservable(url, 'save'); }\n  isDeletingFrom(url: string) { return this.createNetworkActivityObservable(url, 'delete'); }\n\n  /**\n   * Creates an observer, and places it in one of three assosiative arrays based on\n   * http method type, and with the url as key.\n   *\n   */\n  private createNetworkActivityObservable(url: string, type: string): Subject {\n    if (!this[type + 'Observable'][url]) {\n      // Observable is not created. Create one for this url and type\n      switch (type) {\n        case 'load': this.loadObservable[url] = this.addObserver(url, type); break;\n        case 'save': this.saveObservable[url] = this.addObserver(url, type); break;\n        case 'delete': this.deleteObservable[url] = this.addObserver(url, type); break;\n      }\n    }\n    // Return the observable\n    return this[type + 'Observable'][url];\n  }\n  private addObserver(url: string, type: string) {\n    return Subject.create((observer: Observer) => {\n      // A new observer is subscribing to this event. Add them to the list.\n\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadSpinnerComponent.html":{"url":"components/LoadSpinnerComponent.html","title":"component - LoadSpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadSpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/load-spinner/load-spinner.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./load-spinner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./load-spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/load-spinner/load-spinner.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  templateUrl: './load-spinner.component.html',\n  styleUrls: ['./load-spinner.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LoadSpinnerComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./load-spinner.component.scss\n                \n                @import \"../../../../styles/variables\";\n\n.spinner .mat-dialog-container {\n  background: transparent;\n  box-shadow: none;\n}\n\n.lds-ring {\n  display: inline-block;\n  position: relative;\n  width: 64px;\n  height: 64px;\n  div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: 51px;\n    height: 51px;\n    margin: 6px;\n    border: 6px solid $primaryBorderColor;\n    border-radius: 50%;\n    animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: $primaryBorderColor transparent transparent transparent;\n    &:nth-child(1) {\n      animation-delay: -0.45s;\n    }\n    &:nth-child(2) {\n      animation-delay: -0.3s;\n    }\n    &:nth-child(3) {\n      animation-delay: -0.15s;\n    }\n  }\n}\n@keyframes lds-ring {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoadSpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/Logger.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _log\n                            \n                            \n                                    Static\n                                debug\n                            \n                            \n                                    Static\n                                error\n                            \n                            \n                                    Static\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            _log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _log(type: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/Logger.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/Logger.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/Logger.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/Logger.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from '../../../environments/environment';\n\nexport class Logger {\n  static debug(...args) {\n    if (!environment.production) {\n      this.log(...args);\n    }\n  }\n\n  static log(...args) {\n    this._log('log', ...args);\n  }\n  static error(...args) {\n    this._log('error', ...args);\n  }\n\n  private static _log(type: string, ...args) {\n    if (typeof window !== 'undefined' && window.console) {\n      console[type](...args);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/home/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _redirectTo\n                            \n                            \n                                loginForm\n                            \n                            \n                                queryParamsSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    redirectTo\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, route: ActivatedRoute, userService: UserService, errorHandler: ErrorHandlerService, meta: SEOService, angulartics: Angulartics2)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/home/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        SEOService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        angulartics\n                                                  \n                                                        \n                                                                    Angulartics2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/login/login.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/login/login.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/login/login.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _redirectTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/home/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/home/login/login.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryParamsSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/home/login/login.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        redirectTo\n                    \n                \n\n                \n                    \n                        getredirectTo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/home/login/login.component.ts:21\n                                \n                            \n\n                \n                    \n                        setredirectTo(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/home/login/login.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { Angulartics2 } from 'angulartics2';\n\nimport { UserService } from 'app/shared/services/api';\nimport { ErrorHandlerService } from 'app/shared/interceptors/error-handler.service';\nimport { IUser } from 'app/model';\nimport { SEOService } from 'app/shared/services/seo.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  loginForm: FormGroup;\n  _redirectTo = '/';\n  get redirectTo() { return this._redirectTo; }\n  set redirectTo(value) {\n    this._redirectTo = (value === '/login' ? '/' : value);\n  }\n  queryParamsSubscription: Subscription;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private errorHandler: ErrorHandlerService,\n    private meta: SEOService,\n    private angulartics: Angulartics2\n  ) { }\n\n  ngOnInit() {\n    this.meta.setTitle('Login', `Login to increase your privileges in the system`);\n    const me = this;\n    me.loginForm = me.fb.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n    me.queryParamsSubscription = me.route.queryParams.subscribe(params => {\n      if (params.u) {\n        me.redirectTo = decodeURIComponent(params.u);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.queryParamsSubscription.unsubscribe();\n  }\n\n  login() {\n    this.userService.login(this.loginForm.value).subscribe(\n      (result: IUser) => {\n        this.angulartics.eventTrack.next({ action: 'login', properties: { category: 'auth', label: 'login', value: result.name } });\n        this.router.navigate([this.redirectTo]);\n      },\n      error => this.errorHandler.setError('Wrong username or password')\n    );\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      Login\n    \n    \n      \n        \n          \n        \n      \n      \n        \n          \n          \n        \n      \n    \n    \n      \n         Login\n      \n      \n         Forgot password\n      \n    \n  \n\n  \n    \n      \n        Register\n      \n      \n        If you are a club representative, you can register to login to our system in order to add teams from your club to any tournaments.\n      \n    \n    \n      \n         Register\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                @import \"../../../../styles/variables\";\n@import \"../../../../styles/panel\";\n\n:host {\n  .fixed-back {\n    +* {\n      @media (min-width: $stop1) {\n        margin-top: 10%;\n      }\n    }\n  }\n}\n\nform {\n  @include panel;\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  overflow: hidden;\n  border-width: 0;\n  header {\n    margin: $margin ($margin * 2) 0 ($margin * 2);\n    padding: ($padding * 2) ($padding * 2) 0 ($padding * 2);\n  }\n  footer {\n    padding: 4px;\n  }\n}\n\n.login {\n  margin-right: 2rem;\n}\n\n.register {\n  padding-left: 2rem;\n  position: relative;\n  color: white;\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: -7px;\n    right: 0;\n    left: 0;\n    bottom: -16px;\n    background: $primary;\n    box-shadow: 0px 10px 30px -15px black inset;\n    transform: skewY(-2.6deg);\n  }\n  @media (min-width: $stop1) {\n    &:before {\n      content: '';\n      top: -2px;\n      right: -40px;\n      left: 15px;\n      bottom: -4px;\n      transform: skew(-20deg);\n      box-shadow: 10px 0px 30px -15px black inset\n    }\n  }\n  .content {\n    position: relative;\n  }\n  .text {\n    padding: 0 16px;\n    display: inline-block;\n    text-align: right;\n    margin-bottom: 3rem;\n  }\n  h3 {\n    color: inherit;\n    margin-bottom: 1rem;\n    text-align: right;\n  }\n  footer {\n    position: absolute;\n    bottom: 0;\n    right: 4px;\n    .btn {\n      color: inherit;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Login                                                                                                                     Login                     Forgot password                                Register                    If you are a club representative, you can register to login to our system in order to add teams from your club to any tournaments.                             Register      '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/home/logout/logout.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                styleUrls\n                ./logout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reroute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, seo: SEOService, angulartics: Angulartics2, browser: BrowserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/home/logout/logout.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seo\n                                                  \n                                                        \n                                                                        SEOService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        angulartics\n                                                  \n                                                        \n                                                                    Angulartics2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        browser\n                                                  \n                                                        \n                                                                        BrowserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reroute\n                        \n                        \n                    \n                \n            \n            \n                \nreroute(err?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/logout/logout.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { UserService } from 'app/shared/services/api';\nimport { Angulartics2 } from 'angulartics2';\nimport { BrowserService } from 'app/shared/browser.service';\nimport { SEOService } from 'app/shared/services/seo.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent {\n\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private seo: SEOService,\n    private angulartics: Angulartics2,\n    private browser: BrowserService\n  ) {\n    this.seo.setTitle('Logout', `Logging out of GymSystems`);\n    this.angulartics.eventTrack.next(\n      {\n        action: 'logout', properties: {\n          category: 'auth', label: 'logout', value: this.userService.currentUser ? this.userService.currentUser.name : null\n        }\n      }\n    );\n    this.userService.logout().subscribe(res => this.reroute(), err => this.reroute(err));\n  }\n\n  reroute(err?: string) {\n    if (err) {\n      this.browser.window().location.reload(true);\n    }\n    this.router.navigate(['/']);\n  }\n}\n\n    \n\n    \n        ...Logging out...\n\n    \n\n    \n                \n                    ./logout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '...Logging out...'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MacroDialogComponent.html":{"url":"components/MacroDialogComponent.html","title":"component - MacroDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MacroDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/display/macro-dialog/macro-dialog.component.ts\n\n\n\n    \n        Extends\n    \n    \n                DialogComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-macro-dialog\n            \n\n            \n                styleUrls\n                ./macro-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./macro-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                macros\n                            \n                            \n                                _isOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                insert\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                cancelClicked\n                            \n                            \n                                closeDialog\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                okClicked\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                noButtons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                verify\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/display/macro-dialog/macro-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                            \n                                \n                                    Inherited from         DialogComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DialogComponent:12\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noButtons\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         DialogComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DialogComponent:9\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancel\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         DialogComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DialogComponent:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        verify\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         DialogComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DialogComponent:16\n\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Inherited from         DialogComponent\n\n                \n            \n            \n                \n                        Defined in         DialogComponent:44\n\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Inherited from         DialogComponent\n\n                \n            \n            \n                \n                        Defined in         DialogComponent:37\n\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(macro: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/display/macro-dialog/macro-dialog.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    macro\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/display/macro-dialog/macro-dialog.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancelClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncancelClicked()\n                \n            \n\n\n            \n                \n                    Inherited from         DialogComponent\n\n                \n            \n            \n                \n                        Defined in         DialogComponent:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeDialog\n                        \n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Inherited from         DialogComponent\n\n                \n            \n            \n                \n                        Defined in         DialogComponent:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DialogComponent\n\n                \n            \n            \n                \n                        Defined in         DialogComponent:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            okClicked\n                        \n                        \n                    \n                \n            \n            \n                \nokClicked()\n                \n            \n\n\n            \n                \n                    Inherited from         DialogComponent\n\n                \n            \n            \n                \n                        Defined in         DialogComponent:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Inherited from         DialogComponent\n\n                \n            \n            \n                \n                        Defined in         DialogComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            macros\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/display/macro-dialog/macro-dialog.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         DialogComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DialogComponent:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Logger } from 'app/shared/services';\n\nimport { DialogComponent } from 'app/shared/components/dialog/dialog.component';\n\n@Component({\n  selector: 'app-macro-dialog',\n  templateUrl: './macro-dialog.component.html',\n  styleUrls: ['./macro-dialog.component.scss']\n})\nexport class MacroDialogComponent extends DialogComponent implements OnInit {\n  macros: any = [];\n\n  constructor(element: ElementRef, private translate: TranslateService) {\n    super(element);\n\n    const me = this;\n    this.macros = [\n      // Logic\n      { get header() { return me.translate.instant('Logical items'); } },\n      { name: '#list', get desc() { return me.translate.instant('Access properties inside a list. Append a number, to define how many items from this list you wish to display.'); } },\n      { name: '#center', get desc() { return me.translate.instant('Container for centered text'); } },\n      { name: '#fix', get desc() { return me.translate.instant('Apply a fixed number of decimals on a numeric'); } },\n      { name: '#size', get desc() { return me.translate.instant('Can be a font size between 0, 5 - 5 being the largest.'); } },\n\n      // Tournament properties\n      { get header() { return me.translate.instant('Tournament'); } },\n      { name: 'tournament.name', get desc() { return me.translate.instant('The name of this tournament'); } },\n      { name: 'tournament.startDate', get desc() { return me.translate.instant('The tournaments start date'); } },\n      { name: 'tournament.endDate', get desc() { return me.translate.instant('The tournaments end date'); } },\n      { name: 'tournament.location', get desc() { return me.translate.instant('The tournaments location'); } },\n\n      // Schedule properties\n      { get header() { return me.translate.instant('Lists'); } },\n      { name: 'published', get desc() { return me.translate.instant('List of score-published participants. Sorted by publishedTime.'); } },\n      { name: 'next', get desc() { return me.translate.instant('List of participants yet to perform. Sorted by startTime'); } },\n      { name: 'current', get desc() { return me.translate.instant('Current participant on the floor. This is a list, but should only contain one item.'); } },\n\n      // Participant properties\n      { get header() { return me.translate.instant('Participant list item'); } },\n      { name: 'team.name', get desc() { return me.translate.instant('The team name'); } },\n      { name: 'startNumber', get desc() { return me.translate.instant('The start number of this team'); } },\n      { name: 'startTime', get desc() { return me.translate.instant('The scheduled time the team is to start its performance'); } },\n      { name: 'division', get desc() { return me.translate.instant('The division this team is competing in'); } },\n      { name: 'disciplineName', get desc() { return me.translate.instant('The discipline this team is competing in'); } },\n      { name: 'total', get desc() { return me.translate.instant('The total score this team received in this discipline'); } },\n    ];\n  }\n\n  ngOnInit() {\n  }\n\n  insert(macro: any) {\n    Logger.log(macro.name);\n    super.closeDialog();\n  }\n}\n\n    \n\n    \n         Insert value\n\n\n  \n    \n      {{macro.header | translate}}\n      {{ macro.name }}\n      {{ macro.desc | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./macro-dialog.component.scss\n                \n                @import \"../../../../../styles/variables\";\nul {\n  li {\n    width: 100%;\n    cursor: pointer;\n    span {\n      display: inline-block;\n    }\n    &.selectable:hover {\n      background: $primaryLight;\n    }\n    &:first-child {\n      .header {\n        padding-top: 0;\n      }\n    }\n  }\n}\n\n:host ::ng-deep app-dialog {\n  [role=\"dialogContainer\"] {}\n  aside {\n    width: 90%;\n    max-height: 80vh;\n    overflow: auto;\n    @media (min-width: 50rem) {\n      width: 45rem;\n    }\n  }\n}\n\n.header {\n  padding-top: 1rem;\n}\n\n.name {}\n\n.def {\n  font-style: italic;\n  font-size: 0.9rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' Insert value            {{macro.header | translate}}      {{ macro.name }}      {{ macro.desc | translate }}      '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'MacroDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediaComponent.html":{"url":"components/MediaComponent.html","title":"component - MediaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MediaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/club/media/media.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-media\n            \n\n            \n                styleUrls\n                ./media.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./media.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                club\n                            \n                            \n                                disciplines\n                            \n                            \n                                media\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onMediaChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigurationService, parent: ClubEditorComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/club/media/media.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        ClubEditorComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/media/media.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onMediaChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonMediaChanged(media: IMedia)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/media/media.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    media\n                                    \n                                                IMedia\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            club\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IClub\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/media/media.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disciplines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDiscipline[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/media/media.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            media\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/media/media.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ConfigurationService } from 'app/shared/services/api';\nimport { IDiscipline } from 'app/model/IDiscipline';\nimport { Logger } from 'app/shared/services';\nimport { IMedia } from 'app/model/IMedia';\nimport { ClubEditorComponent } from '../club-editor/club-editor.component';\nimport { IClub } from 'app/model/IClub';\n\n@Component({\n  selector: 'app-media',\n  templateUrl: './media.component.html',\n  styleUrls: ['./media.component.scss']\n})\nexport class MediaComponent implements OnInit {\n  disciplines: IDiscipline[] = [];\n  club: IClub;\n  media = [];\n\n  constructor(\n    private configService: ConfigurationService,\n    private parent: ClubEditorComponent) { }\n\n  async ngOnInit() {\n    const defaults = await this.configService.getByname('defaultValues').toPromise();\n    this.disciplines = (typeof defaults.value === 'string' ? JSON.parse(defaults.value) : defaults.value).discipline;\n    this.parent.clubSubject.subscribe(club => this.club = club);\n  }\n\n  onMediaChanged(media: IMedia) {\n    Logger.log(media);\n    this.disciplines = JSON.parse(JSON.stringify(this.disciplines)); // Force change\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Club track\n    \n    \n      \n    \n  \n  \n    \n      \n        \n        {{ discipline.name }}\n      \n      \n        \n      \n    \n  \n\n\n  Upload default media for this club.\n\n  You can choose to upload one default track to be played in all executions by all troops\n    representing this club, or one track per discipline.\n  The track selection is hierarchical, which means that in a tournament, we will first\n    look for a track uploaded for that specific tournament in that specific discipline. That is configured when you assign your troops to a\n    competition. If none is found, we will look for a track for a specific discipline, which you configure in this panel. If we still cannot find\n    a track, we will look for a club track.\n\n\n    \n\n    \n                \n                    ./media.component.scss\n                \n                @import \"../../../../../styles/variables\";\n\n\ntd {\n  &.media {\n    label.media-name {\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n    .file-upload {\n      position: relative;\n      max-width: 40px;\n      padding-top: 0;\n      input[type=\"file\"] {\n        cursor: pointer;\n        position: absolute;\n        left: 0;\n        height: 100%;\n        width: 100%;\n        opacity: 0;\n        z-index: 999;\n        margin: 0;\n        padding: 0;\n      }\n    }\n  }\n}\n\n.info-box {\n  border: 1px solid rgba(0,0,0,0.1);\n  border-radius: 5px;\n  padding: 15px;\n  margin: 10px 0;\n  background: $primary;\n  h2 {\n    color: white;\n    margin-bottom: 12px;\n  }\n  p {\n    margin-bottom: 8px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Club track                                                {{ discipline.name }}                                  Upload default media for this club.  You can choose to upload one default track to be played in all executions by all troops    representing this club, or one track per discipline.  The track selection is hierarchical, which means that in a tournament, we will first    look for a track uploaded for that specific tournament in that specific discipline. That is configured when you assign your troops to a    competition. If none is found, we will look for a track for a specific discipline, which you configure in this panel. If we still cannot find    a track, we will look for a club track.'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'MediaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediaControlComponent.html":{"url":"components/MediaControlComponent.html","title":"component - MediaControlComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MediaControlComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/media-control/media-control.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-media-control\n            \n\n            \n                styleUrls\n                ./media-control.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./media-control.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _canUpload\n                            \n                            \n                                _media\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fileAdded\n                            \n                            \n                                getTitle\n                            \n                            \n                                hasMedia\n                            \n                            \n                                isPlaying\n                            \n                            \n                                isPrimaryMedia\n                            \n                            \n                                loadData\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                play\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canUpload\n                            \n                            \n                                clubId\n                            \n                            \n                                disciplineId\n                            \n                            \n                                disciplineName\n                            \n                            \n                                media\n                            \n                            \n                                showLabel\n                            \n                            \n                                teamId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    media\n                                \n                                \n                                    canUpload\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mediaService: MediaService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/media-control/media-control.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mediaService\n                                                  \n                                                        \n                                                                        MediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canUpload\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/media-control/media-control.component.ts:30\n                            \n                        \n                \n                    \n                        Can only upload if explisitly given the permission to do so, AND if the identifier criteria above is met. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        clubId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/media-control/media-control.component.ts:18\n                            \n                        \n                \n                    \n                        Topmost identifier, a club can have a default track. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disciplineId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/media-control/media-control.component.ts:22\n                            \n                        \n                \n                    \n                        Third identifier, but cannot stand alone. Must be used with one or both of clubId and teamId \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disciplineName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/media-control/media-control.component.ts:24\n                            \n                        \n                \n                    \n                        Third identifier fallback for configuring cross tournament tracks *\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        media\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/media-control/media-control.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabel\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/media-control/media-control.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        teamId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/media-control/media-control.component.ts:20\n                            \n                        \n                \n                    \n                        Second identifier, a team is connected to a club and each team can have its own track across disciplines \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/media-control/media-control.component.ts:33\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fileAdded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fileAdded($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/media-control/media-control.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/media-control/media-control.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasMedia\n                        \n                        \n                    \n                \n            \n            \n                \nhasMedia()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/media-control/media-control.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPlaying\n                        \n                        \n                    \n                \n            \n            \n                \nisPlaying()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/media-control/media-control.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPrimaryMedia\n                        \n                        \n                    \n                \n            \n            \n                \nisPrimaryMedia()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/media-control/media-control.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadData\n                        \n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/media-control/media-control.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(change: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/media-control/media-control.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    change\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/media-control/media-control.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            play\n                        \n                        \n                    \n                \n            \n            \n                \nplay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/media-control/media-control.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/media-control/media-control.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/media-control/media-control.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _canUpload\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/media-control/media-control.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _media\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IMedia\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/media-control/media-control.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        media\n                    \n                \n\n                \n                    \n                        getmedia()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/media-control/media-control.component.ts:15\n                                \n                            \n\n                \n                    \n                        setmedia(media)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/media-control/media-control.component.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            media\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        canUpload\n                    \n                \n\n                \n                    \n                        getcanUpload()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/media-control/media-control.component.ts:31\n                                \n                            \n\n                \n                    \n                        setcanUpload(flag: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/media-control/media-control.component.ts:30\n                                \n                            \n                    \n                        \n                                Can only upload if explisitly given the permission to do so, AND if the identifier criteria above is met. \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            flag\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { MediaService } from 'app/shared/services/media.service';\nimport { IMedia } from 'app/model/IMedia';\nimport { Logger } from 'app/shared/services/Logger';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-media-control',\n  templateUrl: './media-control.component.html',\n  styleUrls: ['./media-control.component.scss']\n})\nexport class MediaControlComponent implements OnInit, OnChanges {\n  _media: IMedia;\n  @Input() set media(media: IMedia) { this._media = media; }\n  get media() { return this._media; }\n\n  /** Topmost identifier, a club can have a default track. */\n  @Input() clubId?: number;\n  /** Second identifier, a team is connected to a club and each team can have its own track across disciplines */\n  @Input() teamId?: number;\n  /** Third identifier, but cannot stand alone. Must be used with one or both of clubId and teamId */\n  @Input() disciplineId?: number;\n  /** Third identifier fallback for configuring cross tournament tracks **/\n  @Input() disciplineName?: string;\n\n  @Input() showLabel = true;\n\n  _canUpload = false;\n  /** Can only upload if explisitly given the permission to do so, AND if the identifier criteria above is met. */\n  @Input() set canUpload(flag: boolean) { this._canUpload = flag; }\n  get canUpload() { return this._canUpload && (this.clubId != null || this.teamId != null); }\n\n  @Output() changed = new EventEmitter();\n\n  constructor(private mediaService: MediaService, private translate: TranslateService) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    if ((!change.media || !change.media.currentValue) && (change.clubId || change.teamId || change.disciplineId || change.disciplineName)) {\n      this.loadData();\n    }\n  }\n\n  async fileAdded($event) {\n    const fileList: FileList = ($event.target).files;\n    if (fileList.length > 0 && this.canUpload) {\n      const data = await this.mediaService.upload(fileList[0], this.clubId, this.teamId, this.disciplineId, this.disciplineName).toPromise();\n      this._media = data;\n      this.changed.emit(data);\n    }\n  }\n\n  loadData() {\n    this.mediaService.getMedia(this.clubId, this.teamId, this.disciplineId, this.disciplineName).then(media => {\n      this._media = media;\n    });\n  }\n\n  hasMedia() {\n    return this._media != null;\n  }\n\n  isPrimaryMedia() {\n    return this.hasMedia()\n      && (!this.clubId || this.media.clubId === this.clubId)\n      && (!this.teamId || this.media.teamId === this.teamId)\n      && (!this.disciplineId || this.media.disciplineId === this.disciplineId)\n      && (!this.disciplineName || this.media.disciplineName === this.disciplineName);\n  }\n\n  getTitle() {\n    let title = '';\n    if (!this.clubId || this.media.clubId === this.clubId) { title = this.translate.instant('Club default track'); }\n    if (!this.teamId || this.media.teamId === this.teamId) { title = this.translate.instant('Team default track'); }\n    if (!this.disciplineName || this.media.disciplineName === this.disciplineName) { title = this.translate.instant('Club default for this discipline'); }\n    if (!this.disciplineId || this.media.disciplineId === this.disciplineId) { title = ''; }\n    return title;\n  }\n\n  isPlaying() {\n    return (this._media && this.mediaService.whatsPlaying ? this.mediaService.whatsPlaying.id === this._media.id : false);\n  }\n\n  play() {\n    this.mediaService.play(this._media);\n  }\n\n  stop() {\n    this.mediaService.stop();\n  }\n\n  async remove() {\n    this.stop();\n    if (this._canUpload) {\n      const result = await this.mediaService.remove(this._media);\n      this.changed.emit(null);\n      setTimeout(() => this.loadData());\n      return result;\n    }\n    return true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n    \n  \n\n{{ media.originalName }}\n\n    \n\n    \n                \n                    ./media-control.component.scss\n                \n                @import '../../../../styles/variables';\n\n:host {\n  display: flex;\n  align-items: center;\n}\n\nlabel {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  color: rgba($text-color, 0.5);\n  &.primary {\n    color: $text-color;\n  }\n}\n.file-upload {\n  position: relative;\n  max-width: 40px;\n  padding-top: 0;\n  input[type=\"file\"] {\n    cursor: pointer;\n    position: absolute;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    opacity: 0;\n    z-index: 999;\n    margin: 0;\n    padding: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{ media.originalName }}'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'MediaControlComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/media.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _audio\n                            \n                            \n                                    Private\n                                _isPaused\n                            \n                            \n                                    Private\n                                _whatsPlaying\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMedia\n                            \n                            \n                                pause\n                            \n                            \n                                play\n                            \n                            \n                                remove\n                            \n                            \n                                restart\n                            \n                            \n                                stop\n                            \n                            \n                                togglePause\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    audio\n                                \n                                \n                                    whatsPlaying\n                                \n                                \n                                    isPaused\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, graph: GraphService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/media.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMedia\n                        \n                        \n                    \n                \n            \n            \n                \ngetMedia(clubId: number, teamId: number, disciplineId: number, disciplineName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/media.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clubId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    disciplineId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    disciplineName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pause\n                        \n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/media.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            play\n                        \n                        \n                    \n                \n            \n            \n                \nplay(media?: IMedia)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/media.service.ts:56\n                \n            \n\n\n            \n                \n                    Play track\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    media\n                                    \n                                                IMedia\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(media: IMedia)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/media.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    media\n                                    \n                                                IMedia\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restart\n                        \n                        \n                    \n                \n            \n            \n                \nrestart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/media.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/media.service.ts:71\n                \n            \n\n\n            \n                \n                    Fade out music\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            togglePause\n                        \n                        \n                    \n                \n            \n            \n                \ntogglePause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/media.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \nupload(file: File, clubId: number, teamId: number, disciplineId: number, disciplineName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/media.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clubId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    disciplineId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    disciplineName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _audio\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Audio()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/media.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _isPaused\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/media.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _whatsPlaying\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IMedia\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/media.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        audio\n                    \n                \n\n                \n                    \n                        getaudio()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/media.service.ts:10\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        whatsPlaying\n                    \n                \n\n                \n                    \n                        getwhatsPlaying()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/media.service.ts:13\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isPaused\n                    \n                \n\n                \n                    \n                        getisPaused()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/media.service.ts:16\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IMedia, IDiscipline } from 'app/model';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { GraphService } from './graph.service';\n\n@Injectable({ providedIn: 'root' })\nexport class MediaService {\n  private _audio = new Audio();\n  get audio() { return this._audio; }\n\n  private _whatsPlaying: IMedia;\n  get whatsPlaying() { return this._whatsPlaying; }\n\n  private _isPaused = false;\n  get isPaused() { return this._isPaused; }\n\n  constructor(private http: HttpClient, private graph: GraphService) { }\n\n  /**\n   *\n   */\n  upload(file: File, clubId: number, teamId: number, disciplineId: number, disciplineName: string): Observable {\n    const formData = new FormData();\n    formData.append('media', file, file.name);\n    if (clubId) { formData.append('clubId', `${clubId}`); }\n    if (teamId) { formData.append('teamId', `${teamId}`); }\n    if (disciplineId) { formData.append('disciplineId', `${disciplineId}`); }\n    if (disciplineName) { formData.append('disciplineName', `${disciplineName}`); }\n\n    return this.http.post(`/api/media/upload`, formData);\n  }\n\n  /**\n   *\n   */\n  getMedia(clubId: number, teamId: number, disciplineId: number, disciplineName: string): Promise {\n    const queryStr = [];\n    if (clubId !== undefined) { queryStr.push(`clubId: ${clubId}`); }\n    if (teamId !== undefined) { queryStr.push(`teamId: ${teamId}`); }\n    if (disciplineId !== undefined) { queryStr.push(`disciplineId: ${disciplineId}`); }\n    if (disciplineName) { queryStr.push(`disciplineName: \"${disciplineName}\"`); }\n    return this.graph.getData(`{media(${queryStr.join(',')}){id, fileName, originalName, clubId, teamId, disciplineId, disciplineName, tournamentId}}`).toPromise().then(res => res.media);\n  }\n\n  /**\n   *\n   */\n  remove(media: IMedia): Promise {\n    return this.graph.deleteData('Media', media.id).toPromise();\n  }\n\n  /**\n   * Play track\n   */\n  play(media?: IMedia) {\n    if (media) {\n      this._whatsPlaying = media;\n      this._audio.src = `/api/media?id=${media.id}`;\n      this._audio.load();\n    }\n    if (this._audio.src) {\n      this._audio.play();\n      this._isPaused = false;\n    }\n  }\n\n  /**\n   * Fade out music\n   */\n  stop() {\n    let vol = 1;\n    const interval = setInterval(() => {\n      vol -= 0.1;\n      if (vol \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberEditorComponent.html":{"url":"components/MemberEditorComponent.html","title":"component - MemberEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MemberEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/club/members/member-editor/member-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-editor\n            \n\n            \n                styleUrls\n                ./member-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./member-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                club\n                            \n                            \n                                gender\n                            \n                            \n                                maxYear\n                            \n                            \n                                memberForm\n                            \n                            \n                                memberQuery\n                            \n                            \n                                minYear\n                            \n                            \n                                troopList\n                            \n                            \n                                troopSelector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToTeam\n                            \n                            \n                                close\n                            \n                            \n                                delete\n                            \n                            \n                                memberReceived\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeFromTeam\n                            \n                            \n                                save\n                            \n                            \n                                troopDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                member\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, route: ActivatedRoute, graph: GraphService, clubComponent: ClubEditorComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clubComponent\n                                                  \n                                                        \n                                                                        ClubEditorComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        member\n                    \n                \n                \n                    \n                        Type :         IGymnast\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:154\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addToTeam\n                        \n                        \n                    \n                \n            \n            \n                \naddToTeam($event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            memberReceived\n                        \n                        \n                    \n                \n            \n            \n                \nmemberReceived(member: IGymnast)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    member\n                                    \n                                                IGymnast\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeFromTeam\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFromTeam(troop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    troop\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            troopDisplay\n                        \n                        \n                    \n                \n            \n            \n                \ntroopDisplay(troop: ITroop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    troop\n                                    \n                                                ITroop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            club\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IClub\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Gender\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : moment().subtract(8, 'year').year()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            memberForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            memberQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `{\n    id,\n    name,\n    email,\n    phone,\n    allergies,\n    birthDate,\n    birthYear,\n    club{id,name},\n    troop{id,name},\n    gender,\n    guardian1,\n    guardian1Phone,\n    guardian1Email,\n    guardian2,\n    guardian2Phone,\n    guardian2Email\n  }`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : moment().subtract(60, 'year').year()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            troopList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            troopSelector\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl('')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/members/member-editor/member-editor.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, HostListener } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { IClub, IGymnast, Gender, ITroop, Role } from 'app/model';\n\nimport * as moment from 'moment';\nimport { ClubEditorComponent } from 'app/views/configure/club/club-editor/club-editor.component';\nimport { MatAutocompleteSelectedEvent } from '@angular/material';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { CommonService } from 'app/shared/services/common.service';\n\n@Component({\n  selector: 'app-member-editor',\n  templateUrl: './member-editor.component.html',\n  styleUrls: ['./member-editor.component.scss']\n})\nexport class MemberEditorComponent implements OnInit {\n  @Input() member: IGymnast = {};\n  // @Output() memberChanged = new EventEmitter();\n  memberQuery = `{\n    id,\n    name,\n    email,\n    phone,\n    allergies,\n    birthDate,\n    birthYear,\n    club{id,name},\n    troop{id,name},\n    gender,\n    guardian1,\n    guardian1Phone,\n    guardian1Email,\n    guardian2,\n    guardian2Phone,\n    guardian2Email\n  }`;\n\n  club: IClub;\n\n  gender = Gender;\n  troopList = [];\n  troopSelector = new FormControl('');\n\n  minYear = moment().subtract(60, 'year').year();\n  maxYear = moment().subtract(8, 'year').year();\n\n  memberForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private graph: GraphService,\n    private clubComponent: ClubEditorComponent) { }\n\n  ngOnInit() {\n    // Create form\n    this.memberForm = this.fb.group({\n      id: [null],\n      name: [null, [Validators.required]],\n      birthYear: [null, [Validators.required, Validators.min(this.minYear), Validators.max(this.maxYear), Validators.minLength(4), Validators.maxLength(4)]],\n      birthDate: [null],\n      club: [null],\n      email: [null],\n      phone: [null],\n      gender: [null],\n      allergies: [null],\n      guardian1: [null],\n      guardian2: [null],\n      guardian1Phone: [null],\n      guardian2Phone: [null],\n      guardian1Email: [null],\n      guardian2Email: [null],\n      troop: [null]\n    });\n\n    const clubCtrl = this.memberForm.get('club');\n    const genderCtrl = this.memberForm.get('gender');\n    const birthYearCtrl = this.memberForm.get('birthYear');\n\n    this.clubComponent.clubSubject.subscribe(club => {\n      this.club = club;\n\n      // Determine Create/Edit mode\n      this.route.params.subscribe(params => {\n        if (params.id) {\n          // Existing member. Retreive details\n          this.graph.getData(`{gymnast(id:${+params.id})${this.memberQuery}}`).subscribe(res => this.memberReceived(res.gymnast));\n        } else {\n          // New member. Set defaults based on last member entry found\n          // this.graph.getData(getMembers(this.club).subscribe(memberList => {\n          //   if (!clubCtrl.value) { clubCtrl.setValue(this.club); }\n          //   const lastMember = memberList.length > 1 ? memberList[memberList.length - 2] : null;\n          //   birthYearCtrl.setValue(lastMember ? lastMember.birthYear : this.maxYear);\n          //   genderCtrl.setValue(lastMember ? lastMember.gender : Gender.Male);\n          // });\n        }\n      });\n    });\n\n    this.troopSelector.valueChanges.subscribe(val => {\n      if (this.club.id) {\n        this.graph.getData(`{getTroops(clubId:${this.club.id},name:\"${encodeURIComponent(val)}\"){id,name}}`).subscribe(res => {\n          this.troopList = res.getTroops.filter(t => this.memberForm.value.troop.findIndex(troop => troop.id === t.id)  { obj[k] = member[k]; return obj; }, {});\n    this.memberForm.setValue(val);\n  }\n\n  save() {\n    const member = this.memberForm.value;\n    member.clubId = member.club.id;\n    this.graph.saveData('Gymnast', CommonService.omit(member, ['club']), this.memberQuery).subscribe(response => {\n      this.close();\n    });\n  }\n\n  troopDisplay(troop: ITroop) {\n    return troop && troop.name ? troop.name : troop;\n  }\n\n  addToTeam($event: MatAutocompleteSelectedEvent) {\n    const troop = $event.option.value;\n    this.memberForm.value.troop.push(troop);\n    this.troopSelector.setValue('');\n    this.memberForm.markAsDirty();\n  }\n\n  removeFromTeam(troop) {\n    const troops = this.memberForm.value.troop;\n    troops.splice(troops.findIndex(t => t.id === troop.id));\n    this.memberForm.markAsDirty();\n  }\n\n  delete() {\n    const member = this.memberForm.value;\n    this.graph.deleteData('Troop', member.id).subscribe(response => {\n      this.close();\n    });\n  }\n\n  close() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === 'Escape') {\n      this.close();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n      \n        \n      \n      \n      \n        {{memberForm.value.name}}\n      \n    \n\n    \n      \n        \n          \n            \n          \n          \n            \n          \n          \n            Gender\n            \n              {{ 'Male' | translate}}\n              {{ 'Female' | translate}}\n            \n          \n        \n        \n          \n            \n            {{'Email' | translate}}\n          \n          \n            \n            {{'Phone' | translate}}\n          \n        \n        \n          \n            \n            {{'Allergies' | translate}}\n          \n        \n        \n          \n            Guardian\n\n            \n              \n            \n            \n              \n            \n            \n              \n            \n          \n          \n            Guardian\n            \n              \n            \n            \n              \n            \n            \n              \n            \n          \n        \n      \n\n      \n         {{'Teams' | translate}}\n        \n          \n          \n            \n              {{ troop.name }}\n            \n          \n        \n        \n          \n            {{ troop.name }}\n            \n          \n        \n      \n    \n\n    \n      \n       Cancel\n      \n         Delete\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./member-editor.component.scss\n                \n                @import \"../../../../../../styles/variables\";\n// app-slide-toggle {\n//   display: block;\n//   min-width: 6rem;\n// }\n\nfieldset {\n  float: left;\n}\n\n.mat-card-content {\n  display: flex;\n  flex-wrap: wrap;\n  > section {\n    padding: 0 5px;\n  }\n  > .gymnast-data {\n    flex: 1;\n  }\n}\n\n// .teams {\n//   .mat-list-item {\n//     display: flex;\n//     a {\n//       text-decoration: none;\n//       flex: 1;\n//     }\n//   }\n// }\n\n::ng-deep {\n  .mat-slide-toggle:not(.mat-disabled) .mat-slide-toggle-bar {\n    background-color: rgba($warning, 0.10);\n  }\n  .mat-slide-toggle:not(.mat-disabled) .mat-slide-toggle-thumb {\n    background-color: rgba($warning, 0.30);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{memberForm.value.name}}                                                                                                                  Gender                          {{ \\'Male\\' | translate}}              {{ \\'Female\\' | translate}}                                                                        {{\\'Email\\' | translate}}                                            {{\\'Phone\\' | translate}}                                                            {{\\'Allergies\\' | translate}}                                                Guardian                                                                                                                                                  Guardian                                                                                                                                                         {{\\'Teams\\' | translate}}                                                      {{ troop.name }}                                                            {{ troop.name }}                                                         Cancel               Delete            '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'MemberEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberSelectorComponent.html":{"url":"components/MemberSelectorComponent.html","title":"component - MemberSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MemberSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/_shared/member-selector/member-selector.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-selector\n            \n\n            \n                styleUrls\n                ./member-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./member-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _club\n                            \n                            \n                                    Private\n                                _gymnasts\n                            \n                            \n                                availableMembers\n                            \n                            \n                                filteredMembers\n                            \n                            \n                                filterFn\n                            \n                            \n                                genders\n                            \n                            \n                                isLoadingMembers\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFilter\n                            \n                            \n                                age\n                            \n                            \n                                drop\n                            \n                            \n                                getFilteredGymnasts\n                            \n                            \n                                loadAvailableMembers\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMembers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                club\n                            \n                            \n                                gymnasts\n                            \n                            \n                                memberListHidden\n                            \n                            \n                                memberTemplate\n                            \n                            \n                                troopName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                gymnastsChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    club\n                                \n                                \n                                    gymnasts\n                                \n                                \n                                    toggleTitle\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(graph: GraphService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        club\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gymnasts\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        memberListHidden\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        memberTemplate\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        troopName\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        gymnastsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addFilter\n                        \n                        \n                    \n                \n            \n            \n                \naddFilter(name: string, fn: FilterFn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fn\n                                    \n                                                FilterFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            age\n                        \n                        \n                    \n                \n            \n            \n                \nage(birthYear: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    birthYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \ndrop(event: CdkDragDrop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CdkDragDrop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFilteredGymnasts\n                        \n                        \n                    \n                \n            \n            \n                \ngetFilteredGymnasts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAvailableMembers\n                        \n                        \n                    \n                \n            \n            \n                \nloadAvailableMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMembers\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _club\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IClub\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _gymnasts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGymnast[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            availableMembers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGymnast[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredMembers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGymnast[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterFn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Gender\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoadingMembers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:50\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        club\n                    \n                \n\n                \n                    \n                        getclub()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:33\n                                \n                            \n\n                \n                    \n                        setclub(v)\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        gymnasts\n                    \n                \n\n                \n                    \n                        getgymnasts()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:42\n                                \n                            \n\n                \n                    \n                        setgymnasts(v)\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleTitle\n                    \n                \n\n                \n                    \n                        gettoggleTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/_shared/member-selector/member-selector.component.ts:52\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, EventEmitter, Output, OnDestroy, TemplateRef } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { Subscription } from 'rxjs';\n\nimport * as moment from 'moment';\n\nimport { IGymnast, IClub, Gender } from 'app/model';\nimport { GraphService } from 'app/shared/services/graph.service';\n\nexport type FilterFn = (g: IGymnast) => boolean;\n\n@Component({\n  selector: 'app-member-selector',\n  templateUrl: './member-selector.component.html',\n  styleUrls: ['./member-selector.component.scss']\n})\nexport class MemberSelectorComponent implements OnInit, OnDestroy {\n  @Input() troopName = '';\n  @Input() memberListHidden = true;\n  @Input() memberTemplate: TemplateRef;\n  @Output() gymnastsChange = new EventEmitter();\n\n  filterFn: { [name: string]: FilterFn } = {};\n\n  private _club: IClub;\n  @Input() set club(v) {\n    if (v) {\n      this._club = v;\n      this.loadAvailableMembers();\n    }\n  }\n  get club() { return this._club; }\n\n  private _gymnasts: IGymnast[] = [];\n  @Input() set gymnasts(v) {\n    this._gymnasts = v;\n    if (v) {\n      this.loadAvailableMembers();\n    }\n  }\n  get gymnasts() { return this._gymnasts; }\n\n\n  availableMembers: IGymnast[] = [];\n  filteredMembers: IGymnast[] = [];\n  genders = Gender;\n  isLoadingMembers = false;\n\n  private subscription: Subscription[] = [];\n\n  get toggleTitle() {\n    return this.memberListHidden\n      ? this.translate.instant('Show available members')\n      : this.translate.instant('Hide available members');\n  }\n\n  constructor(\n    private graph: GraphService,\n    private translate: TranslateService) { }\n\n  ngOnInit() {\n    this.loadAvailableMembers();\n  }\n\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    }\n    this.gymnastsChange.emit(this.gymnasts);\n  }\n\n  ngOnDestroy() {\n    this.subscription.forEach(s => s.unsubscribe());\n  }\n\n  toggleMembers() {\n    this.memberListHidden = !this.memberListHidden;\n  }\n\n  loadAvailableMembers() {\n    if (this.club) {\n      if (!this.isLoadingMembers) {\n        this.isLoadingMembers = true;\n        const query = `{ getGymnasts (clubId:${this.club.id}) {id,name,birthYear,gender}}`\n        this.graph.getData(query)\n          .subscribe(res => {\n            this.availableMembers = this.filteredMembers = res.getGymnasts;\n            if (res.getGymnasts && res.getGymnasts.length && this.gymnasts && this.gymnasts.length) {\n              this.addFilter('available', (g => this.gymnasts.findIndex(tg => tg.id === g.id)  0;\n            this.isLoadingMembers = false;\n          });\n      }\n    }\n  }\n\n  getFilteredGymnasts() {\n    let members = this.availableMembers;\n    if (members && members.length) {\n      Object.keys(this.filterFn).forEach(key => members = members.filter(this.filterFn[key]));\n    }\n    return members && members.length ? members.sort((a, b) => {\n      if (a.birthYear === b.birthYear) {\n        return a.name > b.name ? 1 : -1;\n      }\n      return a.birthYear > b.birthYear ? -1 : 1;\n    }) : members;\n  }\n\n  addFilter(name: string, fn: FilterFn) {\n    this.filterFn[name] = fn;\n    this.filteredMembers = this.getFilteredGymnasts();\n  }\n\n  age(birthYear: number) {\n    return moment().diff(moment(birthYear, 'YYYY'), 'years');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n\n  \n  \n    \n      \n      Available\n    \n    \n      \n        {{ member.name }}\n        {{ age(member.birthYear) }}\n      \n    \n  \n\n  \n  \n    \n      \n        \n        Gymnasts ({{ gymnasts.length }})\n      \n      \n       0\">\n        Press the  icon found to the left of this header to view available members.\n        You can then drag and drop members into the team.\n      \n      \n        You have assigned all your members into teams.\n        If you want to re-assign members, you must drag them back to \"Available\", or recruit more members.\n      \n    \n    \n      \n        \n          {{ member.name }}\n          \n          {{ age(member.birthYear) }}\n        \n      \n    \n  \n\n\n\n\n  Your club does not have any gymnasts registerred.\n   Why not go register some?\n\n\n    \n\n    \n                \n                    ./member-selector.component.scss\n                \n                @import \"../../../../../styles/variables\";\n\n:host {\n  display: block;\n  margin-bottom: 2rem;\n  > section {\n    display: flex;\n    padding: 4px;\n  }\n}\nh3 {\n  min-height: 25px;\n  span {\n    line-height: 25px;\n  }\n}\n.flex-col {\n  flex: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  transition: flex 0.2s ease-in-out;\n  &.hidden {\n    flex: 0;\n  }\n}\n.drag-list {\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  min-height: 100%;\n  max-height: 29.6em;\n  overflow: auto;\n  padding-bottom: 1.5rem;\n}\n.drag-box {\n  padding: 0.857em;\n  border: 1px solid #eee;\n  margin: 2px;\n  max-height: 3em;\n  small {\n    float: right;\n  }\n  span {\n    min-height: 1rem;\n  }\n  &.male {\n    background: rgba(blue, 0.05);\n  }\n  &.female {\n    background: rgba(red, 0.05);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Available                      {{ member.name }}        {{ age(member.birthYear) }}                                          Gymnasts ({{ gymnasts.length }})                   0\">        Press the  icon found to the left of this header to view available members.        You can then drag and drop members into the team.                    You have assigned all your members into teams.        If you want to re-assign members, you must drag them back to \"Available\", or recruit more members.                                      {{ member.name }}                    {{ age(member.birthYear) }}                      Your club does not have any gymnasts registerred.   Why not go register some?'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'MemberSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemberStateService.html":{"url":"injectables/MemberStateService.html","title":"injectable - MemberStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MemberStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/views/configure/club/members/member-state.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/club/members/member-state.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/members/member-state.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSort } from '@angular/material';\n\n@Injectable()\nexport class MemberStateService {\n  sort: MatSort = null;\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultirangeComponent.html":{"url":"components/MultirangeComponent.html","title":"component - MultirangeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultirangeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/multirange/multirange.component.ts\n\n\n    \n        Description\n    \n    \n        Converted to Angular from https://github.com/LeaVerou/multirange\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-multirange\n            \n\n            \n                styleUrls\n                ./multirange.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./multirange.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _valueHigh\n                            \n                            \n                                    Private\n                                _valueLow\n                            \n                            \n                                highRef\n                            \n                            \n                                lowRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                consolidateLowHigh\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                updateTrack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    tooltip\n                                \n                                \n                                    valueLow\n                                \n                                \n                                    valueHigh\n                                \n                                \n                                    ticks\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/multirange/multirange.component.ts:63\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChanges\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            consolidateLowHigh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consolidateLowHigh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/multirange/multirange.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/multirange/multirange.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateTrack\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTrack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/multirange/multirange.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _valueHigh\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.max\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _valueLow\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.min\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('high', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('low', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:28\n                                \n                            \n\n                \n                    \n                        setvalue(v: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n\n                \n                    \n                        gettooltip()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        valueLow\n                    \n                \n\n                \n                    \n                        getvalueLow()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:39\n                                \n                            \n\n                \n                    \n                        setvalueLow(v)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        valueHigh\n                    \n                \n\n                \n                    \n                        getvalueHigh()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:51\n                                \n                            \n\n                \n                    \n                        setvalueHigh(v)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ticks\n                    \n                \n\n                \n                    \n                        getticks()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/multirange/multirange.component.ts:61\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\n\n/**\n * Converted to Angular from https://github.com/LeaVerou/multirange\n */\n@Component({\n  selector: 'app-multirange',\n  templateUrl: './multirange.component.html',\n  styleUrls: ['./multirange.component.scss']\n})\nexport class MultirangeComponent implements OnInit {\n  @Input() name = '';\n  @Input() min = 0;\n  @Input() max = 100;\n\n  // private _externalSet = false;\n  @Input()\n  set value(v: string) {\n    // this._externalSet = true;\n    const values = v.split(',');\n    this.valueLow = +values[0];\n    this.valueHigh = +values[1];\n\n    this.updateTrack();\n\n    // this._externalSet = false;\n  }\n  get value(): string { return this.valueLow + ',' + this.valueHigh; }\n  get tooltip(): string {\n    const low = this.valueLow  = new EventEmitter();\n\n  @ViewChild('low', { static: true }) lowRef: ElementRef;\n  private _valueLow = this.min;\n  get valueLow() { return this._valueLow; }\n  set valueLow(v) {\n    if (v !== this._valueLow) {\n      this._valueLow = v;\n      // if (!this._externalSet) {\n      this.consolidateLowHigh();\n      // }\n    }\n  }\n\n  @ViewChild('high', { static: true }) highRef: ElementRef;\n  private _valueHigh = this.max;\n  get valueHigh() { return this._valueHigh; }\n  set valueHigh(v) {\n    if (v !== this._valueHigh) {\n      this._valueHigh = v;\n      // if (!this._externalSet) {\n      this.consolidateLowHigh();\n      // }\n    }\n  }\n\n  get ticks() {\n    return Array(+this.max + 1).fill(0).map((x, i) => i + (+this.min));\n  }\n\n\n  constructor() { }\n\n  private updateTrack() {\n    this.highRef.nativeElement.style.setProperty('--low', 100 * ((this.valueLow - this.min) / (this.max - this.min)) + '%');\n    this.highRef.nativeElement.style.setProperty('--high', 100 * ((this.valueHigh - this.min) / (this.max - this.min)) - 1 + '%');\n  }\n\n  private consolidateLowHigh() {\n    if (!isNaN(this.valueHigh) && !isNaN(this.valueLow)) {\n      // Consolidate high/low values\n      const high = this.valueHigh;\n      const low = this.valueLow;\n      this._valueHigh = Math.max(low, high);\n      this._valueLow = Math.min(low, high);\n\n      // Set css variables\n      this.updateTrack();\n\n      // Emit changed value\n      this.valueChanges.emit(this.value);\n    }\n  }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        {{ tooltip }}\n\n\n  \n    \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./multirange.component.scss\n                \n                @import '../../../../styles/form';\n@import '../../../../styles/variables';\n\n:host {\n  display: flex;\n  .range-container {\n    position: relative;\n    height: $inputHeight;\n    line-height: $inputHeight;\n    flex: 1;\n  }\n\n  output {\n    min-width: 4rem;\n  }\n\n\n  input[type=\"range\"] {\n    padding: 0;\n    margin: 0;\n    display: inline-block;\n    vertical-align: top;\n    position: absolute;\n    border: 0;\n    width: 99%;\n    &:focus {\n      box-shadow: none;\n    }\n    &.low {\n      &::-webkit-slider-thumb {\n        position: relative;\n        z-index: 2;\n      }\n      &::-moz-range-thumb {\n        transform: scale(1);\n        /* FF doesn't apply position it seems */\n        z-index: 1;\n      }\n      &::-moz-range-track, &::-webkit-range-track {\n        background: #eee;\n      }\n    }\n    &::-moz-range-track {\n      border-color: transparent;\n      /* needed to switch FF to \"styleable\" control */\n    }\n    &.high {\n      $background: linear-gradient(to right, transparent var(--low, 0), $primary 0, $primary var(--high, 100), transparent 0) no-repeat 0 45% / 100% 40%;\n      &::-webkit-slider-runnable-track {\n        background: $background;\n      }\n      &::-moz-range-track, &::-webkit-range-track {\n        background: $background;\n      }\n    }\n  }\n\n\n  .ticks {\n    display: flex;\n    justify-content: space-between;\n    height: 6px;\n    width: 99%;\n    transform: translate(0, 14px);\n    padding: 0 6px;\n    counter-reset: count -1;\n    > option {\n      height: 6px;\n      width: 1px;\n      border-right: 1px solid lighten($text-color, 40%);\n      counter-increment: count 1;\n      padding: 0;\n      margin: 0;\n      font-size: 1px;\n      &:nth-child(3n + 1) {\n        height: 12px;\n        border-color: $text-color;\n        &::before {\n          content: counter(count,decimal);\n          display: block;\n          transform: translate(-45%, -80%);\n          text-align: center;\n          width: 16px;\n          font-size: 9px;\n          line-height: 22px;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ tooltip }}            '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'MultirangeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MyHammerConfig.html":{"url":"injectables/MyHammerConfig.html","title":"injectable - MyHammerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MyHammerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n            \n                Extends\n            \n            \n                        HammerGestureConfig\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildHammer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildHammer\n                        \n                        \n                    \n                \n            \n            \n                \nbuildHammer(element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.module.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpCacheInterceptor } from './shared/interceptors/http-cache.interceptor';\n// Framework & libs\nimport { BrowserModule, HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID, Injectable } from '@angular/core';\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { JwtModule } from '@auth0/angular-jwt';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { Angulartics2Module } from 'angulartics2';\nimport { MarkdownToHtmlModule } from 'markdown-to-html-pipe';\nimport { AgmCoreModule } from '@agm/core';\nimport {\n  MatCardModule, MatSnackBarModule, MatInputModule, MatFormFieldModule, MatAutocompleteModule,\n  MatOptionModule, MatSlideToggleModule, MatButtonModule, MatDialogModule, MatListModule\n} from '@angular/material';\n\nimport { environment } from '../environments/environment';\n\n// Locale\nimport { registerLocaleData } from '@angular/common';\nimport localeNo from '@angular/common/locales/nb';\nregisterLocaleData(localeNo);\n\n// Module dependencies\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\n\n// Other services\nimport { AuthInterceptor } from './shared/interceptors/auth.interceptor';\n\n// Module components\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './views/home/home.component';\nimport { LoginComponent } from './views/home/login/login.component';\nimport { LogoutComponent } from './views/home/logout/logout.component';\nimport { RegisterComponent } from './views/home/register/register.component';\nimport { IUser } from './model/IUser';\nimport { GraphQLModule } from './graphql.module';\nimport { BrowserService } from './shared/browser.service';\nimport { ResetComponent } from './views/home/reset/reset.component';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './i18n/', '.json');\n}\n\nexport function tokenGetter() {\n  const currentUser: IUser = JSON.parse(BrowserService.sessionStorage().getItem('currentUser'));\n  return currentUser ? currentUser.token : null;\n}\n\n@Injectable()\nexport class MyHammerConfig extends HammerGestureConfig {\n  buildHammer(element: HTMLElement) {\n    const mc = new Hammer(element, {\n      touchAction: 'auto',\n    });\n    return mc;\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    LogoutComponent,\n    RegisterComponent,\n    ResetComponent\n  ],\n  imports: [\n    // Framework modules\n    BrowserModule.withServerTransition({ appId: 'gymsystems' }),\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production }),\n    TranslateModule.forRoot({\n      loader: { provide: TranslateLoader, useFactory: HttpLoaderFactory, deps: [HttpClient] }\n    }),\n    MarkdownToHtmlModule,\n    Angulartics2Module.forRoot({\n      pageTracking: {\n        clearIds: true,\n        clearQueryParams: true\n      }\n    }),\n    AgmCoreModule.forRoot({ apiKey: environment.geoApiKey }),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        skipWhenExpired: true,\n        whitelistedDomains: ['localhost', 'gymsystems.org']\n      }\n    }),\n\n    // Material imports\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatAutocompleteModule,\n    MatOptionModule,\n    MatCardModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n\n    // Application modules\n    SharedModule,\n\n    // Routes last (!important)\n    AppRoutingModule,\n\n    GraphQLModule\n  ],\n  providers: [\n    // Authentication interceptor\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: HttpCacheInterceptor, multi: true },\n    { provide: LOCALE_ID, useValue: 'nb-NO' },\n    { // hammer instantion with custom config\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: MyHammerConfig\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/OrderByPipe.html":{"url":"pipes/OrderByPipe.html","title":"pipe - OrderByPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  OrderByPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/order-by.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        orderBy\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(records: any[], args?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/order-by.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    records\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'orderBy' })\nexport class OrderByPipe implements PipeTransform {\n\n  transform(records: any[], args?: string): any {\n    const direction = (args.substring(0, 1) === '~' ? -1 : 1);\n    const property = args.replace('~', '');\n    if (!records || !records.length) {\n      return records;\n    }\n    return records.sort((a, b) => {\n      if (a[property]  b[property]) {\n        return 1 * direction;\n      } else {\n        return 0;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParticipantCache.html":{"url":"interfaces/ParticipantCache.html","title":"interface - ParticipantCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParticipantCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/views/event/list/list.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                        isNewDay\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNewDay\n                                    \n                                \n                                \n                                    \n                                        isNewDay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy, ElementRef, ViewChildren, QueryList, ViewContainerRef, HostListener } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\n\nimport * as moment from 'moment';\n\nimport { EventComponent } from '../event.component';\nimport { ContextMenuComponent } from './context-menu/context-menu.component';\n\nimport { ScheduleService, UserService } from 'app/shared/services/api';\nimport { MediaService } from 'app/shared/services/media.service';\nimport { ErrorHandlerService } from 'app/shared/interceptors/error-handler.service';\n\nimport { ITournament, ITeamInDiscipline, Role, IUser, IMedia, ParticipationType, IDiscipline, Classes } from 'app/model';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { BrowserService } from 'app/shared/browser.service';\n\n/**\n *\n */\ninterface ParticipantCache {\n  time: string;\n  date: string;\n  isNewDay: boolean;\n}\n\n/**\n *\n */\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit, OnDestroy {\n  @ViewChildren('row', { read: ViewContainerRef }) rows: QueryList;\n  dialogRef: MatDialogRef;\n  user: IUser;\n  tournament: ITournament;\n  schedule: ITeamInDiscipline[] = [];\n  selected: ITeamInDiscipline;\n  classes = Classes;\n  types = ParticipationType;\n  _showTraining;\n  isLoading = false;\n  hasTraining = false;\n\n  scheduleQuery = `{\n    id,\n    team{id,name,class},\n    media{id},\n    sortNumber,\n    startNumber,\n    markDeleted,\n    startTime,\n    endTime,\n    publishTime,\n    type,\n    disciplineId,\n    disciplineName,\n    disciplineSortOrder,\n    divisionName,\n    scorable,\n    total\n  }`;\n\n  get showTraining() {\n    if (this._showTraining === undefined) {\n      const show = this.browser.localStorage().getItem('showTraining') || !!this.user ? 'false' : 'true';\n      this._showTraining = show !== 'false';\n    }\n    return this._showTraining;\n  }\n  set showTraining(v) {\n    this.browser.localStorage().setItem('showTraining', v);\n    this._showTraining = v;\n  }\n\n  _cache: { [key: string]: ParticipantCache } = {};\n\n  selectedDiscipline = null;\n  disciplines: IDiscipline[];\n\n  roles = Role;\n  participationTypes = ParticipationType;\n\n  subscriptions: Subscription[] = [];\n\n  get description() { return (this.tournament ? this.tournament['description_' + this.translate.currentLang] : ''); }\n\n  constructor(\n    private parent: EventComponent,\n    private translate: TranslateService,\n    private dialog: MatDialog,\n    private graph: GraphService,\n    private scheduleService: ScheduleService,\n    private userService: UserService,\n    private mediaService: MediaService,\n    private errorHandler: ErrorHandlerService,\n    private browser: BrowserService) { }\n\n  /**\n   *\n   */\n  ngOnInit() {\n    // Make sure we have translations for weekdays\n    this.translate.get(['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']).subscribe();\n\n    this.subscriptions.push(this.graph.listen('teamInDisciplineModified', this.scheduleQuery).subscribe(res => {\n      this.loadSchedule();\n    }));\n    this.subscriptions.push(this.userService.getMe(true).subscribe(user => this.user = user));\n    this.loadData();\n  }\n\n  /**\n   *\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  loadData() {\n    this.isLoading = true;\n    this.graph.getData(`{\n      tournament(id:${this.parent.tournamentId}){id,name,clubId,venue{id,name},times{day,time}},\n      getDisciplines(tournamentId:${this.parent.tournamentId}){id,name,sortOrder}}`).subscribe(\n      data => {\n        this.tournament = data.tournament;\n        this.disciplines = data.getDisciplines;\n        this.loadSchedule();\n      },\n      error => {\n        this.isLoading = false;\n        this.errorHandler.setError(error);\n      }\n    );\n  }\n\n  /**\n   *\n   */\n  loadSchedule() {\n    this.isLoading = true;\n    this.graph.getData(`{getSchedule(tournamentId:${this.parent.tournamentId})${this.scheduleQuery}}`)\n      .subscribe(\n        data => {\n          const schedule = data.getSchedule;\n          this.isLoading = false;\n          this.hasTraining = schedule.filter(s => s.type === ParticipationType.Training).length > 0;\n\n          if (!this.selected) {\n            this.schedule = schedule;\n          } else {\n            schedule.forEach(participant => {\n              const idx = this.schedule.findIndex(t => t.id === participant.id);\n              if (idx > -1 && this.schedule[idx] !== this.selected) {\n                this.schedule.splice(idx, 1, participant);\n              } else {\n                // Should never happen\n                this.schedule.push(participant);\n              }\n            });\n          }\n          this.invalidateCache();\n        },\n        error => {\n          this.isLoading = false;\n          this.errorHandler.setError(error);\n        }\n      );\n  }\n\n  /**\n   *\n   */\n  private getCacheKey(participant: ITeamInDiscipline) {\n    return participant.sortNumber;\n  }\n\n  /**\n   *\n   */\n  private invalidateCache(participant?: ITeamInDiscipline) {\n    if (participant) {\n      delete participant.calculatedStartTime;\n    } else {\n      this.schedule.forEach(s => this.invalidateCache(s));\n    }\n  }\n\n  /**\n   *\n   */\n  startTime(participant: ITeamInDiscipline): Date {\n    return this.scheduleService.startTime(this.tournament, participant, this.schedule);\n  }\n\n  /**\n   *\n   */\n  isNewDay(participant: ITeamInDiscipline): boolean {\n    return this.scheduleService.isNewDay(this.tournament, participant, this.schedule);\n  }\n\n  /**\n   *\n   */\n  isVisible(participant: ITeamInDiscipline) {\n    return (!this.selectedDiscipline || this.selectedDiscipline.id === participant.disciplineId)\n      && (participant.type !== ParticipationType.Training || this.showTraining === true);\n  }\n\n  /**\n   *\n   */\n  score(participant: ITeamInDiscipline): number {\n    const score = parseFloat(participant.total);\n\n    // Only show score if score is published, OR logged in user is part of the secretariat\n    return (participant.publishTime || (this.user && this.user.role >= Role.Secretariat)) ? score : 0;\n  }\n\n  /**\n   *\n   */\n  canEdit(participant: ITeamInDiscipline): boolean {\n    return this.user && (!participant || !participant.markDeleted) && participant.scorable && (\n      this.user.role >= Role.Admin\n      || (this.user.role >= Role.Secretariat && +this.user.clubId === +this.tournament.clubId)\n    );\n  }\n\n  /**\n   *\n   */\n  canViewActions(): boolean {\n    return this.user\n      && (this.user.role >= Role.Admin\n        || (this.user.role >= Role.Secretariat && +this.user.clubId === +this.tournament.clubId)\n      );\n  }\n\n  /**\n   *\n   */\n  select(participant: ITeamInDiscipline) {\n    if (this.dialogRef) { this.dialogRef.close(); }\n    if (this.canEdit(participant)) {\n      if (participant != null && participant.startTime == null && participant.type === ParticipationType.Live) {\n        this.errorHandler.setError(this.translate.instant(`Cannot edit score. This participant hasn't started yet.`));\n        return;\n      }\n      if (participant && participant.type === ParticipationType.Training) {\n        return;\n      }\n      this.selected = participant;\n    }\n  }\n\n  /**\n   *\n   */\n  canStart(participant: ITeamInDiscipline, index: number) {\n    if (participant.markDeleted) { return false; }\n    let previous;\n    for (let j = index - 1; j >= 0; j--) {\n      if (!this.schedule[j].markDeleted) {\n        previous = this.schedule[j];\n        break;\n      }\n    }\n    const previousStarted = (previous != null ? previous.startTime != null : true);\n    return participant.startTime == null && previousStarted;\n  }\n\n  /**\n   *\n   */\n  start(participant: ITeamInDiscipline, evt: Event) {\n    if (this.dialogRef) { this.dialogRef.close(); }\n    if (this.user && this.user.role >= Role.Secretariat) {\n      if (participant.startTime != null) {\n        this.errorHandler.setError(this.translate.instant('This participant has allready started.'));\n        return;\n      }\n      if (evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n      }\n\n      // Autostop last participant if this is not allready done\n      this.schedule\n        .filter(p => p.startTime != null && p.endTime == null)\n        .map(p => this.stop(p, evt));\n\n      participant.startTime = new Date();\n      this.invalidateCache(participant);\n      this.graph.post(`{start(id: ${participant.id}){id,startTime}}`).subscribe(res => {\n        participant.startTime = res.data.start.startTime;\n        this.mediaService.play(participant.media);\n      });\n    }\n  }\n\n  /**\n   *\n   */\n  stop(participant: ITeamInDiscipline, evt: Event) {\n    if (this.dialogRef) { this.dialogRef.close(); }\n    if (this.user && this.user.role >= Role.Secretariat) {\n      if (participant.startTime == null) {\n        this.errorHandler.setError(this.translate.instant(`Cannot stop. This participant hasn't started yet.`));\n        return;\n      }\n      if (evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n      }\n\n      this.mediaService.stop();\n\n      participant.endTime = new Date();\n      this.graph.post(`{stop(id: ${participant.id}){id,endTime}}`).subscribe(res => {\n        participant.endTime = res.data.stop.endTime;\n      });\n    }\n  }\n\n  /**\n   *\n   */\n  publish(participant: ITeamInDiscipline, evt: Event) {\n    if (this.dialogRef) { this.dialogRef.close(); }\n    if (this.user && this.user.role >= Role.Secretariat) {\n      if (participant.publishTime != null) {\n        this.errorHandler.setError(this.translate.instant(`This participant's score is allready published.`));\n      }\n      if (evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n      }\n      participant.publishTime = new Date();\n      this.graph.post(`{publish(id: ${participant.id}){id,publishTime}}`).subscribe(res => {\n        participant.publishTime = res.data.publish.publishTime;\n      });\n    }\n  }\n\n  /**\n   *\n   */\n  closeEditor(cmd: string) {\n    this.invalidateCache(this.selected);\n    const idx = this.schedule.findIndex(s => s.id === this.selected.id);\n    if (typeof cmd === 'string') {\n      if (cmd === 'next') { return this.select(this.next(idx + 1)); }\n      if (cmd === 'previous') { return this.select(this.previous(idx - 1)); }\n      if (cmd === 'rollback') {\n        this.loadSchedule();\n      }\n    } else {\n      this.loadSchedule();\n    }\n    this.selected = null;\n  }\n\n  private next(idx) {\n    if (idx = 0) {\n      return (this.canEdit(this.schedule[idx]))\n        ? this.schedule[idx]\n        : this.previous(idx - 1);\n    }\n    return null;\n  }\n\n  /**\n   *\n   */\n  contextInvoked(item: ITeamInDiscipline, rowIndex: number, $event: MouseEvent) {\n    if (this.user && (this.user.role >= Role.Admin\n      || (this.user.role >= Role.Organizer && +this.user.clubId === +this.tournament.clubId))) {\n      $event.preventDefault();\n      $event.stopPropagation();\n\n      if (this.dialogRef) {\n        this.dialogRef.close();\n      }\n      this.dialogRef = this.dialog.open(ContextMenuComponent, {\n        // hasBackdrop: false,\n        backdropClass: 'context-backdrop',\n        panelClass: 'context-menu',\n        data: {\n          mouseX: $event.clientX,\n          mouseY: $event.clientY,\n          rowIndex: rowIndex,\n          participant: item,\n          currentUser: this.user,\n          tournament: this.tournament,\n          canEdit: this.canEdit.bind(this),\n          edit: this.select.bind(this),\n          canStart: this.canStart.bind(this),\n          start: this.start.bind(this),\n          stop: this.stop.bind(this),\n          publish: this.publish.bind(this),\n          rollback: () => {\n            this.dialogRef.close();\n            this.loadSchedule();\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   *\n   */\n  // @HostListener('window:click', ['$event'])\n  // onClick($event: MouseEvent) {\n  //   if (this.dialogRef) {\n  //     // if ($event.target.closest(this.))\n  //     // this.dialogRef.close();\n  //   }\n  // }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordComponent.html":{"url":"components/PasswordComponent.html","title":"component - PasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/users/password/password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password\n            \n\n            \n                styleUrls\n                ./password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                matcher\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, graph: GraphService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/users/password/password.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/password/password.component.ts:48\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/password/password.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matcher\n                        \n                        \n                    \n                \n            \n            \n                \nmatcher()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/password/password.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ErrorStateMatcher\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/password/password.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/password/password.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/users/password/password.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/users/password/password.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostListener } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { MatDialogRef, ErrorStateMatcher } from '@angular/material';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss']\n})\nexport class PasswordComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(private fb: FormBuilder, private graph: GraphService, public dialogRef: MatDialogRef) { }\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      oldPassword: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      repeatPassword: ['', [Validators.required]]\n    }, {\n        validator: (c: AbstractControl) => {\n          return c.get('password').value === c.get('repeatPassword').value ? null : { repeatPassword: { invalid: true } };\n        }\n      });\n  }\n\n  matcher(): ErrorStateMatcher {\n    return {\n      isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return control.invalid || (control.parent.errors && control.parent.errors.repeatPassword && control.parent.errors.repeatPassword.invalid);\n      }\n    }\n  }\n\n  save() {\n    const formVal = this.form.value;\n    this.graph.post(`{changePassword(old: \"${formVal.oldPassword}\", password: \"${formVal.password}\")}`).subscribe(\n      ret => this.close(),\n      err => this.close());\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === 'Escape') {\n      this.close();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ 'Current password is required' | translate }}\n      \n        Please type in your old password. This is for your own security, to avoid somebody taking over your account.\n      \n    \n  \n\n  \n    \n      \n      {{ 'A password is required' | translate }}\n      \n        Any password will do. We do not set restrictions. But please make sure it is not too easy.\n        We suggest using a password generator for this: https://xkpasswd.net/s/\n      \n    \n    \n      \n      {{ 'Passwords are not equal' | translate }}\n      \n        This needs to be exactly the same text as entered in the password field. Just to make sure you did not make any typos. :-)\n      \n    \n  \n\n  \n    {{ 'Cancel' | translate }}\n    {{ 'Ok' | translate }}\n  \n\n\n    \n\n    \n                \n                    ./password.component.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'Current password is required\\' | translate }}              Please type in your old password. This is for your own security, to avoid somebody taking over your account.                              {{ \\'A password is required\\' | translate }}              Any password will do. We do not set restrictions. But please make sure it is not too easy.        We suggest using a password generator for this: https://xkpasswd.net/s/                          {{ \\'Passwords are not equal\\' | translate }}              This needs to be exactly the same text as entered in the password field. Just to make sure you did not make any typos. :-)                  {{ \\'Cancel\\' | translate }}    {{ \\'Ok\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/home/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                registrationComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Organizer\n                                \n                                \n                                    Club\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seo: SEOService, fb: FormBuilder, router: Router, graph: GraphService, errorHandler: ErrorHandlerService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/home/register/register.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seo\n                                                  \n                                                        \n                                                                        SEOService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/register/register.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/register/register.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registrationComplete\n                        \n                        \n                    \n                \n            \n            \n                \nregistrationComplete(res)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/register/register.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/home/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Type\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/home/register/register.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                    \n                        \n                            Default value : { role: Role.Club }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/home/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Organizer\n                    \n                \n\n                \n                    \n                        getOrganizer()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/home/register/register.component.ts:26\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Club\n                    \n                \n\n                \n                    \n                        getClub()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/home/register/register.component.ts:27\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\n\nimport { ErrorHandlerService } from 'app/shared/interceptors/error-handler.service';\n\nimport { IUser, Role } from 'app/model/IUser';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { CommonService } from 'app/shared/services/common.service';\nimport { SEOService } from 'app/shared/services/seo.service';\n\nexport enum Type {\n  Organizer = 0 + Role.Organizer, Club = 0 + Role.Club\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  user: IUser = { role: Role.Club };\n\n  get Organizer(): string { return this.translate.instant('Organizer'); }\n  get Club(): string { return this.translate.instant('Club'); }\n\n  type = Type;\n\n  constructor(\n    private seo: SEOService,\n    private fb: FormBuilder,\n    private router: Router,\n    private graph: GraphService,\n    private errorHandler: ErrorHandlerService,\n    private translate: TranslateService) { }\n\n  ngOnInit() {\n    this.seo.setTitle('Register', `Register to gain access to the system`);\n\n    this.registerForm = this.fb.group({\n      id: [null],\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      role: [Role.Club, [Validators.required]],\n      club: [null, [Validators.required]],\n      password: ['', [Validators.required]],\n      repeatPassword: ['', [Validators.required]]\n    }, {\n        validator: (c: AbstractControl) => {\n          return c.get('password').value === c.get('repeatPassword').value ? null : { repeatPassword: { valid: false } };\n        }\n      });\n  }\n\n  async register() {\n    const user = this.registerForm.value;\n    if (!user.club) {\n      this.errorHandler.setError('No club set. Cannot register!');\n      return;\n    }\n\n    this.graph.saveData('User', CommonService.omit(user, ['repeatPassword']), '{id}').subscribe(\n      res => this.registrationComplete(res.saveUser),\n      err => this.registrationComplete(err)\n    );\n  }\n\n  registrationComplete(res) {\n    this.errorHandler.setError(res && res.id\n      ? this.translate.instant(`You are registerred! We've sent you an email with your credentials.`)\n      : JSON.stringify(res), '');\n    this.router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        Register\n      \n    \n    \n      \n        \n          \n          \n            The name you want to use for logging in to your account\n          \n        \n        \n          Register as\n          \n            Organizer\n            Club\n          \n          \n            As a Club representative, you can enter teams to participate in a tournament.\n            As an Organizer, you can create tournaments.\n            \n            \n              If you plan on creating tournaments in the future, we suggest you register as organizer.\n              You will have the same privileges as a club representative for tournaments your club does not organize.\n            \n          \n        \n      \n      \n        \n          \n          \n            The email address you provide for us will be used to contact you in regards to activity on your account.\n            We may also contact you if a tournament opens up for registration, so you can enter your club to join\n          \n        \n        \n          \n            \n              We need to know which club you represent in order to provide you with the appropriate privileges.\n            \n          \n        \n      \n      \n        \n          \n          \n            Any password will do. We do not set restrictions. But please make sure it is not too easy.\n            We suggest using a password generator for this: https://xkpasswd.net/s/\n          \n        \n        \n          \n          \n            This needs to be exactly the same text as entered in the password field. Just to make sure you did not make any typos. :-)\n          \n        \n      \n    \n\n    \n      \n        \n        Register\n      \n      \n        \n        Back to login\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                @import \"../../../../styles/variables\";\n\n:host {\n  .fixed-back {\n    +* {\n      @media (min-width: $stop1) {\n        margin-top: 10%;\n      }\n    }\n  }\n}\n\nform {\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n}\n.lowered {\n  padding-left: 1rem;\n  label {\n    margin-bottom: 0.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Register                                                            The name you want to use for logging in to your account                                    Register as                      Organizer            Club                                As a Club representative, you can enter teams to participate in a tournament.            As an Organizer, you can create tournaments.                                      If you plan on creating tournaments in the future, we suggest you register as organizer.              You will have the same privileges as a club representative for tournaments your club does not organize.                                                                                  The email address you provide for us will be used to contact you in regards to activity on your account.            We may also contact you if a tournament opens up for registration, so you can enter your club to join                                                              We need to know which club you represent in order to provide you with the appropriate privileges.                                                                                  Any password will do. We do not set restrictions. But please make sure it is not too easy.            We suggest using a password generator for this: https://xkpasswd.net/s/                                                          This needs to be exactly the same text as entered in the password field. Just to make sure you did not make any typos. :-)                                                      Register                            Back to login            '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetComponent.html":{"url":"components/ResetComponent.html","title":"component - ResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/home/reset/reset.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset\n            \n\n            \n                styleUrls\n                ./reset.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                matcher\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, graph: GraphService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/home/reset/reset.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matcher\n                        \n                        \n                    \n                \n            \n            \n                \nmatcher()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/reset/reset.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ErrorStateMatcher\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/reset/reset.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/home/reset/reset.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/home/reset/reset.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, AbstractControl, Validators, FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.scss']\n})\nexport class ResetComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(private fb: FormBuilder, private graph: GraphService, private router: Router) { }\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      'username': [''],\n      'email': ['', [Validators.email]],\n    }, {\n        validator: (c: AbstractControl) => {\n          return (c.get('username').value == null || c.get('username').value === '')\n            && (c.get('email').value == null || c.get('email').value === '')\n            ? { oneOf: { invalid: true } }\n            : null;\n        }\n      });\n  }\n\n  matcher(): ErrorStateMatcher {\n    return {\n      isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return control.invalid || (control.parent.errors && control.parent.errors.oneOf && control.parent.errors.oneOf.invalid);\n      }\n    }\n  }\n\n  reset() {\n    const val = this.form.getRawValue();\n    this.graph.post(`{resetPassword(username:\"${val.username}\",email:\"${val.email}\")}`).subscribe(res => {\n      this.router.navigate(['/login']);\n    })\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        Reset password\n      \n    \n    \n      Enter what you recall of your account. We need at least one of...\n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n    \n      \n         Reset\n      \n      \n        \n        Back to login\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./reset.component.scss\n                \n                @import \"../../../../styles/variables\";\n\n:host {\n  .fixed-back {\n    +* {\n      @media (min-width: $stop1) {\n        margin-top: 10%;\n      }\n    }\n  }\n}\n\nform {\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Reset password                    Enter what you recall of your account. We need at least one of...                                                                                                   Reset                            Back to login            '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoleData.html":{"url":"interfaces/RoleData.html","title":"interface - RoleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RoleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/guards/role-guard.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { UserService } from 'app/shared/services/api';\nimport { Role } from 'app/model';\n\nexport interface RoleData {\n  role: Role\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RoleGuard implements CanActivate {\n\n  constructor(protected router: Router, protected userService: UserService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const currentUser = this.userService.currentUser;\n    const role: Role = route.data['role'] as Role || Role.Admin;\n    if (currentUser) {\n      return currentUser.role >= role;\n    }\n    this.router.navigate(['/login'], { queryParams: { u: state.url } });\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/guards/role-guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/guards/role-guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/role-guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { UserService } from 'app/shared/services/api';\nimport { Role } from 'app/model';\n\nexport interface RoleData {\n  role: Role\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RoleGuard implements CanActivate {\n\n  constructor(protected router: Router, protected userService: UserService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const currentUser = this.userService.currentUser;\n    const role: Role = route.data['role'] as Role || Role.Admin;\n    if (currentUser) {\n      return currentUser.role >= role;\n    }\n    this.router.navigate(['/login'], { queryParams: { u: state.url } });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SEOService.html":{"url":"injectables/SEOService.html","title":"injectable - SEOService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SEOService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/seo.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCanonicalURL\n                            \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: Title, meta: Meta, dom: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/seo.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dom\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCanonicalURL\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCanonicalURL(url?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/seo.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(str: string, desc?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/seo.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    desc\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Title, Meta } from '@angular/platform-browser';\n\n@Injectable({ providedIn: 'root' })\nexport class SEOService {\n\n  constructor(private title: Title, private meta: Meta, @Inject(DOCUMENT) private dom: Document) { }\n\n  setTitle(str: string, desc?: string) {\n    const title = `GymSystems${str.length ? ' | ' + str : ''}`;\n\n    // Set title\n    this.title.setTitle(title);\n    this.meta.updateTag({ property: 'twitter:card', content: 'summary' });\n    this.meta.updateTag({ property: 'twitter:site', content: 'www.gymsystems.org' });\n    this.meta.updateTag({ property: 'og:title', content: title });\n\n    // Set url\n    const url = this.createCanonicalURL();\n    this.meta.updateTag({ property: 'og:url', content: url });\n\n    // Set description\n    if (desc) {\n      this.meta.updateTag({ property: 'og:description', content: desc });\n      this.meta.updateTag({ property: 'Description', content: desc });\n    }\n  }\n\n  createCanonicalURL(url?: string) {\n    const canURL = !!url ? url : this.dom.URL;\n    const link: HTMLLinkElement = this.dom.querySelector('link[rel=\"canonical\"]') || this.dom.createElement('link');\n    link.setAttribute('rel', 'canonical');\n    link.setAttribute('href', canURL);\n    this.dom.head.appendChild(link);\n    return canURL;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SaveButtonComponent.html":{"url":"components/SaveButtonComponent.html","title":"component - SaveButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SaveButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/save-button/save-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-save-button\n            \n\n            \n                styleUrls\n                ./save-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./save-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isListening\n                            \n                            \n                                isSaving\n                            \n                            \n                                subscriptions\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonType\n                            \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authState: HttpStateService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/save-button/save-button.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authState\n                                                  \n                                                        \n                                                                        HttpStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                \n                \n                    \n                        Type :     \"button\" | \"submit\"\n\n                    \n                \n                \n                    \n                        Default value : 'button'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/save-button/save-button.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/save-button/save-button.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/save-button/save-button.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/save-button/save-button.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/save-button/save-button.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isListening\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/save-button/save-button.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSaving\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/save-button/save-button.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/save-button/save-button.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/save-button/save-button.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Subscription, noop } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { HttpStateService } from 'app/shared/interceptors/http-state.service';\nimport { HttpMethod } from 'app/shared/interceptors/http-method';\nimport { HttpAction } from 'app/shared/interceptors/http-action.model';\n\n@Component({\n  selector: 'app-save-button',\n  templateUrl: './save-button.component.html',\n  styleUrls: ['./save-button.component.scss']\n})\nexport class SaveButtonComponent implements OnInit, OnDestroy {\n  @Input() disabled = false;\n  @Input() buttonType: 'button' | 'submit' = 'button';\n  isSaving = false;\n  success = false;\n  isListening = false; // Only listen for http events if this button has actually been clicked.\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private authState: HttpStateService, private translate: TranslateService) { }\n\n  ngOnInit() {\n    // Make sure language texts exist\n    this.translate.get(['Saved', 'Deleted', 'SUCCESS']).subscribe();\n    this.subscriptions.push(this.authState.httpAction.subscribe((action: HttpAction) => {\n      if (this.isListening && (action.method === HttpMethod.Post || action.method === HttpMethod.Put)) {\n        this.isSaving = !(action.isComplete);\n        if (action.isComplete) {\n          this.isListening = false;\n        }\n      }\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s && s.unsubscribe ? s.unsubscribe() : noop());\n  }\n\n  click() {\n    this.isListening = true;\n  }\n}\n\n    \n\n    \n        \n  \n  Save\n\n\n    \n\n    \n                \n                    ./save-button.component.scss\n                \n                @import '../../../../styles/variables';\n\n:host {\n  position: relative;\n  output {\n    position: absolute;\n    display: block;\n    white-space: nowrap;\n    padding: 8px 12px;\n    color: white;\n    border-radius: 4px;\n    top: 35px;\n    left: 2px;\n    &.success {\n      background: $success;\n      &:before {\n        background: $success;\n        border-color: $success\n      }\n    }\n    &.warning {\n      background: $warning;\n      &:before {\n        background: $warning;\n        border-color: $warning;\n      }\n    }\n    &:before {\n      content: '';\n      display: block;\n      width: 10px;\n      height: 10px;\n      border-style: solid;\n      border-width: 1px 0 0 1px;\n      transform: rotate(45deg);\n      position: absolute;\n      top: -5px;\n      left: 15px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Save'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'SaveButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleService.html":{"url":"injectables/ScheduleService.html","title":"injectable - ScheduleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/api/schedule/schedule.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                executionTime\n                            \n                            \n                                trainingTime\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTournamentDay\n                            \n                            \n                                isNewDay\n                            \n                            \n                                startTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/api/schedule/schedule.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTournamentDay\n                        \n                        \n                    \n                \n            \n            \n                \ngetTournamentDay(tournament: ITournament, nextTime: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/schedule/schedule.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournament\n                                    \n                                                ITournament\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nextTime\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNewDay\n                        \n                        \n                    \n                \n            \n            \n                \nisNewDay(tournament: ITournament, participant: ITeamInDiscipline, schedule: ITeamInDiscipline[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/schedule/schedule.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournament\n                                    \n                                                ITournament\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    participant\n                                    \n                                                ITeamInDiscipline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schedule\n                                    \n                                            ITeamInDiscipline[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startTime\n                        \n                        \n                    \n                \n            \n            \n                \nstartTime(tournament: ITournament, participant: ITeamInDiscipline, schedule: ITeamInDiscipline[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/schedule/schedule.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournament\n                                    \n                                                ITournament\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    participant\n                                    \n                                                ITeamInDiscipline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schedule\n                                    \n                                            ITeamInDiscipline[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            executionTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/api/schedule/schedule.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trainingTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/api/schedule/schedule.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/schedule'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/api/schedule/schedule.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport * as moment from 'moment';\n\nimport { Logger } from 'app/shared/services';\n\nimport { ConfigurationService } from '../configuration/configuration.service';\nimport { ITeamInDiscipline, ITournament, ParticipationType } from 'app/model';\nimport { CommonService } from '../../common.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ScheduleService {\n  url = '/api/schedule';\n  executionTime: number;\n  trainingTime: number;\n\n\n  constructor(private configService: ConfigurationService) {\n    this.configService.getByname('scheduleExecutionTime').subscribe(exec => this.executionTime = +exec.value);\n    this.configService.getByname('scheduleTrainingTime').subscribe(exec => this.trainingTime = +exec.value);\n  }\n\n  /**\n   *\n   */\n  startTime(tournament: ITournament, participant: ITeamInDiscipline, schedule: ITeamInDiscipline[]): Date {\n    // Check if we allready have a time to return\n    if (participant.startTime) { return participant.startTime; }\n    if (participant.calculatedStartTime) { return participant.calculatedStartTime.toDate(); }\n\n    // Calculate start time for this participant\n    const type = participant.type === ParticipationType.Training && tournament.times[0].train ? 'train' : 'time';\n    const startTime = moment(tournament.startDate).hour(+tournament.times[0][type].split(',')[0]).minute(0);\n    const idx = schedule.findIndex(s => s.id === participant.id);\n    const lastTime = idx === 0 || schedule[idx - 1].type !== participant.type ? null : (schedule[idx - 1].startTime ? schedule[idx - 1].startTime : schedule[idx - 1].calculatedStartTime);\n    const addTime = (participant.type === ParticipationType.Live ? this.executionTime : this.trainingTime);\n    const nextTime = lastTime ? moment(lastTime).clone().add(addTime, 'minutes') : startTime;\n\n    // Usually this is enough, but we have to check if this tournament spans more days and set time appropriately.\n    if (tournament.times.length > 1) {\n      const currentDay = this.getTournamentDay(tournament, nextTime);\n      const endTime = moment(tournament.startDate).hour(+tournament.times[currentDay][type].split(',')[1]);\n      if (nextTime.diff(endTime, 'minutes') > 0) {\n        // We have exceeded the timeslots for this day. Move on to next day.\n        nextTime.add(1, 'day').hour(+tournament.times[this.getTournamentDay(tournament, nextTime) + 1][type].split(',')[0]).minute(0);\n      }\n    }\n\n    // Return calculated starttime\n    participant.calculatedStartTime = nextTime;\n    return participant.calculatedStartTime.toDate();\n  }\n\n  getTournamentDay(tournament: ITournament, nextTime: moment.Moment): number {\n    if (tournament.times.length === 1) { return 0; }\n    const startTime = moment(tournament.startDate).hour(+tournament.times[0].time.split(',')[0]);\n    return nextTime.diff(startTime, 'days');\n  }\n\n  /**\n   *\n   */\n  isNewDay(tournament: ITournament, participant: ITeamInDiscipline, schedule: ITeamInDiscipline[]): boolean {\n    if (tournament.times.length > 1) {\n      const nextTime = moment(this.startTime(tournament, participant, schedule));\n      const currentDay = this.getTournamentDay(tournament, nextTime);\n      const endTime = moment(tournament.startDate).hour(+tournament.times[currentDay].time.split(',')[1]);\n      return nextTime.diff(endTime, 'minutes') > 0;\n    }\n    return false;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScoreContainer.html":{"url":"classes/ScoreContainer.html","title":"class - ScoreContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScoreContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/views/event/list/IScoreContainer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IScoreContainer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                scoreGroup\n                            \n                            \n                                    Public\n                                scoreGroupId\n                            \n                            \n                                    Public\n                                scores\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    total\n                                \n                                \n                                    avg\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scoreGroupId: number, scoreGroup: IScoreGroup, scores: IScore[])\n                    \n                \n                        \n                            \n                                Defined in src/app/views/event/list/IScoreContainer.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scoreGroupId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scoreGroup\n                                                  \n                                                        \n                                                                        IScoreGroup\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scores\n                                                  \n                                                        \n                                                                        IScore[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            scoreGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IScoreGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/list/IScoreContainer.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            scoreGroupId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/list/IScoreContainer.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            scores\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IScore[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/list/IScoreContainer.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        total\n                    \n                \n\n                \n                    \n                        gettotal()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/list/IScoreContainer.ts:13\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        avg\n                    \n                \n\n                \n                    \n                        getavg()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/list/IScoreContainer.ts:16\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { IScoreGroup, IScore } from 'app/model';\n\nexport interface IScoreContainer {\n  // group: IScoreGroup;\n  scoreGroupId: number;\n  scoreGroup: IScoreGroup;\n  scores: IScore[];\n  avg?: number;\n  total?: number;\n}\n\nexport class ScoreContainer implements IScoreContainer {\n  get total(): number {\n    return this.scores.reduce((prev, curr) => prev += curr.value, 0);\n  }\n  get avg(): number {\n    return this.total / this.scores.length;\n  }\n  constructor(public scoreGroupId: number, public scoreGroup: IScoreGroup, public scores: IScore[]) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreEditorComponent.html":{"url":"components/ScoreEditorComponent.html","title":"component - ScoreEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScoreEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/event/list/score-editor/score-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-score-editor\n            \n\n            \n                styleUrls\n                ./score-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./score-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                classes\n                            \n                            \n                                currentUser\n                            \n                            \n                                groupedScores\n                            \n                            \n                                roles\n                            \n                            \n                                scoreGroups\n                            \n                            \n                                scoreQuery\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onClose\n                            \n                            \n                                rollback\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                participant\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:keydown\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    grandTotal\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elm: ElementRef, graph: GraphService, userService: UserService, dom)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/event/list/score-editor/score-editor.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elm\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dom\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        participant\n                    \n                \n                \n                    \n                        Type :         ITeamInDiscipline\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:24\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:keydown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:keydown(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:163\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose(res?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rollback\n                        \n                        \n                    \n                \n            \n            \n                \nrollback()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Classes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupedScores\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ScoreContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Role\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreGroups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IScoreGroup[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `{id,participantId,value,judgeIndex,scoreGroupId,scoreGroup{id,name,type}}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        grandTotal\n                    \n                \n\n                \n                    \n                        getgrandTotal()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/list/score-editor/score-editor.component.ts:34\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, OnDestroy, HostListener, ElementRef, AfterViewInit, Inject } from '@angular/core';\nimport { ITeamInDiscipline, IUser, Role, IScore, Operation, IScoreGroup, Classes } from 'app/model';\nimport { ScoreContainer } from 'app/views/event/list/IScoreContainer';\nimport { Subscription } from 'rxjs';\nimport { clone } from 'lodash';\n\nimport { UserService } from 'app/shared/services/api';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { BrowserService } from 'app/shared/browser.service';\nimport { CommonService } from 'app/shared/services/common.service';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n *\n */\n@Component({\n  selector: 'app-score-editor',\n  templateUrl: './score-editor.component.html',\n  styleUrls: ['./score-editor.component.scss']\n})\nexport class ScoreEditorComponent implements OnInit, AfterViewInit, OnDestroy {\n  scoreQuery = `{id,participantId,value,judgeIndex,scoreGroupId,scoreGroup{id,name,type}}`;\n  @Input() participant: ITeamInDiscipline;\n  @Output() close: EventEmitter = new EventEmitter();\n\n  roles = Role;\n  classes = Classes;\n  currentUser: IUser;\n  scoreGroups: IScoreGroup[];\n\n  groupedScores: ScoreContainer[];\n  subscriptions: Subscription[] = [];\n\n  get grandTotal() {\n    return this.groupedScores ? this.groupedScores.reduce((prev: number, container: ScoreContainer) => {\n      return prev = (container.scoreGroup.operation === Operation.Addition)\n        ? prev + container.avg\n        : prev - container.avg;\n    }, 0) : this.participant.total;\n  }\n\n  /**\n   *\n   */\n  constructor(\n    private elm: ElementRef,\n    private graph: GraphService,\n    private userService: UserService,\n    @Inject(DOCUMENT) private dom\n  ) { }\n\n  /**\n   *\n   */\n  ngOnInit() {\n    this.subscriptions.push(this.userService.getMe().subscribe(user => this.currentUser = user));\n    this.graph.getData(`{\n      getScoreGroups(disciplineId:${this.participant.disciplineId}){id,name,type,operation,judgeCount,max,min},\n      getScores(participantId:${this.participant.id})${this.scoreQuery}\n    }`)\n      .subscribe(res => {\n        this.scoreGroups = res.getScoreGroups;\n        this.participant.scores = res.getScores.map(s => {\n          s.scoreGroup = this.scoreGroups.find(g => g.id === s.scoreGroupId); return s;\n        });\n        if (!this.participant.scores.length) {\n          // Empty score array. Create one score, per judge, per scoregroup\n          this.scoreGroups.forEach(group => {\n            for (let j = 0; j { participantId: this.participant.id, scoreGroup: group, scoreGroupId: group.id, value: 0, judgeIndex: j + 1 });\n            }\n          });\n        }\n\n        // Group scores per score group\n        this.groupedScores = this.scoreGroups.map(group => {\n          return new ScoreContainer(group.id, group, this.participant.scores // Create a container for the scores\n            .filter(s => s.scoreGroupId === group.id)              // ... grouped by scoregroup\n            .sort((a, b) => a.judgeIndex  clone(s))                                  // Apply using a copy so we can cancel the edit.\n          );\n        });\n      });\n  }\n\n  ngAfterViewInit() {\n    const rect: DOMRect = this.elm.nativeElement.getBoundingClientRect();\n    if (rect.top > this.dom.documentElement.clientHeight || rect.top  s ? s.unsubscribe() : null);\n  }\n\n  /**\n   *\n   */\n  onClose(res?) {\n    this.close.emit(res);\n  }\n\n  /**\n   *\n   */\n  save() {\n    // Write back copy\n    const scores = this.groupedScores.reduce((prev, curr) => prev.concat(curr.scores.map(s => CommonService.omit(s, ['scoreGroup']))), []);\n    this.graph.saveData(`Score`, scores, this.scoreQuery).subscribe(res => {\n      this.onClose(res.saveScores);\n    });\n  }\n\n  /**\n   *\n   */\n  delete() {\n    if (this.currentUser.role >= Role.Organizer || this.participant.publishTime == null) {\n      this.participant.scores = [];\n      this.graph.deleteData('Score', this.participant.id).subscribe(() => this.onClose());\n    }\n  }\n\n  /**\n   *\n   */\n  rollback() {\n    if (this.currentUser.role >= Role.Organizer) {\n      this.graph.post(`{rollback(participantId: ${this.participant.id})}`).subscribe(() => this.close.emit('rollback'));\n    }\n  }\n\n  /**\n   *\n   */\n  onBlur(event: Event) {\n    // tslint:disable-next-line:deprecation\n    const identifier = (event.target).id.split('_');\n    const group = this.groupedScores.find(g => g.scoreGroup.type === identifier[1]);\n    const score = group.scores.find(s => s.judgeIndex === +identifier[2]);\n\n    if (group.total > 0 && score.value === 0 && score.judgeIndex > 0) {\n      // Check previous and copy (0 is not allowed)\n      const prev = group.scores.find(s => s.judgeIndex === score.judgeIndex - 1);\n      if (prev) { score.value = prev.value; }\n    }\n    const fixedVal = (Math.ceil(score.value * 20) / 20).toFixed(2);\n    score.value = parseFloat(fixedVal);\n  }\n\n  /**\n   *\n   */\n  @HostListener('window:keydown', ['$event'])\n  onKeydown(event: KeyboardEvent) {\n    if (event.key === 'Escape' || event.key === 'Esc') {\n      this.onClose();\n    }\n    if (event.ctrlKey) {\n      switch (event.key) {\n        case 'ArrowLeft': if (event.ctrlKey) { this.close.emit('previous') } break;\n        case 'ArrowRight': if (event.ctrlKey) { this.close.emit('next') } break;\n      }\n    }\n\n    // Only applicable when focus is on the input fields\n    // tslint:disable-next-line:deprecation\n    if ((event.target).nodeName === 'INPUT') {\n      // tslint:disable-next-line:deprecation\n      const identifier = (event.target).id.split('_');\n      const group = this.groupedScores.find(g => g.scoreGroup.type === identifier[1]);\n      const score = group.scores.find(s => s.judgeIndex === +identifier[2]);\n      const min = score.scoreGroup.min;\n      const max = score.scoreGroup.max;\n      switch (event.key) {\n        // Page down should decrease with one full point\n        case 'PageDown': score.value -= (score.value > min) ? 1 : 0; event.preventDefault(); break;\n\n        // Page up should increase with one full point\n        case 'PageUp': score.value += (score.value  max) { score.value = max; }\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      #{{ participant.startNumber + 1 }}\n      \n        {{ participant.team.name }} - {{ participant.disciplineName}}\n      \n     -->\n\n    \n      \n        \n        \n          #{{ participant.startNumber + 1 }}\n          {{ participant.startTime | date:'HH:mm' }}\n          {{ participant.team.name }}\n          TG: {{\n            participant.divisionName }}\n          \n            {{ participant.disciplineName }}\n          {{ grandTotal | number:'1.3-3' }}\n        \n\n        \n        \n          {{ participant.startTime | date:'HH:mm' }}\n          \n            \n              \n              {{ participant.disciplineName }}\n              -\n              {{ participant.divisionName }}\n            \n          \n        \n      \n    \n\n    \n      \n        \n          \n            \n              {{ group.scoreGroup.name }}\n            \n            \n              \n                {{group.scoreGroup.type}}{{score.judgeIndex}}\n              \n              \n            \n\n            \n              Calculated: \n              {{ group.avg || 0 | number:'1.2-2' }}&nbsp;\n            \n          \n\n          \n            Final score\n            \n              \n                {{ type.scoreGroup.type }} : \n                {{ type.scoreGroup.name }}\n                  [{{ type.scoreGroup.type }}]:\n                \n              \n              {{ type.avg || 0 | number:'1.2-2' }}&nbsp;\n            \n            \n              \n                F:\n                Final score:\n              \n              {{ grandTotal | number:'1.3-3' }}\n            \n          \n        \n      \n    \n\n    \n      \n      \n        \n        Cancel\n        Close\n      \n      = roles.Organizer\" type=\"button\" [title]=\"'Delete' | translate\"\n              class=\"pull-right mat-warn\" (click)=\"delete()\" aria-label=\"Delete\">\n        \n        Delete\n        Empty scores\n        Allready published!\n      \n      = roles.Organizer\" type=\"button\" [title]=\"'Rollback' | translate\"\n              class=\"pull-right mat-warn\" (click)=\"rollback()\" aria-label=\"Rollback\">\n        \n        Rollback\n      \n      \n        Allready published!\n      \n    \n  \n  {{ form.isDirty }}\n\n\n    \n\n    \n                \n                    ./score-editor.component.scss\n                \n                @import \"../../../../../styles/variables\";\n@import '~@angular/material/theming';\n\n\n:host {\n  cursor: auto;\n  position: absolute;\n  left: 16px;\n  right: 16px;\n  &:hover table[role=\"list\"] tbody[role=\"listitem\"] td {\n    cursor: auto;\n    background: transparent !important;\n  }\n}\n.overlay {\n  display: block;\n  position: fixed;\n  background: rgba(0,0,0,0.35);\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 10;\n}\nform {\n  position: relative;\n  z-index: 20;\n}\n.mat-card {\n  margin: 0 -12px;\n  > table {\n    margin: -20px -6px 0;\n    width: -webkit-fill-available;\n    width: stretch;\n    td.score      { width: 1rem;  }\n    td.discipline { width: 22.2%; }\n    td.division   { width: 25%; }\n    td.team \t    { width: 21.7%; }\n    td.start-time { width: 10.4%; }\n    td.start-no\t  { width: 10.4%; }\n    td.actions    { max-width: 40px; width: 40px;}\n  }\n  @media (min-width: $stop1) {\n    margin: 0 -24px;\n    padding: 20px 30px;\n  }\n  .mat-card-avatar {\n    padding-top: 2px;\n    padding-left: 7px;\n  }\n  // Group sections\n  app-score-group,\n  section {\n    @include mat-elevation(2);\n    background: #ececec;\n    white-space: nowrap;\n    margin: 0 $margin $margin 0;\n    display: table-cell;\n    padding: $padding $padding 2.3rem $padding;\n    overflow: hidden;\n    text-align: center;\n    position: relative;\n    border-radius: 4px;\n    height: 130px;\n    background-image: radial-gradient(ellipse at 50% 0px, white 10%, transparent 70%);\n    @media (max-width: $stop1) {\n      float: left;\n      width: calc(50% - 3px);\n      &:nth-of-type(2n) {\n        margin-right: 0;\n      }\n    }\n    @media (max-width: $stop2) {\n      width: 100%;\n    }\n    header {\n      font-weight: bold;\n      margin: $negPad $negPad 0 $negPad;\n      padding: $padding;\n      color: rgba(black, 0.7);\n    }\n    footer {\n      padding: 0.2rem $padding 0 $padding;\n      border-top: 1px solid #ddd;\n      text-align: left;\n      box-shadow: 0 3px 22px -7px rgba(black, 0.5) inset;\n      height: 1.7rem;\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      display: flex;\n      color: white;\n      background: $primary;\n      span {\n        flex: 1;\n        font-style: oblique;\n        font-weight: bold;\n        @media (max-width: $stop1) {\n          display: inline;\n        }\n      }\n    }\n  }\n  // Final score box\n  section.final {\n    text-align: left;\n    footer {\n      padding: $padding ($padding * 2);\n    }\n    > div {\n      display: flex;\n      &:hover {\n        background-color: rgba(black, 0.1);\n        cursor: pointer;\n      }\n      span {\n        flex: 1;\n      }\n    }\n    label {\n      margin: 0;\n      small {\n        position: absolute;\n        left: 6rem;\n      }\n      &.small {\n        display: none;\n      }\n    }\n    @media (max-width: $stop1) {\n      width: 100%;\n      label {\n        &.small {\n          display: inline-block;\n        }\n        &.large {\n          display: none;\n        }\n      }\n    }\n    footer {\n      font-weight: bold;\n    }\n  }\n  // Avg or total score numbers\n  code {\n    font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace;\n    float: right;\n    font-size: 0.86rem;\n    vertical-align: bottom;\n  }\n}\n\nheader>h3 {\n  margin: 12px 24px;\n}\n\nform>footer>div.warning {\n  line-height: 40px;\n}\n.score-field {\n  padding: 0.2rem;\n  display: inline-block;\n  max-width: 3.5rem;\n  > label {\n    cursor: text;\n    height: $labelHeight;\n    font-size: 0.8rem;\n    display: inline-block;\n    padding: 0.1rem 0 0 $margin;\n    margin-top: $margin * 2;\n    &:first-of-type {\n      margin-top: 0;\n    }\n  }\n  > input {\n    display: block;\n    background: transparent;\n    border: 0;\n    border-bottom: 1px solid rgba(black, 0.4);\n    padding: ($padding * 2) $padding;\n    min-height: $inputHeight;\n    outline: none;\n    margin: 2px;\n    width: 100%;\n    &:focus,\n    &:active {\n      border-color: rgba($primaryDark, 0.8);\n      box-shadow: 0 -2px 2px -2px rgba($primary, 0.6) inset;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            #{{ participant.startNumber + 1 }}              {{ participant.team.name }} - {{ participant.disciplineName}}           -->                                    #{{ participant.startNumber + 1 }}          {{ participant.startTime | date:\\'HH:mm\\' }}          {{ participant.team.name }}          TG: {{            participant.divisionName }}                      {{ participant.disciplineName }}          {{ grandTotal | number:\\'1.3-3\\' }}                                  {{ participant.startTime | date:\\'HH:mm\\' }}                                                  {{ participant.disciplineName }}              -              {{ participant.divisionName }}                                                                                              {{ group.scoreGroup.name }}                                                      {{group.scoreGroup.type}}{{score.judgeIndex}}                                                                  Calculated:               {{ group.avg || 0 | number:\\'1.2-2\\' }}                                             Final score                                          {{ type.scoreGroup.type }} :                 {{ type.scoreGroup.name }}                  [{{ type.scoreGroup.type }}]:                                            {{ type.avg || 0 | number:\\'1.2-2\\' }}                                                       F:                Final score:                            {{ grandTotal | number:\\'1.3-3\\' }}                                                                        Cancel        Close            = roles.Organizer\" type=\"button\" [title]=\"\\'Delete\\' | translate\"              class=\"pull-right mat-warn\" (click)=\"delete()\" aria-label=\"Delete\">                Delete        Empty scores        Allready published!            = roles.Organizer\" type=\"button\" [title]=\"\\'Rollback\\' | translate\"              class=\"pull-right mat-warn\" (click)=\"rollback()\" aria-label=\"Rollback\">                Rollback                    Allready published!              {{ form.isDirty }}'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScoreEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreGroupEditorComponent.html":{"url":"components/ScoreGroupEditorComponent.html","title":"component - ScoreGroupEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScoreGroupEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-score-group-editor\n            \n\n            \n                styleUrls\n                ./score-group-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./score-group-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredJudgeList\n                            \n                            \n                                judgeForm\n                            \n                            \n                                judgeList\n                            \n                            \n                                operations\n                            \n                            \n                                scoreForm\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addJudge\n                            \n                            \n                                addJudge\n                            \n                            \n                                close\n                            \n                            \n                                delete\n                            \n                            \n                                getScoreGroupFromForm\n                            \n                            \n                                judgeDisplay\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeJudge\n                            \n                            \n                                save\n                            \n                            \n                                setSelectedJudge\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                discipline\n                            \n                            \n                                scoreGroup\n                            \n                            \n                                standalone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                scoreChanged\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Adds\n                                \n                                \n                                    Subtracts\n                                \n                                \n                                    judges\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, graph: GraphService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        discipline\n                    \n                \n                \n                    \n                        Type :         IDiscipline\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scoreGroup\n                    \n                \n                \n                    \n                        Type :         IScoreGroup\n\n                    \n                \n                \n                    \n                        Default value : { operation: Operation.Addition }\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        standalone\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        scoreChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:20\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:114\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _addJudge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _addJudge(judge: IJudge)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    judge\n                                    \n                                                IJudge\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addJudge\n                        \n                        \n                    \n                \n            \n            \n                \naddJudge()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScoreGroupFromForm\n                        \n                        \n                    \n                \n            \n            \n                \ngetScoreGroupFromForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IScoreGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            judgeDisplay\n                        \n                        \n                    \n                \n            \n            \n                \njudgeDisplay(judge: IJudge)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    judge\n                                    \n                                                IJudge\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeJudge\n                        \n                        \n                    \n                \n            \n            \n                \nremoveJudge(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedJudge\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedJudge($event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredJudgeList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IJudge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            judgeForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            judgeList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IJudge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            operations\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Operation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Adds\n                    \n                \n\n                \n                    \n                        getAdds()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Subtracts\n                    \n                \n\n                \n                    \n                        getSubtracts()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        judges\n                    \n                \n\n                \n                    \n                        getjudges()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts:125\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, EventEmitter, Output, Input, HostListener } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { IDiscipline, IScoreGroup, Operation, IJudge } from 'app/model';\nimport { MatAutocompleteSelectedEvent } from '@angular/material';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged, debounceTime } from 'rxjs/operators';\nimport { GraphService } from 'app/shared/services/graph.service';\n\n@Component({\n  selector: 'app-score-group-editor',\n  templateUrl: './score-group-editor.component.html',\n  styleUrls: ['./score-group-editor.component.scss']\n})\nexport class ScoreGroupEditorComponent implements OnInit {\n  @Input() standalone = false;\n  @Input() scoreGroup: IScoreGroup = { operation: Operation.Addition };\n  @Input() discipline: IDiscipline;\n  @Output() scoreChanged: EventEmitter = new EventEmitter();\n\n  scoreForm: FormGroup;\n  operations = Operation;\n\n  judgeForm: FormGroup;\n  judgeList: IJudge[] = [];\n  filteredJudgeList: IJudge[] = [];\n\n  subscriptions: Subscription[] = [];\n\n  get Adds(): string { return this.translate.instant('Adds'); }\n  get Subtracts(): string { return this.translate.instant('Subtracts'); }\n\n  constructor(\n    private fb: FormBuilder,\n    private readonly graph: GraphService,\n    private translate: TranslateService) { }\n\n  ngOnInit() {\n    // Create form\n    this.scoreForm = this.fb.group({\n      id: [this.scoreGroup.id],\n      name: [this.scoreGroup.name, [Validators.required]],\n      judges: this.fb.array([]),\n      max: [this.scoreGroup.max],\n      min: [this.scoreGroup.min],\n      type: [this.scoreGroup.type, [Validators.required]],\n      operation: [this.scoreGroup.operation],\n      disciplineId: [this.discipline ? this.discipline.id : null]\n    });\n    if (this.discipline) {\n      const judgeArray = this.fb.array(this.scoreGroup.judges.map(judge => this.fb.group(judge)));\n      this.scoreForm.setControl('judges', judgeArray);\n    }\n\n    // Judge form\n    this.judgeForm = this.fb.group({\n      id: [null],\n      name: ['', [Validators.required]]\n    });\n    this.subscriptions.push(this.judgeForm.get('name').valueChanges.pipe(distinctUntilChanged(), debounceTime(200)).subscribe(v => {\n      if (v) {\n        this.filteredJudgeList = this.judgeList\n          .filter(j => j.name.toLowerCase().indexOf(v.toLowerCase()) > -1 && this.judges.value.findIndex(i => i.judge.id === j.id)  this.judgeList = res.getJudges);\n  }\n\n  getScoreGroupFromForm(): IScoreGroup {\n    const formVal = this.scoreForm.getRawValue();\n    const judgeInScoreGroup = formVal.judges.map((judge, i) => {\n      judge.scoreGroup = this.scoreGroup;\n      return judge;\n    });\n    return {\n      id: formVal.id,\n      name: formVal.name,\n      judges: judgeInScoreGroup,\n      max: formVal.max,\n      min: formVal.min,\n      type: formVal.type,\n      operation: formVal.operation,\n      disciplineId: this.discipline ? this.discipline.id : null\n    };\n  }\n\n  save() {\n    const val = this.getScoreGroupFromForm();\n    if (this.discipline) {\n      this.graph.saveData('ScoreGroup', val, `{id, name, min, max, judges{judgeId}, type, judgeCount, operation}`).subscribe(result => {\n        this.scoreChanged.emit(result.saveScoreGroup);\n      });\n    } else {\n      delete val.judges;\n      this.scoreChanged.emit(val);\n    }\n  }\n\n  delete() {\n    const val = this.getScoreGroupFromForm();\n    if (!this.standalone) {\n      this.graph.deleteData('ScoreGroup', val.id).subscribe(result => this.scoreChanged.emit(result));\n    } else {\n      this.scoreChanged.emit('DELETED');\n    }\n  }\n\n  close() {\n    this.scoreChanged.emit(this.scoreGroup);\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === 'Escape') {\n      this.close();\n      return;\n    }\n    if (this.judgeForm.value.name.length && evt.key === 'Enter') {\n      this.addJudge();\n    }\n  }\n\n  // JUDGE DATA -----------------\n  get judges(): FormArray {\n    return this.scoreForm.get('judges') as FormArray;\n  }\n\n  removeJudge(index: number) {\n    const judge = this.judges.value[index];\n    this.judges.removeAt(index);\n    this.scoreForm.markAsDirty();\n    this.graph.getData(`{deleteJudgeInScoreGroup(input{judgeId:${judge.id},scoreGroupId:${this.scoreGroup.id}}){}}`).subscribe();\n  }\n\n  addJudge() {\n    let newJudge = this.judgeForm.value;\n    if (!newJudge.id) {\n      const foundJudge = this.judgeList.find(j => j.name.toLowerCase().indexOf(newJudge.name.toLowerCase()) > -1);\n      newJudge = (foundJudge ? foundJudge : newJudge);\n    }\n\n    if (!newJudge.id) { // Completelly new judge. We need to store it to get an ID.\n      this.graph.saveData('Judge', newJudge, `{id,name}`).subscribe(result => this._addJudge(result.saveJudge));\n    } else { // Existing judge reused.\n      this._addJudge(newJudge);\n    }\n  }\n\n  private _addJudge(judge: IJudge) {\n    this.judges.push(this.fb.group({ judge: judge, sortNumber: this.judges.length }));\n    this.judgeForm.reset();\n    this.scoreForm.markAsDirty();\n  }\n\n  setSelectedJudge($event: MatAutocompleteSelectedEvent) {\n    const judge = $event.option.value;\n    this.judgeForm.setValue({\n      id: judge.id,\n      name: judge.name\n    });\n  }\n\n  judgeDisplay(judge: IJudge) {\n    return judge && judge.name ? judge.name : judge;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          Operation\n          \n            Addition\n            Subtraction\n          \n        \n      \n\n      \n        \n          \n        \n        \n          \n        \n      \n    \n\n    \n      {{ 'Judges' | translate }}\n\n      \n        \n          {{ judge.judge.name }}\n          \n        \n      \n      \n        \n          \n          \n            \n              {{ person.name }}\n            \n          \n        \n        \n          \n            \n            {{'Add' | translate}}\n          \n        \n      \n\n    \n\n    \n      \n       Cancel\n      \n         Delete\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./score-group-editor.component.scss\n                \n                // app-slide-toggle {\n//   margin-top: .5rem;\n//   display: flex;\n// }\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                  Operation                      Addition            Subtraction                                                                                                      {{ \\'Judges\\' | translate }}                        {{ judge.judge.name }}                                                                                    {{ person.name }}                                                                        {{\\'Add\\' | translate}}                                             Cancel               Delete            '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScoreGroupEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreSystemComponent.html":{"url":"components/ScoreSystemComponent.html","title":"component - ScoreSystemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScoreSystemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/tournament/score-system/score-system.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-score-system\n            \n\n            \n                styleUrls\n                ./score-system.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./score-system.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selected\n                            \n                            \n                                defaultScoreGroups\n                            \n                            \n                                scoreGroupQuery\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDefaults\n                            \n                            \n                                addScoreGroup\n                            \n                            \n                                drop\n                            \n                            \n                                findMissingDefaults\n                            \n                            \n                                loadScoreGroups\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                saveScoreGroups\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                discipline\n                            \n                            \n                                scoreGroupList\n                            \n                            \n                                standalone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                editModeChanged\n                            \n                            \n                                scoreGroupListChanged\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selected\n                                \n                                \n                                    canAddDefaults\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(graph: GraphService, configService: ConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        discipline\n                    \n                \n                \n                    \n                        Type :         IDiscipline\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scoreGroupList\n                    \n                \n                \n                    \n                        Type :     IScoreGroup[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        standalone\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        editModeChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scoreGroupListChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:20\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:137\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDefaults\n                        \n                        \n                    \n                \n            \n            \n                \naddDefaults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addScoreGroup\n                        \n                        \n                    \n                \n            \n            \n                \naddScoreGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \ndrop(event: CdkDragDrop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            CdkDragDrop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findMissingDefaults\n                        \n                        \n                    \n                \n            \n            \n                \nfindMissingDefaults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadScoreGroups\n                        \n                        \n                    \n                \n            \n            \n                \nloadScoreGroups()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(values)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveScoreGroups\n                        \n                        \n                    \n                \n            \n            \n                \nsaveScoreGroups()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            select\n                        \n                        \n                    \n                \n            \n            \n                \nselect(scoreGroup: IScoreGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scoreGroup\n                                    \n                                                IScoreGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IScoreGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultScoreGroups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IScoreGroup[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreGroupQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `{\n    id,\n    name,\n    type,\n    operation,\n    max,\n    min,\n    sortOrder,\n    judges{sortNumber,judge{id,name}},\n    judgeCount\n  }`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:38\n                                \n                            \n\n                \n                    \n                        setselected(scoreGroup)\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            scoreGroup\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        canAddDefaults\n                    \n                \n\n                \n                    \n                        getcanAddDefaults()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/tournament/score-system/score-system.component.ts:43\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { ConfigurationService } from 'app/shared/services/api';\nimport { IDiscipline, IScoreGroup, Operation } from 'app/model';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { Subscription } from 'rxjs';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { CommonService } from 'app/shared/services/common.service';\n\n@Component({\n  selector: 'app-score-system',\n  templateUrl: './score-system.component.html',\n  styleUrls: ['./score-system.component.scss']\n})\nexport class ScoreSystemComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() discipline: IDiscipline;\n  @Input() standalone = false;\n  @Output() editModeChanged: EventEmitter = new EventEmitter();\n  @Input() scoreGroupList: IScoreGroup[] = [];\n  @Output() scoreGroupListChanged = new EventEmitter();\n  scoreGroupQuery = `{\n    id,\n    name,\n    type,\n    operation,\n    max,\n    min,\n    sortOrder,\n    judges{sortNumber,judge{id,name}},\n    judgeCount\n  }`;\n\n  subscriptions: Subscription[] = [];\n\n  defaultScoreGroups: IScoreGroup[];\n\n  _selected: IScoreGroup;\n  get selected() { return this._selected; }\n  set selected(scoreGroup: IScoreGroup) {\n    this._selected = scoreGroup;\n    this.editModeChanged.emit(this._selected != null);\n  }\n  get canAddDefaults() { return this.findMissingDefaults().length; }\n\n  constructor(private graph: GraphService, private configService: ConfigurationService) { }\n\n  async ngOnInit() {\n    const config = await this.configService.getByname('defaultValues').toPromise();\n    this.defaultScoreGroups = (typeof config.value === 'string' ? JSON.parse(config.value) : config.value).scoreGroup;\n    if (!this.standalone) {\n      // Setup scoregroup list either from given Input, or from given discipline\n      this.loadScoreGroups();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.scoreGroupList && changes.scoreGroupList.currentValue) { }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s ? s.unsubscribe() : null);\n  }\n\n  drop(event: CdkDragDrop) {\n    moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    this.scoreGroupList.forEach((sg, idx) => (sg.sortOrder = idx));\n    this.saveScoreGroups();\n  }\n\n  saveScoreGroups() {\n    if (this.discipline) {\n      const scoreGroupList = this.scoreGroupList.map(s => {\n        s.disciplineId = this.discipline.id;\n        s.judges = s.judges.map(j => {\n          j.scoreGroupId = s.id;\n          return j;\n        });\n        return CommonService.omit(s, ['judgeCount', 'judges']);\n      })\n      this.graph.saveData('ScoreGroups', scoreGroupList, this.scoreGroupQuery).subscribe(res => this.scoreGroupList = res.saveScoreGroups);\n    }\n    this.scoreGroupListChanged.emit(this.scoreGroupList);\n  }\n\n  loadScoreGroups() {\n    if (this.discipline) {\n      this.graph.getData(`{\n        getScoreGroups(disciplineId:${this.discipline.id})${this.scoreGroupQuery}}`).subscribe(res => this.scoreGroupList = res.getScoreGroups);\n      // this.scoreService.getByDiscipline(this.discipline.id).subscribe(scoreGroups => this.scoreGroupList = scoreGroups);\n    }\n    this.scoreGroupListChanged.emit(this.scoreGroupList);\n  }\n\n  addScoreGroup() {\n    const scoreGroup = (this.standalone\n      ? { name: null, type: null, max: 5, min: 0, operation: Operation.Addition }\n      : { id: null, name: null, type: null, max: 5, min: 0, operation: Operation.Addition, disciplineId: this.discipline.id, judges: [] }\n    );\n    this.scoreGroupList.push(scoreGroup);\n    this.selected = scoreGroup;\n    this.scoreGroupListChanged.emit(this.scoreGroupList);\n  }\n\n  addDefaults() {\n    if (this.discipline && this.defaultScoreGroups) {\n      const scoreGroupList = this.findMissingDefaults().map(group => {\n        group.discipline = this.discipline;\n        return group;\n      });\n      this.graph.saveData('ScoreGroups', scoreGroupList, this.scoreGroupQuery).subscribe(res => this.loadScoreGroups());\n      // this.scoreService.saveAll(scoreGroupList).subscribe(result => this.loadScoreGroups());\n    }\n  }\n\n  findMissingDefaults() {\n    if (this.discipline && this.defaultScoreGroups && this.defaultScoreGroups.length) {\n      return this.defaultScoreGroups.filter(def => this.scoreGroupList.findIndex(d => d.name === def.name)  this.selected[k] = values[k]);\n    } else {\n      this.scoreGroupList.splice(this.scoreGroupList.findIndex(d => d.type === this.selected.type), 1);\n    }\n    this.select(null);\n    setTimeout(() => this.loadScoreGroups());\n  }\n\n  select(scoreGroup: IScoreGroup) {\n    this.selected = scoreGroup;\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === '+' || evt.key === 'NumpadAdd') {\n      this.addScoreGroup();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Name\n        Type\n        Judges\n        Max\n        Min\n      \n    \n    \n      \n        {{ score.name }}\n        {{ score.type}}\n        {{ score.judgeCount }}\n        {{ score.max}}\n        {{ score.min}}\n      \n      \n        \n          \n          \n        \n      \n    \n  \n\n\n\n  \n  Add ScoreGroup\n\n\n  \n  Add Default ScoreGroups\n\n\n    \n\n    \n                \n                    ./score-system.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Name        Type        Judges        Max        Min                            {{ score.name }}        {{ score.type}}        {{ score.judgeCount }}        {{ score.max}}        {{ score.min}}                                                                Add ScoreGroup    Add Default ScoreGroups'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScoreSystemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScoreSystemModule.html":{"url":"modules/ScoreSystemModule.html","title":"module - ScoreSystemModule","body":"\n                   \n\n\n\n\n    Modules\n    ScoreSystemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScoreSystemModule\n\n\n\ncluster_ScoreSystemModule_declarations\n\n\n\ncluster_ScoreSystemModule_imports\n\n\n\ncluster_ScoreSystemModule_exports\n\n\n\n\nScoreGroupEditorComponent\n\nScoreGroupEditorComponent\n\n\n\nScoreSystemModule\n\nScoreSystemModule\n\nScoreSystemModule -->\n\nScoreGroupEditorComponent->ScoreSystemModule\n\n\n\n\n\nScoreSystemComponent\n\nScoreSystemComponent\n\nScoreSystemModule -->\n\nScoreSystemComponent->ScoreSystemModule\n\n\n\n\n\nScoreGroupEditorComponent \n\nScoreGroupEditorComponent \n\nScoreGroupEditorComponent  -->\n\nScoreSystemModule->ScoreGroupEditorComponent \n\n\n\n\n\nScoreSystemComponent \n\nScoreSystemComponent \n\nScoreSystemComponent  -->\n\nScoreSystemModule->ScoreSystemComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nScoreSystemModule -->\n\nSharedModule->ScoreSystemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/configure/tournament/score-system/score-system.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ScoreGroupEditorComponent\n                        \n                        \n                            ScoreSystemComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ScoreGroupEditorComponent\n                        \n                        \n                            ScoreSystemComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport { ScoreSystemComponent } from './score-system.component';\nimport { ScoreGroupEditorComponent } from './score-group-editor/score-group-editor.component';\nimport { MatCardModule, MatFormFieldModule, MatInputModule, MatSlideToggleModule, MatButtonModule, MatAutocompleteModule, MatListModule } from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n\n    DragDropModule,\n    MatListModule,\n    MatAutocompleteModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n\n    SharedModule\n  ],\n  declarations: [\n    ScoreSystemComponent, ScoreGroupEditorComponent,\n  ],\n  exports: [\n    ScoreSystemComponent, ScoreGroupEditorComponent,\n  ]\n})\nexport class ScoreSystemModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScorecardsComponent.html":{"url":"components/ScorecardsComponent.html","title":"component - ScorecardsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScorecardsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/tournament/scorecards/scorecards.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scorecards\n            \n\n            \n                styleUrls\n                ./scorecards.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scorecards.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disciplines\n                            \n                            \n                                schedule\n                            \n                            \n                                subscriptions\n                            \n                            \n                                tournamentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createCard\n                            \n                            \n                                judges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRenderComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, parent: TournamentEditorComponent, graph: GraphService, browser: BrowserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/tournament/scorecards/scorecards.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        TournamentEditorComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        browser\n                                                  \n                                                        \n                                                                        BrowserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createCard\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCard(judge: IJudge, judgeIndex: number, scheduleItem: ITeamInDiscipline, scoreGroup: IScoreGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/scorecards/scorecards.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    judge\n                                    \n                                                IJudge\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    judgeIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scheduleItem\n                                    \n                                                ITeamInDiscipline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scoreGroup\n                                    \n                                                IScoreGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { summary: boolean; name: any; startNo: any; club: any; division: any; discipline: any; type: {};...\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            judges\n                        \n                        \n                    \n                \n            \n            \n                \njudges(scheduleItem: ITeamInDiscipline)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/scorecards/scorecards.component.ts:76\n                \n            \n\n\n            \n                \n                    Create data for 1 card per judge for the given scheduled troop performance,\nand 1 summary card to be distributed to the secretariat.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scheduleItem\n                                    \n                                                ITeamInDiscipline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/scorecards/scorecards.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/scorecards/scorecards.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRenderComplete\n                        \n                        \n                    \n                \n            \n            \n                \nonRenderComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/scorecards/scorecards.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disciplines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDiscipline[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/scorecards/scorecards.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schedule\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ITeamInDiscipline[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/scorecards/scorecards.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/scorecards/scorecards.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/scorecards/scorecards.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { TournamentEditorComponent } from '../tournament-editor/tournament-editor.component';\n\nimport { ITeamInDiscipline, DivisionType, Operation, IJudge, IScoreGroup, IDiscipline, ParticipationType } from 'app/model';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { BrowserService } from 'app/shared/browser.service';\n\n@Component({\n  selector: 'app-scorecards',\n  templateUrl: './scorecards.component.html',\n  styleUrls: ['./scorecards.component.scss']\n})\nexport class ScorecardsComponent implements OnInit, OnDestroy {\n\n  tournamentId: number;\n  schedule: ITeamInDiscipline[] = [];\n  disciplines: IDiscipline[] = [];\n  subscriptions: Subscription[] = [];\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private parent: TournamentEditorComponent,\n    private graph: GraphService,\n    private browser: BrowserService\n  ) { }\n\n  ngOnInit() {\n    this.tournamentId = this.parent.tournamentId;\n    if (this.tournamentId) {\n      this.graph.getData(`{\n        getDisciplines(tournamentId:${this.tournamentId}){id,scoreGroups{id,name,type,operation,judges{sortNumber,judge{id,name}}}},\n        getSchedule(tournamentId:${this.tournamentId},type:${ParticipationType.Live},scorable:true){\n          id,\n          sortNumber,\n          startNumber,\n          type,\n          disciplineId,\n          disciplineName,\n          team{id,name,class},\n          divisionName\n        }\n      }`).subscribe(res => {\n        this.disciplines = res.getDisciplines;\n        this.schedule = res.getSchedule.sort((a, b) => {\n          if (a.disciplineSortOrder !== b.disciplineSortOrder) {\n            return a.disciplineSortOrder > b.disciplineSortOrder ? 1 : -1;\n          }\n          return a.sortNumber > b.sortNumber ? 1 : -1;\n        });\n        this.onRenderComplete();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n  }\n\n  /**\n   *\n   */\n  onRenderComplete() {\n    setTimeout(() => {\n      this.browser.window().print();\n      this.router.navigate(['../'], { relativeTo: this.route });\n    });\n  }\n\n  /**\n   * Create data for 1 card per judge for the given scheduled troop performance,\n   * and 1 summary card to be distributed to the secretariat.\n   */\n  judges(scheduleItem: ITeamInDiscipline) {\n    const discipline = this.disciplines.find(d => d.id === scheduleItem.disciplineId);\n    const cards = discipline.scoreGroups\n      .filter(g => g.operation === Operation.Addition)\n      .reduce((scoreCards, scoreGroup) => {\n        scoreGroup.judges\n          .sort((a, b) => a.sortNumber  {\n            const prevCard = scoreCards.find(card => card.name === judge.judge.name);\n            if (prevCard) {\n              prevCard.type.push({ name: scoreGroup.type + (j + 1) });\n              prevCard.scoreType = prevCard.scoreType + scoreGroup.type;\n            } else {\n              scoreCards.push(this.createCard(judge.judge, j, scheduleItem, scoreGroup));\n            }\n          });\n        return scoreCards;\n      }, []);\n\n    // Create the summary card\n    const mainJudge = cards.find(c => c.type[0].name === 'E1');\n    if (mainJudge) {\n      const types = discipline.scoreGroups.map(g => ({ name: g.type, op: g.operation === Operation.Addition }));\n      cards.push({\n        summary: true,\n        name: mainJudge.name,\n        startNo: scheduleItem.startNumber + 1,\n        club: scheduleItem.team.name,\n        division: scheduleItem.divisionName,\n        discipline: scheduleItem.disciplineName,\n        type: types,\n        scoreType: types.map(t => t.name).join('')\n      });\n    }\n    return cards;\n  }\n\n  /**\n   *\n   */\n  private createCard(judge: IJudge, judgeIndex: number, scheduleItem: ITeamInDiscipline, scoreGroup: IScoreGroup) {\n    return {\n      summary: false,\n      name: judge.name,\n      startNo: scheduleItem.startNumber + 1,\n      club: scheduleItem.team.name,\n      division: scheduleItem.divisionName,\n      discipline: scheduleItem.disciplineName,\n      type: [{ name: scoreGroup.type + (judgeIndex + 1) }],\n      scoreType: scoreGroup.type\n    };\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      {{ judge.division }} - {{ judge.discipline }}\n      {{ judge.startNo }}\n      {{ judge.club }}\n    \n\n    \n      \n        {{ type.name }} &nbsp;\n        &nbsp;\n      \n    \n\n    \n      \n        {{ type.name }} \n        &nbsp;\n        \n      \n    \n\n    \n      {{ judge.name }}\n      www.gymsystems.org\n      \n        \n          {{'Tot' | translate }}\n          &nbsp;\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./scorecards.component.scss\n                \n                @media print{@page {size: landscape}}\n\n\n:host {\n  display: block;\n  width: 21cm;\n}\nsection {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 2.5mm;\n  grid-auto-rows: minmax(70px, auto);\n  page-break-after: always;\n  -webkit-print-color-adjust: exact !important;\n  margin: 0.5cm;\n}\n\narticle {\n  min-height: 6.5cm;\n  border: 1px solid;\n  padding: 0 10px;\n  position: relative;\n  &[score-type=\"C\"] {\n    --background: #ffff9c;\n    background: var(--background);\n  }\n  &[score-type=\"D\"], &[score-type=\"CD\"] {\n    --background: #ffc9c9;\n    background: var(--background);\n  }\n  &[score-type=\"E\"] {\n    --background: white;\n    background: var(--background);\n  }\n  &[score-type^=\"CDE\"] {\n    --background: #ccffcc;\n    background: var(--background);\n  }\n}\n\nheader>div {\n  text-align: center;\n}\n\nh1 {\n  font-size: 2.5rem;\n  letter-spacing: -0.2rem;\n}\nh2 {\n  font-size: 1.7rem;\n  margin: 0 0 -8px;\n}\n\n.type {\n  flex: 1;\n  display: flex;\n  min-width: 2cm;\n  max-width: 4cm;\n  margin: 5px 0;\n  line-height: 1.1cm;\n  &.sub {\n    max-width: none;\n    // min-width: 100%;\n    font-size: 0.8em;\n  }\n  span {\n    display: inline-block;\n    vertical-align: middle;\n  }\n  .explain {\n    border-bottom: 1px solid;\n    flex: 1;\n  }\n  .box {\n    display: inline-block;\n    border: 4px solid;\n    max-width: 3cm;\n    min-width: 1cm;\n    max-height: 1.5cm;\n    flex: 1;\n  }\n}\n\n.main {\n  text-align: center;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  &.summary {\n    text-align: left;\n    justify-content: left;\n    .type {\n      line-height: 1.1cm;\n      &.sub {\n        line-height: 0.9cm;\n        .box {\n          border-width: 2px;\n        }\n      }\n    }\n    .box {\n      border-width: 3px;\n      max-width: 2cm;\n    }\n  }\n}\n\n\nfooter {\n  border-top: 1px solid;\n  border-top: 1px solid;\n  position: absolute;\n  bottom: 0.1cm;\n  left: 0.2cm;\n  right: 0.2cm;\n  height: 0.6cm;\n  small {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n  }\n  .type {\n    background: var(--background);\n    position: absolute;\n    bottom: 0.4cm;\n    right: 0;\n    width: 3.5cm;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ judge.division }} - {{ judge.discipline }}      {{ judge.startNo }}      {{ judge.club }}                      {{ type.name }}                                       {{ type.name }}                                      {{ judge.name }}      www.gymsystems.org                        {{\\'Tot\\' | translate }}                               '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScorecardsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nClubLookupComponent\n\nClubLookupComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nClubLookupComponent->SharedModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nSharedModule -->\n\nDialogComponent->SharedModule\n\n\n\n\n\nErrorDialogComponent\n\nErrorDialogComponent\n\nSharedModule -->\n\nErrorDialogComponent->SharedModule\n\n\n\n\n\nHelpBlockComponent\n\nHelpBlockComponent\n\nSharedModule -->\n\nHelpBlockComponent->SharedModule\n\n\n\n\n\nIfAuthDirective\n\nIfAuthDirective\n\nSharedModule -->\n\nIfAuthDirective->SharedModule\n\n\n\n\n\nLoadSpinnerComponent\n\nLoadSpinnerComponent\n\nSharedModule -->\n\nLoadSpinnerComponent->SharedModule\n\n\n\n\n\nMediaControlComponent\n\nMediaControlComponent\n\nSharedModule -->\n\nMediaControlComponent->SharedModule\n\n\n\n\n\nMultirangeComponent\n\nMultirangeComponent\n\nSharedModule -->\n\nMultirangeComponent->SharedModule\n\n\n\n\n\nOrderByPipe\n\nOrderByPipe\n\nSharedModule -->\n\nOrderByPipe->SharedModule\n\n\n\n\n\nSaveButtonComponent\n\nSaveButtonComponent\n\nSharedModule -->\n\nSaveButtonComponent->SharedModule\n\n\n\n\n\nToCaseDirective\n\nToCaseDirective\n\nSharedModule -->\n\nToCaseDirective->SharedModule\n\n\n\n\n\nUtcDatePipe\n\nUtcDatePipe\n\nSharedModule -->\n\nUtcDatePipe->SharedModule\n\n\n\n\n\nClubLookupComponent \n\nClubLookupComponent \n\nClubLookupComponent  -->\n\nSharedModule->ClubLookupComponent \n\n\n\n\n\nDialogComponent \n\nDialogComponent \n\nDialogComponent  -->\n\nSharedModule->DialogComponent \n\n\n\n\n\nErrorDialogComponent \n\nErrorDialogComponent \n\nErrorDialogComponent  -->\n\nSharedModule->ErrorDialogComponent \n\n\n\n\n\nHelpBlockComponent \n\nHelpBlockComponent \n\nHelpBlockComponent  -->\n\nSharedModule->HelpBlockComponent \n\n\n\n\n\nIfAuthDirective \n\nIfAuthDirective \n\nIfAuthDirective  -->\n\nSharedModule->IfAuthDirective \n\n\n\n\n\nLoadSpinnerComponent \n\nLoadSpinnerComponent \n\nLoadSpinnerComponent  -->\n\nSharedModule->LoadSpinnerComponent \n\n\n\n\n\nMediaControlComponent \n\nMediaControlComponent \n\nMediaControlComponent  -->\n\nSharedModule->MediaControlComponent \n\n\n\n\n\nMultirangeComponent \n\nMultirangeComponent \n\nMultirangeComponent  -->\n\nSharedModule->MultirangeComponent \n\n\n\n\n\nOrderByPipe \n\nOrderByPipe \n\nOrderByPipe  -->\n\nSharedModule->OrderByPipe \n\n\n\n\n\nSaveButtonComponent \n\nSaveButtonComponent \n\nSaveButtonComponent  -->\n\nSharedModule->SaveButtonComponent \n\n\n\n\n\nToCaseDirective \n\nToCaseDirective \n\nToCaseDirective  -->\n\nSharedModule->ToCaseDirective \n\n\n\n\n\nUtcDatePipe \n\nUtcDatePipe \n\nUtcDatePipe  -->\n\nSharedModule->UtcDatePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClubLookupComponent\n                        \n                        \n                            DialogComponent\n                        \n                        \n                            ErrorDialogComponent\n                        \n                        \n                            HelpBlockComponent\n                        \n                        \n                            IfAuthDirective\n                        \n                        \n                            LoadSpinnerComponent\n                        \n                        \n                            MediaControlComponent\n                        \n                        \n                            MultirangeComponent\n                        \n                        \n                            OrderByPipe\n                        \n                        \n                            SaveButtonComponent\n                        \n                        \n                            ToCaseDirective\n                        \n                        \n                            UtcDatePipe\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ErrorDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ClubLookupComponent\n                        \n                        \n                            DialogComponent\n                        \n                        \n                            ErrorDialogComponent\n                        \n                        \n                            HelpBlockComponent\n                        \n                        \n                            IfAuthDirective\n                        \n                        \n                            LoadSpinnerComponent\n                        \n                        \n                            MediaControlComponent\n                        \n                        \n                            MultirangeComponent\n                        \n                        \n                            OrderByPipe\n                        \n                        \n                            SaveButtonComponent\n                        \n                        \n                            ToCaseDirective\n                        \n                        \n                            UtcDatePipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\n// import { DragulaModule } from 'ng2-dragula';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\n// Shared components\nimport { DialogComponent } from './components/dialog/dialog.component';\n\n// Shared directives\nimport { IfAuthDirective } from './directives/auth/if-auth.directive';\n\n// Shared pipes\nimport { OrderByPipe } from './pipes/order-by.pipe';\nimport { MultirangeComponent } from './components/multirange/multirange.component';\nimport { SaveButtonComponent } from './components/save-button/save-button.component';\nimport { UtcDatePipe } from './pipes/utc-date.pipe';\nimport { HelpBlockComponent } from './components/help-block/help-block.component';\nimport { ToCaseDirective } from './directives/to-uppercase/to-uppercase.directive';\nimport { MatButtonModule, MatProgressBarModule, MatDialogModule, MatAutocompleteModule, MatInputModule, MatFormFieldModule } from '@angular/material';\nimport { ErrorDialogComponent } from './components/error-dialog/error-dialog.component';\nimport { LoadSpinnerComponent } from './components/load-spinner/load-spinner.component';\nimport { ClubLookupComponent } from './components/club-lookup/club-lookup.component';\nimport { MediaControlComponent } from './components/media-control/media-control.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n\n    FormsModule,\n    ReactiveFormsModule,\n    DragDropModule,\n    // DragulaModule.forRoot(),\n\n    MatDialogModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n\n    RouterModule,\n  ],\n  declarations: [\n    DialogComponent,\n    ErrorDialogComponent,\n    MultirangeComponent,\n    SaveButtonComponent,\n    HelpBlockComponent,\n    LoadSpinnerComponent,\n\n    ToCaseDirective,\n    IfAuthDirective,\n\n    OrderByPipe,\n    UtcDatePipe,\n    ClubLookupComponent,\n    MediaControlComponent,\n  ],\n  exports: [\n    // Export common modules\n    CommonModule,\n    TranslateModule,\n\n    // Export components\n    DialogComponent,\n    ErrorDialogComponent,\n    MultirangeComponent,\n    SaveButtonComponent,\n    HelpBlockComponent,\n    LoadSpinnerComponent,\n    ClubLookupComponent,\n    MediaControlComponent,\n\n    ToCaseDirective,\n    IfAuthDirective,\n\n    OrderByPipe,\n    UtcDatePipe,\n  ],\n  entryComponents: [\n    ErrorDialogComponent,\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignoffReportComponent.html":{"url":"components/SignoffReportComponent.html","title":"component - SignoffReportComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignoffReportComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/event/signoff-report/signoff-report.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signoff-report\n            \n\n            \n                styleUrls\n                ./signoff-report.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signoff-report.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disciplines\n                            \n                            \n                                schedule\n                            \n                            \n                                tournament\n                            \n                            \n                                tournamentSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                colsFilteredByDivisionAndDiscipline\n                            \n                            \n                                filterByDivisionAndDiscipline\n                            \n                            \n                                getByDiscipline\n                            \n                            \n                                getByDivision\n                            \n                            \n                                isGroup\n                            \n                            \n                                judgesForDivisionAndDiscipline\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRenderComplete\n                            \n                            \n                                scoreFromGroupName\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    divisionNames\n                                \n                                \n                                    disciplineNames\n                                \n                                \n                                    dateSpan\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: EventComponent, graph: GraphService, router: Router, route: ActivatedRoute, browser: BrowserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/event/signoff-report/signoff-report.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        EventComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        browser\n                                                  \n                                                        \n                                                                        BrowserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            colsFilteredByDivisionAndDiscipline\n                        \n                        \n                    \n                \n            \n            \n                \ncolsFilteredByDivisionAndDiscipline(division: string, discipline: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    division\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    discipline\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterByDivisionAndDiscipline\n                        \n                        \n                    \n                \n            \n            \n                \nfilterByDivisionAndDiscipline(division: string, discipline: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    division\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    discipline\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByDiscipline\n                        \n                        \n                    \n                \n            \n            \n                \ngetByDiscipline(name: string, filtered?: ITeamInDiscipline[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filtered\n                                    \n                                            ITeamInDiscipline[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByDivision\n                        \n                        \n                    \n                \n            \n            \n                \ngetByDivision(name: string, filtered?: ITeamInDiscipline[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filtered\n                                    \n                                            ITeamInDiscipline[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isGroup\n                        \n                        \n                    \n                \n            \n            \n                \nisGroup(groupName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            judgesForDivisionAndDiscipline\n                        \n                        \n                    \n                \n            \n            \n                \njudgesForDivisionAndDiscipline(division, discipline)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    division\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    discipline\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRenderComplete\n                        \n                        \n                    \n                \n            \n            \n                \nonRenderComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scoreFromGroupName\n                        \n                        \n                    \n                \n            \n            \n                \nscoreFromGroupName(participant: ITeamInDiscipline, groupName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    participant\n                                    \n                                                ITeamInDiscipline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disciplines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDiscipline[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schedule\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ITeamInDiscipline[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournament\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITournament\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        divisionNames\n                    \n                \n\n                \n                    \n                        getdivisionNames()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:23\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        disciplineNames\n                    \n                \n\n                \n                    \n                        getdisciplineNames()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dateSpan\n                    \n                \n\n                \n                    \n                        getdateSpan()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/event/signoff-report/signoff-report.component.ts:31\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { EventComponent } from '../event.component';\n\nimport { ITeamInDiscipline, ITournament, IScoreGroup, ParticipationType, Operation, IDiscipline } from 'app/model';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { CommonService } from 'app/shared/services/common.service';\nimport { BrowserService } from 'app/shared/browser.service';\n\n@Component({\n  selector: 'app-signoff-report',\n  templateUrl: './signoff-report.component.html',\n  styleUrls: ['./signoff-report.component.scss']\n})\nexport class SignoffReportComponent implements OnInit {\n  tournament: ITournament;\n  tournamentSubscription: Subscription;\n  schedule: ITeamInDiscipline[] = [];\n  disciplines: IDiscipline[];\n\n  get divisionNames() {\n    return this.schedule.reduce((p, c) => p.add(c.divisionName), new Set());\n  }\n\n  get disciplineNames() {\n    return this.schedule.reduce((p, s) => p.add(s.disciplineName), new Set());\n  }\n\n  get dateSpan() {\n    return CommonService.dateSpan(this.tournament);\n  }\n\n  constructor(\n    private parent: EventComponent,\n    private graph: GraphService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private browser: BrowserService\n  ) { }\n\n  ngOnInit() {\n    this.graph.getData(`{\n      tournament(id:${this.parent.tournamentId}){id,name,startDate,endDate,venue{id,name}},\n      getDisciplines(tournamentId:${this.parent.tournamentId}){id,name,scoreGroups{id,type,judgeCount,operation,judges{sortNumber,judge{id,name}}}},\n      getSchedule(tournamentId:${this.parent.tournamentId},type:${ParticipationType.Live},scorable:true){\n        id,\n        sortNumber,\n        startNumber,\n        divisionName,\n        markDeleted,\n        startTime,\n        endTime,\n        publishTime,\n        disciplineName,\n        team{id,name},\n        scores{judgeIndex,value,scoreGroupId},\n        total,\n        totalByScoreGroup{group{id,type},total}\n      }}`).subscribe(res => {\n      this.tournament = res.tournament;\n      this.disciplines = res.getDisciplines;\n      const scoreGroups = this.disciplines.reduce((set, discipline) => { discipline.scoreGroups.forEach(group => set.add(group)); return set; }, new Set());\n      this.schedule = res.getSchedule.map(participant => {\n        participant.scores = participant.scores.map(s => {\n          s.scoreGroup = Array.from(scoreGroups).find(g => g.id === s.scoreGroupId);\n          return s;\n        });\n        return participant;\n      });\n      this.onRenderComplete();\n    });\n  }\n\n  onRenderComplete() {\n    setTimeout(() => {\n      this.browser.window().print();\n      this.router.navigate(['../results'], { relativeTo: this.route });\n    });\n  }\n\n  getByDivision(name: string, filtered?: ITeamInDiscipline[]) {\n    return (filtered || this.schedule)\n      .filter(s => s.divisionName === name)\n      .sort((a: ITeamInDiscipline, b: ITeamInDiscipline) => a.total > b.total ? -1 : 1);\n  }\n\n  getByDiscipline(name: string, filtered?: ITeamInDiscipline[]) {\n    return (filtered || this.schedule)\n      .filter(s => s.disciplineName === name)\n      .sort((a: ITeamInDiscipline, b: ITeamInDiscipline) => a.total > b.total ? -1 : 1);\n  }\n\n  judgesForDivisionAndDiscipline(division, discipline) {\n    return this.disciplines.find(d => d.name === discipline)\n      .scoreGroups\n      .sort((a: IScoreGroup, b: IScoreGroup) => a.type > b.type ? 1 : -1)\n      .filter(s => s.operation === Operation.Addition)\n      .reduce((prev, current) => {\n        current.judges\n          .sort((a, b) => a.sortNumber  {\n            const prevCard = prev.find(card => card.name === judgeInGroup.judge.name);\n            if (prevCard) {\n              prevCard.type.push(current.type + (i + 1));\n            } else {\n              prev.push({\n                type: [current.type + (i + 1)],\n                name: judgeInGroup.judge.name\n              });\n            }\n          });\n        return prev;\n      }, []);\n  }\n\n  colsFilteredByDivisionAndDiscipline(division: string, discipline: string) {\n    return this.disciplines.find(d => d.name === discipline)\n      .scoreGroups.sort((a: IScoreGroup, b: IScoreGroup) => a.type > b.type ? 1 : -1)\n      .reduce((prev, current) => {\n        if (current.judgeCount > 1) {\n          for (let j = 1; j  s.divisionName === division && s.disciplineName === discipline);\n  }\n\n  scoreFromGroupName(participant: ITeamInDiscipline, groupName: string) {\n    if (!this.isGroup(groupName)) {\n      // Single type\n      const type = groupName.charAt(0);\n      const judge = parseInt(groupName.charAt(1), null);\n      const score = participant.scores.find(s => s.judgeIndex === judge && s.scoreGroup.type === type);\n      return score ? score.value : 0;\n    } else {\n      // Group total\n      return participant.totalByScoreGroup.find(g => g.group.type === groupName).total;\n    }\n  }\n\n  isGroup(groupName: string) {\n    return !groupName.match(/\\d+/g);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ tournament.name }}\n      {{ dateSpan }}\n      {{ tournament.venue.name }}\n      \n      {{ division }}\n    \n\n    \n      \n        \n          \n            \n              {{ discipline }}\n            \n          \n          \n            #\n            Name\n            {{\n              col }}\n            Score\n          \n        \n        \n          \n            {{ item.startNumber }}\n            {{ item.team.name }}\n            {{\n              scoreFromGroupName(item, col) | number:'1.2-2' }}\n            {{ item.total | number:'1.3-3' }}\n          \n        \n      \n    \n\n    \n      \n        \n          {{ type }}\n          {{ judge.name }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./signoff-report.component.scss\n                \n                @media print{@page {size: portrait}}\n\nsection {\n  page-break-after: always;\n  -webkit-print-color-adjust: exact !important;\n  margin: 0.5cm;\n}\n\ntable {\n  thead > tr {\n    > td {\n      border: 0;\n    }\n    &:last-of-type {\n      > td {\n        border-bottom: 1px solid black;\n      }\n    }\n  }\n  td {\n    padding: 4px;\n  }\n}\n.judge, .group {\n  text-align: right;\n}\n.group {\n  background: rgba(0,0,0,0.1);\n}\n\n.signatures {\n  margin-top: 3rem;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 10px;\n  grid-auto-rows: minmax(70px, auto);\n  > div {\n    border-bottom: 2px solid black;\n    position: relative;\n    > span {\n      position: absolute;\n      bottom: -1rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ tournament.name }}      {{ dateSpan }}      {{ tournament.venue.name }}            {{ division }}                                                          {{ discipline }}                                            #            Name            {{              col }}            Score                                                {{ item.startNumber }}            {{ item.team.name }}            {{              scoreFromGroupName(item, col) | number:\\'1.2-2\\' }}            {{ item.total | number:\\'1.3-3\\' }}                                                        {{ type }}          {{ judge.name }}                    '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignoffReportComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsComponent.html":{"url":"components/StatisticsComponent.html","title":"component - StatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/club/statistics/statistics.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-statistics\n            \n\n            \n                styleUrls\n                ./statistics.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./statistics.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                teamList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                position\n                            \n                            \n                                score\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/club/statistics/statistics.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/statistics/statistics.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            position\n                        \n                        \n                    \n                \n            \n            \n                \nposition(team: ITeamInDiscipline)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/statistics/statistics.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                                ITeamInDiscipline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            score\n                        \n                        \n                    \n                \n            \n            \n                \nscore(team: ITeamInDiscipline)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/statistics/statistics.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                                ITeamInDiscipline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ITeamInDiscipline[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/statistics/statistics.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ITeamInDiscipline } from 'app/model';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent implements OnInit {\n  teamList: ITeamInDiscipline[] = [];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  score(team: ITeamInDiscipline) {\n\n  }\n  position(team: ITeamInDiscipline) {\n\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Tournament\n        Team\n        Score\n        Position\n      \n    \n    \n      \n        {{ team.tournament.name }}\n        {{ team.team.name }}\n        {{ score(team) }}\n        {{ position(team) }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./statistics.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Tournament        Team        Score        Position                            {{ team.tournament.name }}        {{ team.team.name }}        {{ score(team) }}        {{ position(team) }}            '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubjectSource.html":{"url":"classes/SubjectSource.html","title":"class - SubjectSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubjectSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/subject-source.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DataSource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sortChanged\n                            \n                            \n                                    Public\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                findIndexOf\n                            \n                            \n                                sortData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rows\n                                \n                                \n                                    currentSort\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subject: BehaviorSubject)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/subject-source.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subject\n                                                  \n                                                        \n                                                                    BehaviorSubject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/subject-source.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/subject-source.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(element: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/subject-source.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/subject-source.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/subject-source.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findIndexOf\n                        \n                        \n                    \n                \n            \n            \n                \nfindIndexOf(element: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/subject-source.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortData\n                        \n                        \n                    \n                \n            \n            \n                \nsortData($event: Sort, elements?: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/subject-source.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Sort\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elements\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rows\n                    \n                \n\n                \n                    \n                        getrows()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/subject-source.ts:7\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentSort\n                    \n                \n\n                \n                    \n                        getcurrentSort()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/subject-source.ts:10\n                                \n                            \n\n                \n                    \n                        setcurrentSort(v)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/subject-source.ts:11\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { DataSource } from '@angular/cdk/table';\nimport { Sort } from '@angular/material';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nexport class SubjectSource extends DataSource {\n\n  private get rows() { return this.subject.value; }\n\n  sortChanged = new BehaviorSubject(undefined);\n  get currentSort(): Sort { return this.sortChanged.value; }\n  set currentSort(v) { this.sortChanged.next(v); }\n\n  constructor(public subject: BehaviorSubject) {\n    super();\n  }\n\n  connect(): Observable {\n    return this.subject;\n  }\n\n  sortData($event: Sort, elements?: T[]) {\n    if ($event) {\n      this.currentSort = $event;\n    }\n    elements = elements || this.subject.value;\n    const sorted = !this.currentSort ? elements : elements.sort((a, b) => {\n      const dir = this.currentSort.direction === 'asc' ? -1 : 1;\n      if (typeof this.currentSort.active === 'string') {\n        return (a[this.currentSort.active] > b[this.currentSort.active]) ? dir : -dir;\n      }\n      if (Array.isArray(this.currentSort.active)) {\n        let fn, host; [fn, host] =  this.currentSort.active;\n        const aVal = fn.call(host, a);\n        const bVal = fn.call(host, b);\n        return aVal  m === element);\n  }\n\n  disconnect() {}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/tournament/teams/teams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                styleUrls\n                ./teams.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                displayColumns\n                            \n                            \n                                executionTime\n                            \n                            \n                                isLoading\n                            \n                            \n                                subscriptions\n                            \n                            \n                                teamSource\n                            \n                            \n                                tournament\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeam\n                            \n                            \n                                canAdd\n                            \n                            \n                                canSelect\n                            \n                            \n                                disciplines\n                            \n                            \n                                hasStarted\n                            \n                            \n                                loadTeams\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                teamsReceived\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    availableSlots\n                                \n                                \n                                    takenSlots\n                                \n                                \n                                    hasFreeSlots\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: TournamentEditorComponent, graph: GraphService, userService: UserService, configuration: ConfigurationService, router: Router, route: ActivatedRoute, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/tournament/teams/teams.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        TournamentEditorComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:171\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTeam\n                        \n                        \n                    \n                \n            \n            \n                \naddTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canAdd\n                        \n                        \n                    \n                \n            \n            \n                \ncanAdd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canSelect\n                        \n                        \n                    \n                \n            \n            \n                \ncanSelect(team: ITeam)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                                ITeam\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disciplines\n                        \n                        \n                    \n                \n            \n            \n                \ndisciplines(team: ITeam)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                                ITeam\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasStarted\n                        \n                        \n                    \n                \n            \n            \n                \nhasStarted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadTeams\n                        \n                        \n                    \n                \n            \n            \n                \nloadTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            teamsReceived\n                        \n                        \n                    \n                \n            \n            \n                \nteamsReceived(teams: ITeam[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teams\n                                    \n                                                ITeam[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            title\n                        \n                        \n                    \n                \n            \n            \n                \ntitle(team: ITeam)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                                ITeam\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'division', 'disciplines', 'club']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            executionTime\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubjectSource(new BehaviorSubject([]))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournament\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITournament\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        availableSlots\n                    \n                \n\n                \n                    \n                        getavailableSlots()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        takenSlots\n                    \n                \n\n                \n                    \n                        gettakenSlots()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasFreeSlots\n                    \n                \n\n                \n                    \n                        gethasFreeSlots()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/tournament/teams/teams.component.ts:57\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport * as moment from 'moment';\n\nimport {\n  UserService,\n  ConfigurationService,\n  // EventService\n} from 'app/shared/services/api';\nimport { ITeam, IUser, Role, Classes, ITournament } from 'app/model';\n\nimport { TournamentEditorComponent } from '../tournament-editor/tournament-editor.component';\nimport { SubjectSource } from 'app/shared/services/subject-source';\nimport { GraphService } from 'app/shared/services/graph.service';\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.scss']\n})\nexport class TeamsComponent implements OnInit, OnDestroy {\n  currentUser: IUser;\n  tournament: ITournament;\n  isLoading = false;\n\n  teamSource = new SubjectSource(new BehaviorSubject([]));\n  displayColumns = ['name', 'division', 'disciplines', 'club'];\n\n  executionTime;\n\n  subscriptions: Subscription[] = [];\n\n  get availableSlots(): number {\n    if (this.tournament) {\n      const hours = this.tournament.times.reduce((prev, curr) => {\n        const [start, end] = curr.time.split(',');\n        return prev + (+end - +start);\n      }, 0);\n      return (hours * 60) / (this.executionTime + 1);\n    }\n    return 0;\n  }\n\n  get takenSlots(): number {\n    return this.teamSource.subject.value.length > 0\n      ? this.teamSource.subject.value.reduce(\n        (prev, curr) => prev + curr.disciplines.length,\n        0\n      )\n      : 0;\n  }\n\n  get hasFreeSlots(): boolean {\n    return !this.tournament || this.teamSource.subject.value.length =\n      this.tournament.disciplines.length;\n  }\n\n  constructor(\n    private parent: TournamentEditorComponent,\n    private graph: GraphService,\n    private userService: UserService,\n    private configuration: ConfigurationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private translate: TranslateService\n  ) { }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.userService.getMe().subscribe(user => (this.currentUser = user))\n    );\n    this.configuration\n      .getByname('scheduleExecutionTime')\n      .subscribe(res => (this.executionTime = res.value));\n\n    this.isLoading = true;\n    this.loadTeams();\n    this.subscriptions.push(this.graph.listen('teamInDisciplineModified', '{id}').subscribe(res => {\n      this.loadTeams();\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => (s ? s.unsubscribe() : null));\n  }\n\n  loadTeams() {\n    this.isLoading = true;\n    this.graph\n      .getData(\n        `{\n      getTeams(tournamentId:${this.parent.tournamentId}){\n        id,\n        name,\n        class,\n        club{id,name},\n        media{disciplineId},\n        divisionName,\n        disciplines{id,name}\n      }}`\n      )\n      .subscribe(res => this.teamsReceived(res.getTeams));\n  }\n\n  teamsReceived(teams: ITeam[]) {\n    this.isLoading = false;\n    this.teamSource.subject.next(teams);\n  }\n\n  disciplines(team: ITeam) {\n    if (team.disciplines.length) {\n      return (\n        (team.class === Classes.TeamGym ? 'TG: ' : '') +\n        team.disciplines\n          .map(d => {\n            const media = team.media.find(m => m.disciplineId === d.id);\n            return media\n              ? `&#9835;${d.name}`\n              : `${d.name}`;\n          })\n          .join(', ')\n      );\n    }\n    return '';\n  }\n\n  addTeam() {\n    this.router.navigate(['./add'], { relativeTo: this.route });\n  }\n\n  title(team: ITeam) {\n    if (\n      this.currentUser.role = Role.Admin ||\n      (team.club.id === this.currentUser.club.id && !this.hasStarted())\n    );\n  }\n\n  canAdd() {\n    return this.currentUser.role >= Role.Admin || !this.hasStarted();\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === '+' || evt.key === 'NumpadAdd') {\n      this.addTeam();\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    {{ \"Name\" | translate }}\n    \n      {{ team.name }}\n      {{ team.divisionName }}\n    \n  \n  \n    {{ \"Division\" | translate }}\n    {{ team.divisionName }}\n  \n  \n    {{ \"Disciplines\" | translate }}\n    \n  \n  \n    {{ \"Club\" | translate }}\n    {{ team.club.name }}\n  \n\n  \n  \n\n\n\n   Add Team\n\n\n{{ takenSlots }} / {{ availableSlots }}\n\n  \n  We're sorry, registration is closed!\n\n\n  \n  We're sorry, registration is closed!\n  This tournament has allready started\n\n\n    \n\n    \n                \n                    ./teams.component.scss\n                \n                @import \"../../../../../styles/variables\";\n\n:host {\n  position: relative;\n  display: block;\n}\nform {\n  margin-top: 1rem;\n}\n.unselectable {\n  background-color: rgba($warning, 0.1);\n  opacity: 0.6;\n  .mat-row {\n    cursor: not-allowed !important;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"Name\" | translate }}          {{ team.name }}      {{ team.divisionName }}            {{ \"Division\" | translate }}    {{ team.divisionName }}        {{ \"Disciplines\" | translate }}            {{ \"Club\" | translate }}    {{ team.club.name }}         Add Team{{ takenSlots }} / {{ availableSlots }}    We\\'re sorry, registration is closed!    We\\'re sorry, registration is closed!  This tournament has allready started'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ToCaseDirective.html":{"url":"directives/ToCaseDirective.html","title":"directive - ToCaseDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ToCaseDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/to-uppercase/to-uppercase.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                CASE_INPUT_CONTROL_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input[appToCase]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appToCase\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/to-uppercase/to-uppercase.directive.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appToCase\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/to-uppercase/to-uppercase.directive.ts:27\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ninput($event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/to-uppercase/to-uppercase.directive.ts:40\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/to-uppercase/to-uppercase.directive.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Renderer2, ElementRef, forwardRef, HostListener, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, DefaultValueAccessor } from '@angular/forms';\n\nconst CASE_INPUT_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line:no-use-before-declare\n  useExisting: forwardRef(() => ToCaseDirective),\n  multi: true,\n};\n\nexport function toUpperCaseTransformer(value: string) {\n  return value && typeof value === 'string' ? value.toUpperCase() : value;\n}\n\nexport function toLowerCaseTransformer(value: string) {\n  return value && typeof value === 'string' ? value.toLowerCase() : value;\n}\n\n@Directive({\n  selector: 'input[appToCase]',\n  providers: [\n    CASE_INPUT_CONTROL_VALUE_ACCESSOR,\n  ],\n  exportAs: 'toCase'\n})\nexport class ToCaseDirective extends DefaultValueAccessor {\n  @Input() appToCase: string;\n\n  constructor(renderer: Renderer2, elementRef: ElementRef) {\n    super(renderer, elementRef, false);\n  }\n\n  writeValue(value: any): void {\n    const transformed = toUpperCaseTransformer(value);\n\n    super.writeValue(transformed);\n  }\n\n  @HostListener('input', ['$event'])\n  onInput($event: any): void {\n    const value = $event.target.value;\n    let transformed;\n    switch (this.appToCase) {\n      case 'lower':\n        transformed = toLowerCaseTransformer(value); break;\n      case 'upper':\n      default:\n        transformed = toUpperCaseTransformer(value); break;\n    }\n\n    super.writeValue(transformed);\n    this.onChange(transformed);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TotalByScoreGroup.html":{"url":"interfaces/TotalByScoreGroup.html","title":"interface - TotalByScoreGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TotalByScoreGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/ITeamInDiscipline.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        group\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         IScoreGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IScoreGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Moment } from 'moment';\n\nimport { ITournament } from './ITournament';\nimport { IDiscipline } from './IDiscipline';\nimport { IScore } from './IScore';\nimport { ITeam } from './ITeam';\nimport { ParticipationType } from './ParticipationType';\nimport { IDivision } from './IDivision';\nimport { IScoreGroup } from './IScoreGroup';\n\nexport interface TotalByScoreGroup {\n  group: IScoreGroup;\n  total: number;\n}\n\nexport interface ITeamInDiscipline {\n  media: any;\n  id: number;\n  startNumber: number;\n  sortNumber: number;\n  startTime: Date;\n  markDeleted: boolean;\n  calculatedStartTime?: Moment; // Exists only on client side\n  endTime: Date;\n  publishTime: Date;\n  type: ParticipationType;\n  disciplineId: number;\n  discipline: IDiscipline;\n  disciplineName: string;\n  disciplineSortOrder: number;\n  divisions: IDivision[];\n  divisionName: string;\n  divisionSortOrder: string;\n  scorable: boolean;\n  teamId: number;\n  team: ITeam;\n  tournamentId: number;\n  tournament: ITournament;\n  scores: IScore[];\n  total: string;\n  totalByScoreGroup: TotalByScoreGroup[]\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentComponent.html":{"url":"components/TournamentComponent.html","title":"component - TournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/tournament/tournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament\n            \n\n            \n                styleUrls\n                ./tournament.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColumns\n                            \n                            \n                                tournamentSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, graph: GraphService, userService: UserService, seo: SEOService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/tournament/tournament.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seo\n                                                  \n                                                        \n                                                                        SEOService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:keyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/tournament.component.ts:49\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/tournament/tournament.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'startDate', 'endDate', 'venueName', 'clubName']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/tournament.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubjectSource(new BehaviorSubject([]))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/tournament/tournament.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostListener } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { UserService } from 'app/shared/services/api';\nimport { ITournament, Role } from 'app/model';\nimport { SubjectSource } from 'app/shared/services/subject-source';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { SEOService } from 'app/shared/services/seo.service';\n\n@Component({\n  selector: 'app-tournament',\n  templateUrl: './tournament.component.html',\n  styleUrls: ['./tournament.component.scss']\n})\nexport class TournamentComponent implements OnInit {\n  tournamentSource = new SubjectSource(new BehaviorSubject([]));\n  displayColumns = ['name', 'startDate', 'endDate', 'venueName', 'clubName'];\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private graph: GraphService,\n    private userService: UserService,\n    private seo: SEOService\n  ) { }\n\n  ngOnInit() {\n    this.seo.setTitle(`Configure tournaments`, `List all tournaments registerred`);\n\n    this.userService.getMe().subscribe(me => me && me.role >= Role.Admin ? this.displayColumns.push('createdBy') : null);\n    this.graph.getData(`{\n      getTournaments{\n        id,\n        name,\n        startDate,\n        endDate,\n        description_no,\n        description_en,\n        times{day,time},\n        club{id,name},\n        createdById,\n        createdBy{id,name},\n        venue{id,name,address,capacity}\n      }}`).subscribe(data => this.tournamentSource.subject.next(data.getTournaments));\n  }\n\n  @HostListener('window:keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === '+' || evt.key === 'NumpadAdd') {\n      this.router.navigate(['./add'], { relativeTo: this.route });\n    }\n  }\n}\n\n    \n\n    \n         Tournaments\n\n\n\n  \n    {{ \"Name\" | translate }}\n    \n      {{ tournament.name }}\n      \n        {{ tournament.startDate | date: \"dd.MM.yyyy\" }} -\n        {{ tournament.endDate | date: \"dd.MM.yyyy\" }}\n      \n    \n  \n\n  \n    {{ \"Start date\" | translate }}\n    {{ tournament.startDate | date: \"dd.MM.yyyy\" }}\n  \n\n  \n    {{ \"End date\" | translate }}\n    {{ tournament.endDate | date: \"dd.MM.yyyy\" }}\n  \n\n  \n    {{ \"Location\" | translate }}\n    \n      {{ tournament.venue?.name }}\n      {{ tournament.club.name }}\n    \n  \n\n  \n    {{ \"Organized by\" | translate }}\n    {{ tournament.club.name }}\n  \n\n  \n    {{ \"Created by\" | translate }}\n    {{ tournament.createdBy.name }}\n  \n\n  \n  \n\n\n\n   Add Tournament\n\n\n    \n\n    \n                \n                    ./tournament.component.scss\n                \n                @import \"../../../../styles/variables\";\n\n.mat-column-name {\n  min-width: 14rem;\n}\n\n.club-name {\n  font-style: italic;\n  font-size: 0.7rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' Tournaments      {{ \"Name\" | translate }}          {{ tournament.name }}              {{ tournament.startDate | date: \"dd.MM.yyyy\" }} -        {{ tournament.endDate | date: \"dd.MM.yyyy\" }}                  {{ \"Start date\" | translate }}    {{ tournament.startDate | date: \"dd.MM.yyyy\" }}        {{ \"End date\" | translate }}    {{ tournament.endDate | date: \"dd.MM.yyyy\" }}        {{ \"Location\" | translate }}          {{ tournament.venue?.name }}      {{ tournament.club.name }}            {{ \"Organized by\" | translate }}    {{ tournament.club.name }}        {{ \"Created by\" | translate }}    {{ tournament.createdBy.name }}         Add Tournament'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'TournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentModule.html":{"url":"modules/TournamentModule.html","title":"module - TournamentModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nAwardsComponent\n\nAwardsComponent\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nAwardsComponent->TournamentModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nTournamentModule -->\n\nInfoComponent->TournamentModule\n\n\n\n\n\nScheduleComponent\n\nScheduleComponent\n\nTournamentModule -->\n\nScheduleComponent->TournamentModule\n\n\n\n\n\nScorecardsComponent\n\nScorecardsComponent\n\nTournamentModule -->\n\nScorecardsComponent->TournamentModule\n\n\n\n\n\nTeamEditorComponent\n\nTeamEditorComponent\n\nTournamentModule -->\n\nTeamEditorComponent->TournamentModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nTournamentModule -->\n\nTeamsComponent->TournamentModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nTournamentEditorComponent\n\nTournamentEditorComponent\n\nTournamentModule -->\n\nTournamentEditorComponent->TournamentModule\n\n\n\n\n\nConfigureSharedModule\n\nConfigureSharedModule\n\nTournamentModule -->\n\nConfigureSharedModule->TournamentModule\n\n\n\n\n\nDisciplinesModule\n\nDisciplinesModule\n\nTournamentModule -->\n\nDisciplinesModule->TournamentModule\n\n\n\n\n\nDivisionsModule\n\nDivisionsModule\n\nTournamentModule -->\n\nDivisionsModule->TournamentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/configure/tournament/tournament.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AwardsComponent\n                        \n                        \n                            InfoComponent\n                        \n                        \n                            ScheduleComponent\n                        \n                        \n                            ScorecardsComponent\n                        \n                        \n                            TeamEditorComponent\n                        \n                        \n                            TeamsComponent\n                        \n                        \n                            TournamentComponent\n                        \n                        \n                            TournamentEditorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigureSharedModule\n                        \n                        \n                            DisciplinesModule\n                        \n                        \n                            DivisionsModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { MarkdownToHtmlModule } from 'markdown-to-html-pipe';\n// import { DragulaModule } from 'ng2-dragula';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport {\n  MatSortModule, MatCardModule, MatTabsModule, MatFormFieldModule, MatInputModule, MatAutocompleteModule,\n  MatOptionModule, MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatButtonModule, MatSlideToggleModule, MatTableModule, MatMenuModule, MatProgressSpinnerModule, MatToolbarModule, MatCheckboxModule\n} from '@angular/material';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport { ConfigureSharedModule } from '../_shared/_shared.module';\nimport { DisciplinesModule } from './disciplines/disciplines.module';\nimport { DivisionsModule } from './divisions/divisions.module';\n\nimport { TournamentComponent } from './tournament.component';\nimport { TournamentEditorComponent } from './tournament-editor/tournament-editor.component';\n\nimport { TeamsComponent, TeamEditorComponent } from './teams';\nimport { ScheduleComponent } from './schedule/schedule.component';\nimport { InfoComponent } from './info/info.component';\nimport { ScorecardsComponent } from './scorecards/scorecards.component';\nimport { AwardsComponent } from './awards/awards.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    MarkdownToHtmlModule,\n    DragDropModule,\n    // DragulaModule.forRoot(),\n\n    MatProgressSpinnerModule,\n    MatMenuModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatTabsModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatTableModule,\n    MatCheckboxModule,\n\n    SharedModule,\n    DisciplinesModule,\n    DivisionsModule,\n    ConfigureSharedModule\n  ],\n  declarations: [\n    TournamentComponent, TournamentEditorComponent,\n    TeamsComponent, TeamEditorComponent, ScheduleComponent, InfoComponent, ScorecardsComponent, AwardsComponent\n  ]\n})\nexport class TournamentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TournamentType.html":{"url":"interfaces/TournamentType.html","title":"interface - TournamentType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TournamentType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/views/home/home.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        tournaments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournaments\n                                    \n                                \n                                \n                                    \n                                        tournaments:         ITournament[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITournament[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { ITournament } from 'app/model';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { CommonService } from 'app/shared/services/common.service';\n\nimport * as moment from 'moment';\nimport { SEOService } from 'app/shared/services/seo.service';\n\ninterface TournamentType { name: string; tournaments: ITournament[]; }\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  private query = `{\n    getTournaments {\n      id,\n      name,\n      description_no,\n      description_en,\n      startDate,\n      endDate,\n      times{day,time},\n      venue{id,name,address,capacity,latitude,longitude}\n    }}`;\n\n  current = [];\n  isLoading = true;\n\n  // Future first, allways\n  private _types: TournamentType[] = [];\n  get types() { return this._types.sort((a: TournamentType, b: TournamentType) => (a.name === 'Future') ? -1 : 1); }\n\n  get hasTournaments() { return this.types.filter(t => t.tournaments.length > 0).length > 0; }\n  get hasFuture() {\n    const future = this.types.find(t => t.name === 'Future');\n    return future && future.tournaments && future.tournaments.length > 0;\n  }\n  get hasPast() {\n    const past = this.types.find(t => t.name === 'Past');\n    return past && past.tournaments && past.tournaments.length > 0;\n  }\n  get future() {\n    return this.hasFuture ? this.types.find(t => t.name === 'Future').tournaments : [];\n  }\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private graph: GraphService,\n    private translate: TranslateService,\n    private seo: SEOService\n  ) { }\n\n  ngOnInit() {\n    // Page meta tags\n    this.seo.setTitle('', `A complete web based system for managing the secretariat for Team Gymnastic sports.`);\n\n    // Make sure texts exists and are translated\n    this.translate.get(['Future', 'Past']).subscribe();\n\n    // Get page data\n    this.graph.getData(this.query).subscribe(data => {\n      const now = new Date().getTime();\n      this._types = [\n        { name: 'Future', tournaments: data.getTournaments.filter(t => now  now > t.endDate) }\n      ];\n      this.current = data.getTournaments.filter(t => now >= t.startDate && now \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TroopEditorComponent.html":{"url":"components/TroopEditorComponent.html","title":"component - TroopEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TroopEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-troop-editor\n            \n\n            \n                styleUrls\n                ./troop-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./troop-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _currentUser\n                            \n                            \n                                club\n                            \n                            \n                                memberListHidden\n                            \n                            \n                                subscriptions\n                            \n                            \n                                troopForm\n                            \n                            \n                                troopsCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                delete\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                troopReceived\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                troop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                troopChanged\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUser\n                                \n                                \n                                    clubName\n                                \n                                \n                                    troopSuggestion\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, route: ActivatedRoute, graph: GraphService, userService: UserService, clubComponent: ClubEditorComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clubComponent\n                                                  \n                                                        \n                                                                        ClubEditorComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        troop\n                    \n                \n                \n                    \n                        Type :         ITroop\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        troopChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:22\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:122\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(result?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(keepOpen?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keepOpen\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            troopReceived\n                        \n                        \n                    \n                \n            \n            \n                \ntroopReceived(troop: ITroop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    troop\n                                    \n                                                ITroop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            club\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IClub\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            memberListHidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            troopForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            troopsCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n\n                \n                    \n                        getcurrentUser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:27\n                                \n                            \n\n                \n                    \n                        setcurrentUser(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        clubName\n                    \n                \n\n                \n                    \n                        getclubName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:38\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        troopSuggestion\n                    \n                \n\n                \n                    \n                        gettroopSuggestion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, EventEmitter, Output, Input, HostListener, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { upperCase } from 'lodash';\n\nimport { ITroop, IClub, IUser } from 'app/model';\nimport { UserService } from 'app/shared/services/api';\n\nimport { ClubEditorComponent } from 'app/views/configure/club/club-editor/club-editor.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { CommonService } from 'app/shared/services/common.service';\n\n@Component({\n  selector: 'app-troop-editor',\n  templateUrl: './troop-editor.component.html',\n  styleUrls: ['./troop-editor.component.scss']\n})\nexport class TroopEditorComponent implements OnInit, OnDestroy {\n  @Input() troop: ITroop = {};\n  @Output() troopChanged: EventEmitter = new EventEmitter();\n\n  troopForm: FormGroup;\n\n  _currentUser: IUser;\n  get currentUser() { return this._currentUser; }\n  set currentUser(value) {\n    this._currentUser = value;\n  }\n  subscriptions: Subscription[] = [];\n\n  memberListHidden = true;\n\n  club: IClub;\n  troopsCount = 0;\n\n  get clubName() {\n    return upperCase(this.troop.club ? this.troop.club.name : this.clubComponent.clubName);\n  }\n\n  get troopSuggestion() {\n    setTimeout(() => this.troopForm.markAsDirty());\n    let teamCounter = this.troopsCount;\n    return this.clubName.split(' ')[0].toLowerCase() + '-' + ++teamCounter;\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private graph: GraphService,\n    private userService: UserService,\n    private clubComponent: ClubEditorComponent) { }\n\n  ngOnInit() {\n    this.subscriptions.push(this.userService.getMe().subscribe(user => this.currentUser = user));\n\n    this.troopForm = this.fb.group({\n      id: [null],\n      name: [null, [Validators.required]],\n      club: [null],\n      gymnasts: [[]]\n    });\n\n    this.clubComponent.clubSubject.subscribe(club => {\n      this.club = club;\n      this.route.params.subscribe(params => {\n        if (params.id) {\n          this.graph.getData(`{troop(id:${+params.id}){id,name,gymnasts{id,name,gender,birthYear}}}`).subscribe(res => this.troopReceived(res.troop));\n        } else {\n          this.troopForm.get('club').setValue(this.club);\n          this.graph.getData(`{club(id:${this.club.id}){id,troopCount}}`).subscribe(result => {\n            this.troopsCount = result.club.troopCount;\n            this.troopForm.get('name').setValue(this.troopSuggestion);\n          });\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s ? s.unsubscribe() : null);\n  }\n\n  troopReceived(troop: ITroop) {\n    this.troop = troop;\n    this.troopForm.setValue({\n      id: this.troop.id || null,\n      name: this.troop.name || '',\n      club: this.club,\n      gymnasts: this.troop.gymnasts || []\n    });\n  }\n\n  async save(keepOpen?: boolean) {\n    const troop = this.troopForm.value;\n\n    // Save team\n    return new Promise((resolve, reject) => {\n      troop.clubId = troop.club.id;\n      this.graph.saveData('Troop', CommonService.omit(troop, ['club']), `{id,name,gymnasts{id,name,gender,birthYear}}`).subscribe(result => {\n        this.troopReceived(result.saveTroop);\n        this.close(result.saveTroop);\n        resolve(result.saveTroop);\n      });\n    });\n  }\n\n  delete() {\n    this.graph.deleteData('Troop', this.troopForm.value.id).subscribe(result => {\n      this.close(result);\n    });\n  }\n\n  close(result?) {\n    this.troopChanged.emit(result || this.troop);\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === 'Escape') {\n      this.close();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        {{ 'Troop' | translate}} {{ troopForm.value.name }}\n      \n    \n    \n      \n        \n          \n        \n      \n\n      \n      \n        \n      \n    \n\n    \n      \n       Cancel\n      \n         Delete\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./troop-editor.component.scss\n                \n                :host {\n  display: block;\n  // margin-bottom: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ \\'Troop\\' | translate}} {{ troopForm.value.name }}                                                                                                   Cancel               Delete            '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'TroopEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TroopsComponent.html":{"url":"components/TroopsComponent.html","title":"component - TroopsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TroopsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/club/troops/troops.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-troops\n            \n\n            \n                styleUrls\n                ./troops.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./troops.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allIndeterminate\n                            \n                            \n                                allSelected\n                            \n                            \n                                currentUser\n                            \n                            \n                                defaults\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                selection\n                            \n                            \n                                selectMode\n                            \n                            \n                                teamSource\n                            \n                            \n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeam\n                            \n                            \n                                ageDivision\n                            \n                            \n                                deleteAllTeams\n                            \n                            \n                                genderDivision\n                            \n                            \n                                generateTeams\n                            \n                            \n                                isSelected\n                            \n                            \n                                loadTeams\n                            \n                            \n                                members\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onPress\n                            \n                            \n                                onTeamsReceived\n                            \n                            \n                                select\n                            \n                            \n                                selectionState\n                            \n                            \n                                toggleSelectAll\n                            \n                            \n                                toggleSelection\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    teams\n                                \n                                \n                                    teamCount\n                                \n                                \n                                    club\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, graph: GraphService, configuration: ConfigurationService, router: Router, route: ActivatedRoute, translate: TranslateService, clubComponent: ClubEditorComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/club/troops/troops.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clubComponent\n                                                  \n                                                        \n                                                                        ClubEditorComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTeam\n                        \n                        \n                    \n                \n            \n            \n                \naddTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ageDivision\n                        \n                        \n                    \n                \n            \n            \n                \nageDivision(team: ITroop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                                ITroop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAllTeams\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAllTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genderDivision\n                        \n                        \n                    \n                \n            \n            \n                \ngenderDivision(team: ITroop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                                ITroop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisSelected(team: ITroop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                                ITroop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadTeams\n                        \n                        \n                    \n                \n            \n            \n                \nloadTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            members\n                        \n                        \n                    \n                \n            \n            \n                \nmembers(team: ITroop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                                ITroop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPress\n                        \n                        \n                    \n                \n            \n            \n                \nonPress($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTeamsReceived\n                        \n                        \n                    \n                \n            \n            \n                \nonTeamsReceived(teams: ITroop[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teams\n                                    \n                                                ITroop[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            select\n                        \n                        \n                    \n                \n            \n            \n                \nselect(team: ITroop, row?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                                ITroop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    row\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionState\n                        \n                        \n                    \n                \n            \n            \n                \nselectionState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     0 | 1 | 2\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSelectAll\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSelectAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSelection\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSelection(team: ITroop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/club/troops/troops.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                                ITroop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allIndeterminate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troops.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troops.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troops.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDivision[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troops.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'ageGroup', 'genderGroup', 'members']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troops.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITroop[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troops.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troops.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubjectSource(new BehaviorSubject([]))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troops.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/club/troops/troops.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        teams\n                    \n                \n\n                \n                    \n                        getteams()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/club/troops/troops.component.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        teamCount\n                    \n                \n\n                \n                    \n                        getteamCount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/club/troops/troops.component.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        club\n                    \n                \n\n                \n                    \n                        getclub()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/club/troops/troops.component.ts:45\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { trigger, state, transition, style, animate } from '@angular/animations';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\nimport * as moment from 'moment';\nimport { startCase } from 'lodash';\n\nimport { ITroop, IUser, Role, IGymnast, Gender, IDivision } from 'app/model';\nimport { UserService, ConfigurationService } from 'app/shared/services/api';\nimport { ClubEditorComponent } from 'app/views/configure/club/club-editor/club-editor.component';\nimport { SubjectSource } from 'app/shared/services/subject-source';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { GraphService } from 'app/shared/services/graph.service';\n\n@Component({\n  selector: 'app-troops',\n  templateUrl: './troops.component.html',\n  styleUrls: ['./troops.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0', visibility: 'hidden', opacity: '0' })),\n      state('expanded', style({ height: '*', visibility: 'visible', opacity: '1' })),\n      transition('expanded  collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class TroopsComponent implements OnInit {\n  currentUser: IUser;\n  userSubscription: Subscription;\n\n  // selected: ITroop;\n  defaults: IDivision[] = [];\n\n  teamSource = new SubjectSource(new BehaviorSubject([]));\n  get teams() { return this.teamSource.subject.value || []; }\n  get teamCount(): number { return this.teams.length; }\n  displayedColumns = ['name', 'ageGroup', 'genderGroup', 'members'];\n\n  selectMode = false;\n  selection: ITroop[] = [];\n  allSelected = false;\n  allIndeterminate = false;\n\n  get club() {\n    return this.clubComponent.club;\n  }\n\n  constructor(\n    private userService: UserService,\n    private graph: GraphService,\n    private configuration: ConfigurationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private translate: TranslateService,\n    private clubComponent: ClubEditorComponent) { }\n\n  async ngOnInit() {\n    this.userSubscription = this.userService.getMe().subscribe(user => this.currentUser = user);\n    const defaults = await this.configuration.getByname('defaultValues').toPromise();\n    this.defaults = (typeof defaults.value === 'string' ? JSON.parse(defaults.value) : defaults.value).division;\n    this.clubComponent.clubSubject.subscribe(club => this.loadTeams());\n  }\n\n  loadTeams() {\n    this.graph.getData(`{getTroops(clubId:${this.club.id}){id,name,gymnasts{id,name,birthYear,gender}}}`).subscribe(res => this.onTeamsReceived(res.getTroops));\n  }\n\n  onTeamsReceived(teams: ITroop[]) {\n    this.teamSource.subject.next(teams);\n  }\n\n  ageDivision(team: ITroop): string {\n    const age = (birthYear) => moment().diff(moment(birthYear, 'YYYY'), 'years');\n    const ages: number[] = team.gymnasts.map(g => age(g.birthYear));\n    const minAge: number = Math.min(...ages);\n    const maxAge: number = Math.max(...ages);\n    const divisionMatch = this.defaults ? this.defaults.find(k => maxAge = k.min) : false;\n    return divisionMatch ? startCase(divisionMatch.name) : `${minAge} - ${maxAge}`;\n  }\n\n  genderDivision(team: ITroop): string {\n    if (team.gymnasts.every(g => g.gender === team.gymnasts[0].gender)) {\n      if (team.gymnasts.length > 0) {\n        return team.gymnasts[0].gender === Gender.Female\n          ? this.translate.instant('Women')\n          : this.translate.instant('Men');\n      }\n    }\n    return this.translate.instant('Mix');\n  }\n\n  members(team: ITroop) {\n    return team.gymnasts ? team.gymnasts.length : 0;\n  }\n\n  addTeam() {\n    if (this.currentUser.role >= Role.Admin || this.club.id === this.currentUser.club.id) {\n      this.router.navigate(['./add'], { relativeTo: this.route });\n    }\n  }\n\n  select(team: ITroop, row?: number) {\n    // this.teamSource.clearSelection();\n    if (team != null) {\n      if (this.currentUser.role >= Role.Admin || team.club.id === this.currentUser.club.id) {\n        this.router.navigate(['./', team.id], { relativeTo: this.route });\n      }\n    }\n  }\n\n  generateTeams() {\n    this.graph.getData(`{getGymnasts(clubId:${this.club.id}){id,name,gender,birthYear}}`).subscribe(res => {\n      const troopSize = 12;\n      const promises = [];\n\n      let teamCounter = this.teamCount;\n      const troops: ITroop[] = [];\n\n      // Create as many troops as possible from the given gymnasts\n      const createTroop = (available: IGymnast[]) => {\n        let troop = []; // Gymnast bucket\n        const saveTroop = (gymnasts) => {\n          troops.push({\n            name: this.club.name.split(' ')[0].toLowerCase() + '-' + ++teamCounter,\n            gymnasts: gymnasts,\n            club: this.club\n          });\n          troop = []; // reset gymnast bucket\n        };\n        available.forEach(member => {\n          if (troop.length === troopSize) { saveTroop(troop); }\n          troop.push(member);\n        });\n        // Make sure last troop is added\n        if (troop.length) { saveTroop(troop); }\n      };\n\n      // Generate gender troops, sorted by age\n      this.defaults.forEach(division => {\n        const divisionMembers = res.getGymnasts.filter(m => {\n          const age = moment().diff(moment(m.birthYear, 'YYYY'), 'years');\n          return age >= division.min && age  g.gender === Gender.Female));\n        createTroop(divisionMembers.filter(g => g.gender === Gender.Male));\n        createTroop(divisionMembers);\n      });\n      this.graph.saveData('Troop', troops, `{id,name}`).subscribe(result => this.onTeamsReceived(result.saveTroop));\n    });\n  }\n\n  onPress($event) {\n    $event.srcEvent.preventDefault();\n    $event.srcEvent.stopPropagation();\n    this.selectMode = !this.selectMode;\n    if (this.selectMode) {\n      this.displayedColumns.unshift('selector');\n    } else {\n      this.displayedColumns.splice(this.displayedColumns.indexOf('selector'), 1);\n    }\n  }\n\n  isSelected(team: ITroop) {\n    return this.selection.findIndex(t => t.id === team.id) > -1;\n  }\n\n  selectionState() {\n    if (this.selection.length === 0) { return 0; }\n    if (this.selection.length === this.teams.length) { return 1; }\n    if (this.selection.length > 0 && this.selection.length  t.id === team.id);\n    index > -1 ? this.selection.splice(index, 1) : this.selection.push(team);\n  }\n\n  toggleSelectAll() {\n    if (this.selection.length === 0 || this.selection.length  this.loadTeams());\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n  \n    {{'Name' | translate}}\n    {{ team.name }}\n  \n\n  \n  \n    {{'Age group' | translate}}\n    {{ ageDivision(team) }}\n  \n\n  \n  \n    {{'Gender group' | translate}}\n    {{ genderDivision(team) }}\n  \n\n  \n  \n    {{'Members' | translate}}\n    {{ members(team) }}\n  \n\n  \n  \n\n\n\n  \n  Add Team\n\n\n  \n  Generate teams from members\n\n\n  \n    \n    Delete all teams\n  \n\n\n  \n    \n    Delete selected teams\n  \n\n\n    \n\n    \n                \n                    ./troops.component.scss\n                \n                @import '../../../../../styles/variables';\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{\\'Name\\' | translate}}    {{ team.name }}          {{\\'Age group\\' | translate}}    {{ ageDivision(team) }}          {{\\'Gender group\\' | translate}}    {{ genderDivision(team) }}          {{\\'Members\\' | translate}}    {{ members(team) }}          Add Team    Generate teams from members          Delete all teams            Delete selected teams  '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'TroopsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/UniversalInterceptor.html":{"url":"interceptors/UniversalInterceptor.html","title":"interceptor - UniversalInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  UniversalInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/universal.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/universal.interceptor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                        Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/universal.interceptor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Request } from 'express';\nimport { REQUEST } from '@nguniversal/express-engine/tokens';\n\n@Injectable()\nexport class UniversalInterceptor implements HttpInterceptor {\n\n  constructor(@Optional() @Inject(REQUEST) protected request: Request) { }\n\n  intercept(req: HttpRequest, next: HttpHandler) {\n    let serverReq: HttpRequest = req;\n    if (this.request) {\n      let newUrl = `${this.request.protocol}://${this.request.get('host')}`;\n      if (!req.url.startsWith('/')) {\n        newUrl += '/';\n      }\n      newUrl += req.url;\n      serverReq = req.clone({ url: newUrl });\n    }\n    return next.handle(serverReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UrlActivity.html":{"url":"interfaces/UrlActivity.html","title":"interface - UrlActivity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UrlActivity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/load-spinner/load-indicator.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        type\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { BehaviorSubject, Observer, Subject } from 'rxjs';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { LoadSpinnerComponent } from './load-spinner.component';\n\nexport interface UrlActivity {\n  url: string;\n  type: string; // 'load' | 'save' | 'delete';\n  active: boolean;\n}\n@Injectable({ providedIn: 'root' })\nexport class LoadIndicatorService {\n  // Tells subscribers if the network has activity of a specific type or not.\n  public usingNetwork = new BehaviorSubject(false);\n  public isSaving = new BehaviorSubject(false);\n  public isDeleting = new BehaviorSubject(false);\n  public isLoading = new BehaviorSubject(false);\n\n  private currentLoad = []; // A list of urls currently loading from the network\n  private currentSave = []; // A list of urls currently post/put through the network\n  private currentDelete = []; // A list of urls currently deleting over the network\n\n  // Tells subscribers if the network is calling specific urls or not\n  private urlActivity = new EventEmitter();\n  private loadObservers = []; private loadObservable = [];\n  private saveObservers = []; private saveObservable = [];\n  private deleteObservers = []; private deleteObservable = [];\n  private methodToType = {\n    'GET': 'load',\n    'POST': 'save',\n    'PUT': 'save',\n    'DELETE': 'delete'\n  };\n  private dialogRef: MatDialogRef;\n\n  constructor(private dialog: MatDialog) {\n    this.usingNetwork.subscribe(val => {\n      setTimeout(() => {\n        if (!this.dialogRef && val) {\n          this.dialogRef = this.dialog.open(LoadSpinnerComponent, { panelClass: 'spinner' });\n        } else if (this.dialogRef && !val) {\n          this.dialogRef.close();\n          delete this.dialogRef;\n        }\n      });\n    });\n    this.urlActivity.subscribe((val: UrlActivity) => {\n\n    });\n  }\n\n  /**\n   * Package protected method called by the NetworInterceptor\n   *\n   */\n  protected addUrl(type: string, url: string) {\n    switch (type) {\n      case 'GET': this.currentLoad.push(url); break;\n      case 'POST':\n      case 'PUT': this.currentSave.push(url); break;\n      case 'DELETE': this.currentDelete.push(url); break;\n    }\n    this.urlActivity.emit({ url: url, type: this.methodToType[type], active: true });\n  }\n\n  /**\n   * Package protected method called by the NetworInterceptor\n   *\n   */\n  protected removeUrl(type: string, url: string) {\n    switch (type) {\n      case 'GET': this.currentLoad = this.currentLoad.filter(n => n !== url); break;\n      case 'POST':\n      case 'PUT': this.currentSave = this.currentSave.filter(n => n !== url); break;\n      case 'DELETE': this.currentDelete = this.currentSave.filter(n => n !== url); break;\n    }\n    this.urlActivity.emit({ url: url, type: this.methodToType[type], active: false });\n  }\n\n  // API to listen for activities on specific urls\n  isLoadingFrom(url: string) { return this.createNetworkActivityObservable(url, 'load'); }\n  isSavingFrom(url: string) { return this.createNetworkActivityObservable(url, 'save'); }\n  isDeletingFrom(url: string) { return this.createNetworkActivityObservable(url, 'delete'); }\n\n  /**\n   * Creates an observer, and places it in one of three assosiative arrays based on\n   * http method type, and with the url as key.\n   *\n   */\n  private createNetworkActivityObservable(url: string, type: string): Subject {\n    if (!this[type + 'Observable'][url]) {\n      // Observable is not created. Create one for this url and type\n      switch (type) {\n        case 'load': this.loadObservable[url] = this.addObserver(url, type); break;\n        case 'save': this.saveObservable[url] = this.addObserver(url, type); break;\n        case 'delete': this.deleteObservable[url] = this.addObserver(url, type); break;\n      }\n    }\n    // Return the observable\n    return this[type + 'Observable'][url];\n  }\n  private addObserver(url: string, type: string) {\n    return Subject.create((observer: Observer) => {\n      // A new observer is subscribing to this event. Add them to the list.\n\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserEditorComponent.html":{"url":"components/UserEditorComponent.html","title":"component - UserEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/users/user-editor/user-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-editor\n            \n\n            \n                styleUrls\n                ./user-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                dialogRef\n                            \n                            \n                                roles\n                            \n                            \n                                selectedUserId\n                            \n                            \n                                user\n                            \n                            \n                                userForm\n                            \n                            \n                                userQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                changePassword\n                            \n                            \n                                clubDisplay\n                            \n                            \n                                delete\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                toggleActive\n                            \n                            \n                                userReceived\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    roleNames\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, route: ActivatedRoute, router: Router, graph: GraphService, userService: UserService, meta: SEOService, errorHandler: ErrorHandlerService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        SEOService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:141\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \nchangePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clubDisplay\n                        \n                        \n                    \n                \n            \n            \n                \nclubDisplay(club: IClub)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    club\n                                    \n                                                IClub\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleActive\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            userReceived\n                        \n                        \n                    \n                \n            \n            \n                \nuserReceived(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Role\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedUserId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `{id,name,email,role,activated,clubId,club{id,name}}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        roleNames\n                    \n                \n\n                \n                    \n                        getroleNames()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/users/user-editor/user-editor.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, HostListener } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\n\nimport { UserService } from 'app/shared/services/api';\nimport { IUser, RoleNames, IClub, Role } from 'app/model';\nimport { ErrorHandlerService } from 'app/shared/interceptors/error-handler.service';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { PasswordComponent } from '../password/password.component';\nimport { SEOService } from 'app/shared/services/seo.service';\n\n@Component({\n  selector: 'app-user-editor',\n  templateUrl: './user-editor.component.html',\n  styleUrls: ['./user-editor.component.scss']\n})\nexport class UserEditorComponent implements OnInit {\n  userQuery = `{id,name,email,role,activated,clubId,club{id,name}}`;\n\n  currentUser: IUser;\n  userForm: FormGroup;\n  selectedUserId: number;\n  user: IUser = {};\n  get roleNames() {\n    return RoleNames.filter(r => r.id ;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private graph: GraphService,\n    private userService: UserService,\n    private meta: SEOService,\n    private errorHandler: ErrorHandlerService,\n    private dialog: MatDialog) { }\n\n  ngOnInit() {\n    // Create the form\n    this.userForm = this.fb.group({\n      id: [null],\n      name: ['', [Validators.required]],\n      role: [Role.User, [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      club: [null, []],\n      activated: [true, []]\n    });\n\n    this.userService.getMe().subscribe(async user => this.currentUser = user);\n\n    this.route.params.subscribe((params: any) => {\n      if (params.id) {\n        this.selectedUserId = params.id;\n        this.graph.get(`{user(id:${+params.id})${this.userQuery}}`, { context: { headers: { noReport: true } } }).toPromise()\n          .then(res => this.userReceived(res.data.user))\n          .catch(err => this.userReceived(err.data.user));\n      } else {\n        this.meta.setTitle(`Add user`, `Creating a new user in the system`);\n\n        if (this.currentUser.club) {\n          this.userForm.get('club').setValue(this.currentUser.club);\n        }\n      }\n    });\n  }\n\n  clubDisplay(club: IClub) {\n    return club && club.name ? club.name : club;\n  }\n\n  userReceived(user: IUser) {\n    if (this.currentUser.role  {\n      this.router.navigate(['../'], { relativeTo: this.route });\n    });\n  }\n\n  toggleActive() {\n    this.userForm.get('activated').setValue(!this.userForm.value.activated);\n    this.userForm.markAsDirty();\n  }\n\n  delete() {\n    this.errorHandler.clearError();\n    if (this.userForm.value.id !== this.currentUser.id) {\n      this.graph.deleteData('User', this.userForm.value.id).subscribe(result => {\n        this.router.navigate(['../'], { relativeTo: this.route });\n      });\n    }\n  }\n\n  cancel() {\n    this.router.navigate(['../'], { relativeTo: this.route }).then(success => {\n      if (!success) {\n        this.router.navigate(['../../'], { relativeTo: this.route });\n      }\n    });\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === 'Escape') {\n      this.cancel();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n      \n        {{ userForm.value.name || 'User' }}\n      \n    \n    \n      \n        \n          \n          \n            The name you want to use for logging in to your account\n          \n        \n        \n          \n            {{role.name}}\n          \n        \n      \n\n      \n        = roles.Admin ? 'col-xs-7' : 'col-xs-12') + ' help-available'\">\n          \n          \n            The email address you provide for us will be used to contact you in regards to activity on your account.\n            We may also contact you if a tournament opens up for registration, so you can enter your club to join\n          \n        \n        = roles.Admin\">\n          \n            \n              We need to know which club you represent in order to provide you with the appropriate privileges.\n            \n          \n        \n      \n      \n        \n          User is active\n          Activate user\n        \n      \n    \n\n    \n      \n      \n        Cancel\n      \n         Delete\n      \n      {{ 'Change password' | translate }}\n    \n  \n\n\n\n    \n\n    \n                \n                    ./user-editor.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{ userForm.value.name || \\'User\\' }}                                                            The name you want to use for logging in to your account                                                {{role.name}}                                      = roles.Admin ? \\'col-xs-7\\' : \\'col-xs-12\\') + \\' help-available\\'\">                                The email address you provide for us will be used to contact you in regards to activity on your account.            We may also contact you if a tournament opens up for registration, so you can enter your club to join                          = roles.Admin\">                                    We need to know which club you represent in order to provide you with the appropriate privileges.                                                            User is active          Activate user                                          Cancel               Delete            {{ \\'Change password\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/api/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _$currentUserObservable\n                            \n                            \n                                    Private\n                                _isLoadingUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _loadMeInternal\n                            \n                            \n                                    Private\n                                currentUserReceived\n                            \n                            \n                                getMe\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                tokenReceived\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUser\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, graph: GraphService, browser: BrowserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/api/user/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        browser\n                                                  \n                                                        \n                                                                        BrowserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _loadMeInternal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _loadMeInternal(noReport?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/user/user.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    noReport\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            currentUserReceived\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    currentUserReceived(response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/user/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMe\n                        \n                        \n                    \n                \n            \n            \n                \ngetMe(noReport?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/user/user.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    noReport\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(credentials: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/user/user.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/user/user.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tokenReceived\n                        \n                        \n                    \n                \n            \n            \n                \ntokenReceived(token: string, expiration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/api/user/user.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expiration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _$currentUserObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(JSON.parse(this.browser.sessionStorage().getItem('currentUser')))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/api/user/user.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _isLoadingUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/api/user/user.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n\n                \n                    \n                        getcurrentUser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/api/user/user.service.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { Logger } from 'app/shared/services';\nimport { IUser } from 'app/model';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { BrowserService } from 'app/shared/browser.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  private _isLoadingUser = false;\n  private _$currentUserObservable = new BehaviorSubject(JSON.parse(this.browser.sessionStorage().getItem('currentUser')));\n  public get currentUser(): IUser { return this._$currentUserObservable.getValue(); }\n\n  constructor(private http: HttpClient, private graph: GraphService, private browser: BrowserService) { }\n\n  // AUTH functions\n  /**\n   *\n   */\n  private currentUserReceived(response: HttpResponse) {\n    this._isLoadingUser = false;\n\n    // Set current user\n    const user = response ? response.body : null;\n    if (JSON.stringify(this.currentUser) !== JSON.stringify(user)) {\n      Logger.debug('%c** Changing user to', 'font-size: 1.1em; font-weight: bold; color: green', user);\n      this._$currentUserObservable.next(user);\n      this.browser.sessionStorage().removeItem('currentUser');\n    }\n\n    // Store token from header\n    if (response && response.headers && response.headers.has('Authorization')) {\n      this.tokenReceived(response.headers.get('Authorization'), parseInt(response.headers.get('expiration'), 10));\n    }\n\n    return this.currentUser;\n  }\n\n  tokenReceived(token: string, expiration: number) {\n    if (this.currentUser) {\n      this.currentUser.token = token;\n      this.currentUser.expire = expiration;\n      this.browser.sessionStorage().setItem('currentUser', JSON.stringify(this.currentUser));\n    }\n  }\n\n  /**\n   *\n   */\n  private _loadMeInternal(noReport?: boolean) {\n    const options = {};\n    if (noReport) { options['context'] = { headers: { noReport: true } }; }\n    return this.graph.get(`{me {id, name, role, email, club {id, name}}}`, options)\n      .pipe(map(res => this.currentUserReceived(res.me)),\n        catchError(err => {\n          this.currentUserReceived(null);\n          return throwError(err);\n        })\n      );\n  }\n\n  /**\n   *\n   */\n  getMe(noReport?: boolean): Observable {\n    if (!this.currentUser && !this._isLoadingUser) {\n      this._isLoadingUser = true; // Prevent loading if load allready initiated\n      this._loadMeInternal(noReport).subscribe();\n    }\n    return this._$currentUserObservable;\n  }\n\n  // Standard REST api functions\n  /**\n   *\n   */\n  login(credentials: { username: string, password: string }): Observable {\n    return this.http.post('/api/user/login', credentials, { observe: 'response' })\n      .pipe(map((res: HttpResponse) => this.currentUserReceived(res)));\n  }\n\n  /**\n   *\n   */\n  logout() {\n    return of(this.currentUserReceived(null));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/users/users.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                styleUrls\n                ./users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColumns\n                            \n                            \n                                userSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                roleName\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(graph: GraphService, seo: SEOService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/users/users.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seo\n                                                  \n                                                        \n                                                                        SEOService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/users.component.ts:38\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/users.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            roleName\n                        \n                        \n                    \n                \n            \n            \n                \nroleName(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/users/users.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'role', 'club']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/users/users.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubjectSource(new BehaviorSubject([]))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/users/users.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostListener } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { IUser, RoleNames } from 'app/model';\nimport { SubjectSource } from 'app/shared/services/subject-source';\nimport { GraphService } from 'app/shared/services/graph.service';\nimport { SEOService } from 'app/shared/services/seo.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  userSource = new SubjectSource(new BehaviorSubject([]));\n  displayColumns = ['name', 'role', 'club'];\n\n\n  constructor(\n    private graph: GraphService,\n    private seo: SEOService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.seo.setTitle('Configure users', `List all users by club`);\n    this.graph.getData(`{getUsers{id,name,role,club{id,name}}}`).subscribe(res => this.userSource.subject.next(res.getUsers));\n  }\n\n  roleName(user: IUser) {\n    return RoleNames.find(r => r.id === user.role).name;\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === '+' || evt.key === 'NumpadAdd') {\n      this.router.navigate(['./add'], { relativeTo: this.route });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  Users\n\n\n\n  \n    {{'Name' | translate}}\n    {{ user.name }}\n  \n  \n    {{'Role' | translate}}\n    {{ roleName(user) }}\n  \n  \n    {{'Club' | translate}}\n    {{ user.club ? user.club.name : '' }}\n  \n\n  \n  \n\n\n\n  \n  Add User\n\n\n    \n\n    \n                \n                    ./users.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Users      {{\\'Name\\' | translate}}    {{ user.name }}        {{\\'Role\\' | translate}}    {{ roleName(user) }}        {{\\'Club\\' | translate}}    {{ user.club ? user.club.name : \\'\\' }}          Add User'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPasswordComponent->UsersModule\n\n\n\n\n\nUserEditorComponent\n\nUserEditorComponent\n\nUsersModule -->\n\nUserEditorComponent->UsersModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUsersModule -->\n\nSharedModule->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/configure/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PasswordComponent\n                        \n                        \n                            UserEditorComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            PasswordComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  MatSortModule, MatCardModule, MatFormFieldModule, MatInputModule, MatSelectModule,\n  MatOptionModule, MatAutocompleteModule, MatButtonModule, MatTableModule, MatDialogModule, MatSlideToggleModule\n} from '@angular/material';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport { UsersComponent } from './users.component';\nimport { UserEditorComponent } from './user-editor/user-editor.component';\nimport { PasswordComponent } from './password/password.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n\n    MatSortModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSlideToggleModule,\n\n    SharedModule\n  ],\n  declarations: [\n    UsersComponent,\n    UserEditorComponent,\n    PasswordComponent\n  ],\n  entryComponents: [\n    PasswordComponent\n  ]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UtcDatePipe.html":{"url":"pipes/UtcDatePipe.html","title":"pipe - UtcDatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  UtcDatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/utc-date.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        utcDate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, args?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/utc-date.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { utc } from 'moment';\n\n@Pipe({ name: 'utcDate' })\nexport class UtcDatePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return utc(value).format(args || 'DD.MM.YYYY');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VenueComponent.html":{"url":"components/VenueComponent.html","title":"component - VenueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VenueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/venue/venue.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-venue\n            \n\n            \n                styleUrls\n                ./venue.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./venue.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayedColumns\n                            \n                            \n                                venueSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(graph: GraphService, userService: UserService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/venue/venue.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/venue/venue.component.ts:31\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/venue/venue.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'contact', 'rentalCost', 'address']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/venue/venue.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            venueSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubjectSource(new BehaviorSubject([]))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/venue/venue.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostListener } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { IVenue, Role } from 'app/model';\nimport { UserService } from 'app/shared/services/api';\nimport { SubjectSource } from 'app/shared/services/subject-source';\nimport { GraphService } from 'app/shared/services/graph.service';\n\n@Component({\n  selector: 'app-venue',\n  templateUrl: './venue.component.html',\n  styleUrls: ['./venue.component.scss']\n})\nexport class VenueComponent implements OnInit {\n  venueSource = new SubjectSource(new BehaviorSubject([]));\n  displayedColumns = ['name', 'contact', 'rentalCost', 'address'];\n\n  constructor(\n    private graph: GraphService,\n    private userService: UserService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.graph.getData(`{getVenues{id,name,contact,rentalCost,address,createdBy{id,name}}}`).subscribe(res => this.venueSource.subject.next(res.getVenues));\n    this.userService.getMe().subscribe(me => me.role >= Role.Admin ? this.displayedColumns.push('createdBy') : null);\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === '+' || evt.key === 'NumpadAdd') {\n      this.router.navigate(['./add'], { relativeTo: this.route });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  Venue\n\n\n\n  \n    {{'Name' | translate}}\n    {{ venue.name }}\n  \n  \n    {{'Contact' | translate}}\n    {{ venue.contact }}\n  \n  \n    {{'Rental cost' | translate}}\n    {{ venue.rentalCost }}\n  \n  \n    {{'Address' | translate}}\n    {{ venue.address }}\n  \n  \n    {{'Created by' | translate}}\n    {{ venue.createdBy.name }}\n  \n\n  \n  \n\n\n\n  \n  Add Venue\n\n\n    \n\n    \n                \n                    ./venue.component.scss\n                \n                .mat-column-name {\n  max-width: 10rem;\n}\n.mat-column-createdBy {\n  max-width: 6rem;\n}\n.mat-column-rentalCost {\n  max-width: 6rem;\n}\n.mat-column-contact {\n  max-width: 11rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Venue      {{\\'Name\\' | translate}}    {{ venue.name }}        {{\\'Contact\\' | translate}}    {{ venue.contact }}        {{\\'Rental cost\\' | translate}}    {{ venue.rentalCost }}        {{\\'Address\\' | translate}}    {{ venue.address }}        {{\\'Created by\\' | translate}}    {{ venue.createdBy.name }}          Add Venue'\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'VenueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VenueEditorComponent.html":{"url":"components/VenueEditorComponent.html","title":"component - VenueEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VenueEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/configure/venue/venue-editor/venue-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-venue-editor\n            \n\n            \n                styleUrls\n                ./venue-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./venue-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adressList\n                            \n                            \n                                selectedVenue\n                            \n                            \n                                venueForm\n                            \n                            \n                                venueQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                createTournament\n                            \n                            \n                                delete\n                            \n                            \n                                markerDragEnd\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                            \n                                setSelectedAddress\n                            \n                            \n                                tabOut\n                            \n                            \n                                venueReceived\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    venueName\n                                \n                                \n                                    latitude\n                                \n                                \n                                    longitude\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, route: ActivatedRoute, translate: TranslateService, graph: GraphService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graph\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(evt: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:141\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTournament\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTournament()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            markerDragEnd\n                        \n                        \n                    \n                \n            \n            \n                \nmarkerDragEnd($event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedAddress\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedAddress(v: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tabOut\n                        \n                        \n                    \n                \n            \n            \n                \ntabOut(typeahead: MatAutocomplete)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeahead\n                                    \n                                            MatAutocomplete\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            venueReceived\n                        \n                        \n                    \n                \n            \n            \n                \nvenueReceived(venue: IVenue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    venue\n                                    \n                                                IVenue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adressList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedVenue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IVenue\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            venueForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            venueQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `{\n    id,\n    name,\n    longitude,\n    latitude,\n    address,\n    rentalCost,\n    contact,\n    contactPhone,\n    contactEmail,\n    capacity,\n    createdBy{id,name}\n  }`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        venueName\n                    \n                \n\n                \n                    \n                        getvenueName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n\n                \n                    \n                        getlatitude()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:41\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n\n                \n                    \n                        getlongitude()\n                    \n                \n                            \n                                \n                                    Defined in src/app/views/configure/venue/venue-editor/venue-editor.component.ts:48\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, HostListener } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { IVenue } from 'app/model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatAutocompleteSelectedEvent, MatAutocomplete } from '@angular/material';\nimport { distinctUntilChanged, debounceTime } from 'rxjs/operators';\nimport { GraphService } from '../../../../shared/services/graph.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-venue-editor',\n  templateUrl: './venue-editor.component.html',\n  styleUrls: ['./venue-editor.component.scss']\n})\nexport class VenueEditorComponent implements OnInit {\n  venueForm: FormGroup;\n  selectedVenue: IVenue = {};\n  adressList = [];\n  venueQuery = `{\n    id,\n    name,\n    longitude,\n    latitude,\n    address,\n    rentalCost,\n    contact,\n    contactPhone,\n    contactEmail,\n    capacity,\n    createdBy{id,name}\n  }`;\n\n  get venueName() {\n    let venueName = this.venueForm && this.venueForm.getRawValue().name ? this.venueForm.getRawValue().name : this.selectedVenue.name;\n    if (!venueName) { venueName = this.translate.instant('Add Venue'); }\n    return venueName;\n  }\n\n  get latitude(): number {\n    if (this.venueForm && this.venueForm.getRawValue().latitude) {\n      return parseFloat(this.venueForm.getRawValue().latitude);\n    }\n    return 0;\n  }\n\n  get longitude(): number {\n    if (this.venueForm && this.venueForm.getRawValue().longitude) {\n      return parseFloat(this.venueForm.getRawValue().longitude);\n    }\n    return 0;\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private translate: TranslateService,\n    private graph: GraphService,\n    private http: HttpClient\n  ) { }\n\n  ngOnInit() {\n    this.venueForm = this.fb.group({\n      id: [null, []],\n      createdBy: [null, []],\n      name: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      longitude: [{ value: 0.0, disabled: true }, [Validators.required]],\n      latitude: [{ value: 0.0, disabled: true }, [Validators.required]],\n      contact: ['', [Validators.required]],\n      contactPhone: ['', [Validators.required, Validators.minLength(8)]],\n      contactEmail: ['', [Validators.required, Validators.email]],\n      capacity: [0, []],\n      rentalCost: [0, []],\n    });\n    // Read filtered options\n    const addressCtrl = this.venueForm.controls['address'];\n    addressCtrl.valueChanges\n      .pipe(\n        distinctUntilChanged(),\n        debounceTime(200)  // Do not hammer http request. Wait until user has typed a bit\n      ).subscribe(v => this.http.get(`/api/venue/location/${encodeURIComponent(v)}`)\n        .subscribe((result: any) => this.adressList = result.results.map(r => ({ formatted_address: r.formatted_address, geometry: r.geometry }))));\n\n    this.route.params.subscribe(params => {\n      if (params.id) {\n        this.graph.getData(`{venue(id:${+params.id})${this.venueQuery}}`).subscribe(res => this.venueReceived(res.venue));\n      }\n    });\n    this.route.queryParams.subscribe(params => {\n      if (params.fromName) {\n        this.venueForm.controls['name'].setValue(params.fromName);\n      }\n    });\n  }\n\n  venueReceived(venue: IVenue) {\n    this.selectedVenue = venue;\n    const val = Object.keys(this.venueForm.controls).reduce((obj, k) => { obj[k] = venue[k]; return obj; }, {});\n    this.venueForm.setValue(val);\n  }\n\n  setSelectedAddress(v: MatAutocompleteSelectedEvent) {\n    this.venueForm.controls['address'].setValue(v.option.value.formatted_address);\n    this.venueForm.controls['latitude'].setValue(v.option.value.geometry.location.lat);\n    this.venueForm.controls['longitude'].setValue(v.option.value.geometry.location.lng);\n  }\n\n  markerDragEnd($event: MouseEvent) {\n    this.venueForm.controls['latitude'].setValue($event['coords'].lat);\n    this.venueForm.controls['longitude'].setValue($event['coords'].lng);\n  }\n\n  createTournament() {\n    this.router.navigate([`../../tournament/add`], { queryParams: { fromVenue: this.venueForm.value.id }, relativeTo: this.route });\n  }\n\n  save() {\n    this.graph.saveData('Venue', this.venueForm.getRawValue(), this.venueQuery).subscribe(res => this.cancel());\n  }\n\n  cancel() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  delete() {\n    this.graph.deleteData('Venue', this.venueForm.value.id).subscribe(res => this.cancel);\n  }\n\n  tabOut(typeahead: MatAutocomplete) {\n    const active = typeahead.options.find(o => o.active);\n    if (active) {\n      active.select();\n      typeahead._emitSelectEvent(active);\n    }\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(evt: KeyboardEvent) {\n    if (evt.key === 'Escape') {\n      this.cancel();\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n      \n      \n        {{ venueName }}\n      \n    \n\n    \n      \n        \n          \n          \n            This name will be displayed everywhere this venue is referred.\n          \n        \n      \n\n      \n        \n          \n          \n            \n              {{ address.formatted_address }}\n            \n          \n          \n            We need the address of the venue. By typing in this field, we will automatically lookup the geo-location of the venue.\n          \n        \n        \n          \n            \n              \n              \n                The longitude of the venue. This is 1/2 of the results from the geo-lookup made by typing in the address.\n              \n            \n            \n              \n              \n                The latitude of the venue. This is 1/2 of the results from the geo-lookup made by typing in the address.\n              \n            \n          \n        \n      \n\n      \n        \n          \n          \n            The name of a person responsible for this venue. This is the person you want to contact if you want to rent this venue for events.\n          \n        \n        \n          \n          \n            Phone number of the contact\n          \n        \n        \n          \n          \n            The email address of the contact\n          \n        \n      \n\n      \n        \n          \n          \n            This is the rental cost for the venue, as negotiated.\n          \n        \n      \n\n      \n        \n          \n          \n            The audience capacity for this venue. This will play a part in calculating cost and revenue.\n          \n        \n      \n    \n\n    \n      \n       Cancel\n      \n         Create tournament here\n      \n      \n         Delete\n      \n    \n\n    \n      \n        \n          \n            {{ venueForm.value.name }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./venue-editor.component.scss\n                \n                agm-map {\n  height: 300px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{ venueName }}                                                            This name will be displayed everywhere this venue is referred.                                                                                    {{ address.formatted_address }}                                            We need the address of the venue. By typing in this field, we will automatically lookup the geo-location of the venue.                                                                                            The longitude of the venue. This is 1/2 of the results from the geo-lookup made by typing in the address.                                                                                  The latitude of the venue. This is 1/2 of the results from the geo-lookup made by typing in the address.                                                                                                The name of a person responsible for this venue. This is the person you want to contact if you want to rent this venue for events.                                                          Phone number of the contact                                                          The email address of the contact                                                                      This is the rental cost for the venue, as negotiated.                                                                      The audience capacity for this venue. This will play a part in calculating cost and revenue.                                             Cancel               Create tournament here                     Delete                                                  {{ venueForm.value.name }}                              '\n    var COMPONENTS = [{'name': 'AdvancedComponent', 'selector': 'app-advanced'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AwardsComponent', 'selector': 'app-awards'},{'name': 'ClubComponent', 'selector': 'app-club'},{'name': 'ClubEditorComponent', 'selector': 'app-club-editor'},{'name': 'ClubLookupComponent', 'selector': 'app-club-lookup'},{'name': 'ConfigureComponent', 'selector': 'app-configure'},{'name': 'ConfigureDisplayComponent', 'selector': 'app-configure-display'},{'name': 'ContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DisciplineEditorComponent', 'selector': 'app-discipline-editor'},{'name': 'DisciplinesComponent', 'selector': 'app-disciplines'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'DivisionEditorComponent', 'selector': 'app-division-editor'},{'name': 'DivisionLookupComponent', 'selector': 'app-division-lookup'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'FullscreenComponent', 'selector': 'app-fullscreen'},{'name': 'HelpBlockComponent', 'selector': 'app-help-block'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadSpinnerComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MacroDialogComponent', 'selector': 'app-macro-dialog'},{'name': 'MediaComponent', 'selector': 'app-media'},{'name': 'MediaControlComponent', 'selector': 'app-media-control'},{'name': 'MemberEditorComponent', 'selector': 'app-member-editor'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MemberSelectorComponent', 'selector': 'app-member-selector'},{'name': 'MultirangeComponent', 'selector': 'app-multirange'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetComponent', 'selector': 'app-reset'},{'name': 'ResultsComponent', 'selector': 'app-results'},{'name': 'SaveButtonComponent', 'selector': 'app-save-button'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'},{'name': 'ScorecardsComponent', 'selector': 'app-scorecards'},{'name': 'ScoreEditorComponent', 'selector': 'app-score-editor'},{'name': 'ScoreGroupEditorComponent', 'selector': 'app-score-group-editor'},{'name': 'ScoreSystemComponent', 'selector': 'app-score-system'},{'name': 'SignoffReportComponent', 'selector': 'app-signoff-report'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'TeamEditorComponent', 'selector': 'app-team-editor'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'TournamentEditorComponent', 'selector': 'app-tournament-editor'},{'name': 'TroopEditorComponent', 'selector': 'app-troop-editor'},{'name': 'TroopsComponent', 'selector': 'app-troops'},{'name': 'UserEditorComponent', 'selector': 'app-user-editor'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'VenueComponent', 'selector': 'app-venue'},{'name': 'VenueEditorComponent', 'selector': 'app-venue-editor'}];\n    var DIRECTIVES = [{'name': 'IfAuthDirective', 'selector': '[appIfAuth]'},{'name': 'ToCaseDirective', 'selector': 'input[appToCase]'}];\n    var ACTUAL_COMPONENT = {'name': 'VenueEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VenueModule.html":{"url":"modules/VenueModule.html","title":"module - VenueModule","body":"\n                   \n\n\n\n\n    Modules\n    VenueModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VenueModule\n\n\n\ncluster_VenueModule_declarations\n\n\n\ncluster_VenueModule_imports\n\n\n\n\nVenueComponent\n\nVenueComponent\n\n\n\nVenueModule\n\nVenueModule\n\nVenueModule -->\n\nVenueComponent->VenueModule\n\n\n\n\n\nVenueEditorComponent\n\nVenueEditorComponent\n\nVenueModule -->\n\nVenueEditorComponent->VenueModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nVenueModule -->\n\nSharedModule->VenueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/views/configure/venue/venue.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VenueComponent\n                        \n                        \n                            VenueEditorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AgmCoreModule } from '@agm/core';\nimport {\n  MatSortModule, MatCardModule, MatFormFieldModule, MatInputModule, MatAutocompleteModule, MatOptionModule, MatButtonModule, MatTableModule\n} from '@angular/material';\n\nimport { SharedModule } from 'app/shared/shared.module';\n\nimport { VenueComponent } from './venue.component';\nimport { VenueEditorComponent } from './venue-editor/venue-editor.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    ReactiveFormsModule,\n    AgmCoreModule,\n\n    MatSortModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatOptionModule,\n    MatButtonModule,\n    MatTableModule,\n\n    RouterModule,\n  ],\n  declarations: [VenueComponent, VenueEditorComponent]\n})\nexport class VenueModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            injectable\n            MyHammerConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            tokenGetter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            createApollo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            graphqlSubUri\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            graphqlUri\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/IBelongsToClub.ts\n            \n            interface\n            IBelongsToClub\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/IClub.ts\n            \n            interface\n            IClub\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/model/IConfiguration.ts\n            \n            interface\n            IConfiguration\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/ICreatedBy.ts\n            \n            interface\n            ICreatedBy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/IDiscipline.ts\n            \n            interface\n            IDiscipline\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/model/IDivision.ts\n            \n            interface\n            IDivision\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/model/IGymnast.ts\n            \n            interface\n            IGymnast\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/model/IJudge.ts\n            \n            class\n            Judge\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/model/IJudge.ts\n            \n            interface\n            IJudge\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/model/IJudgeInScoreGroup.ts\n            \n            interface\n            IJudgeInScoreGroup\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/model/IMedia.ts\n            \n            interface\n            IMedia\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/model/IScore.ts\n            \n            interface\n            IScore\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/model/IScoreGroup.ts\n            \n            interface\n            IScoreGroup\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/model/ITeam.ts\n            \n            interface\n            ITeam\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/model/ITeamInDiscipline.ts\n            \n            interface\n            ITeamInDiscipline\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/model/ITeamInDiscipline.ts\n            \n            interface\n            TotalByScoreGroup\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/ITournament.ts\n            \n            interface\n            ITournament\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/model/ITournament.ts\n            \n            interface\n            ITournamentTimes\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/model/ITroop.ts\n            \n            interface\n            ITroop\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/model/IUser.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/model/IUser.ts\n            \n            variable\n            RoleNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/IVenue.ts\n            \n            interface\n            IVenue\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/browser.service.ts\n            \n            injectable\n            BrowserService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/shared/browser.service.ts\n            \n            variable\n            storageMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/club-lookup/club-lookup.component.ts\n            \n            component\n            ClubLookupComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/shared/components/dialog/dialog.component.ts\n            \n            component\n            DialogComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/shared/components/error-dialog/error-dialog.component.ts\n            \n            component\n            ErrorDialogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/components/help-block/help-block.component.ts\n            \n            component\n            HelpBlockComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/load-spinner/load-indicator.service.ts\n            \n            injectable\n            LoadIndicatorService\n            \n                12 %\n                (3/25)\n            \n        \n        \n            \n                \n                src/app/shared/components/load-spinner/load-indicator.service.ts\n            \n            interface\n            UrlActivity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/components/load-spinner/load-spinner.component.ts\n            \n            component\n            LoadSpinnerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/components/media-control/media-control.component.ts\n            \n            component\n            MediaControlComponent\n            \n                21 %\n                (5/23)\n            \n        \n        \n            \n                \n                src/app/shared/components/multirange/multirange.component.ts\n            \n            component\n            MultirangeComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/shared/components/save-button/save-button.component.ts\n            \n            component\n            SaveButtonComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/directives/auth/if-auth.directive.ts\n            \n            directive\n            IfAuthDirective\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/directives/to-uppercase/to-uppercase.directive.ts\n            \n            directive\n            ToCaseDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/directives/to-uppercase/to-uppercase.directive.ts\n            \n            function\n            toLowerCaseTransformer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/directives/to-uppercase/to-uppercase.directive.ts\n            \n            function\n            toUpperCaseTransformer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/directives/to-uppercase/to-uppercase.directive.ts\n            \n            variable\n            CASE_INPUT_CONTROL_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/guards/role-guard.ts\n            \n            interface\n            RoleData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/guards/role-guard.ts\n            \n            guard\n            RoleGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/error-handler.service.ts\n            \n            injectable\n            ErrorHandlerService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/http-action.model.ts\n            \n            interface\n            HttpAction\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/http-cache.interceptor.ts\n            \n            interceptor\n            HttpCacheInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/http-cache.service.ts\n            \n            injectable\n            HttpCacheService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/http-state.service.ts\n            \n            injectable\n            HttpStateService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/universal.interceptor.ts\n            \n            interceptor\n            UniversalInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/order-by.pipe.ts\n            \n            pipe\n            OrderByPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/utc-date.pipe.ts\n            \n            pipe\n            UtcDatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/Logger.ts\n            \n            class\n            Logger\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/api/configuration/configuration.service.ts\n            \n            injectable\n            ConfigurationService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/services/api/display/display.service.ts\n            \n            injectable\n            DisplayService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/api/schedule/schedule.service.ts\n            \n            injectable\n            ScheduleService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/services/api/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/services/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/services/expansion-source.ts\n            \n            class\n            ExpansionSource\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/shared/services/expansion-source.ts\n            \n            interface\n            ExpansionRow\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/graph.service.ts\n            \n            injectable\n            GraphService\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/shared/services/index.ts\n            \n            variable\n            noop\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/media.service.ts\n            \n            injectable\n            MediaService\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/shared/services/seo.service.ts\n            \n            injectable\n            SEOService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/subject-source.ts\n            \n            class\n            SubjectSource\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/views/configure/_shared/division-lookup/division-lookup.component.ts\n            \n            component\n            DivisionLookupComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/views/configure/_shared/member-selector/member-selector.component.ts\n            \n            component\n            MemberSelectorComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/views/configure/advanced/advanced.component.ts\n            \n            component\n            AdvancedComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/views/configure/club/club-editor/club-editor.component.ts\n            \n            component\n            ClubEditorComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/views/configure/club/club.component.ts\n            \n            component\n            ClubComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/views/configure/club/media/media.component.ts\n            \n            component\n            MediaComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/views/configure/club/members/member-editor/member-editor.component.ts\n            \n            component\n            MemberEditorComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/views/configure/club/members/member-state.service.ts\n            \n            injectable\n            MemberStateService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/views/configure/club/members/members.component.ts\n            \n            component\n            MembersComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/views/configure/club/statistics/statistics.component.ts\n            \n            component\n            StatisticsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/views/configure/club/troops/troop-editor/troop-editor.component.ts\n            \n            component\n            TroopEditorComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/views/configure/club/troops/troops.component.ts\n            \n            component\n            TroopsComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/views/configure/configure.component.ts\n            \n            component\n            ConfigureComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/views/configure/display/configure-display.component.ts\n            \n            component\n            ConfigureDisplayComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/views/configure/display/macro-dialog/macro-dialog.component.ts\n            \n            component\n            MacroDialogComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/views/configure/tournament/awards/awards.component.ts\n            \n            component\n            AwardsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/views/configure/tournament/disciplines/discipline-editor/discipline-editor.component.ts\n            \n            component\n            DisciplineEditorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/views/configure/tournament/disciplines/disciplines.component.ts\n            \n            component\n            DisciplinesComponent\n            \n                4 %\n                (1/24)\n            \n        \n        \n            \n                \n                src/app/views/configure/tournament/divisions/division-editor/division-editor.component.ts\n            \n            component\n            DivisionEditorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/views/configure/tournament/divisions/divisions.component.ts\n            \n            component\n            DivisionsComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/views/configure/tournament/info/info.component.ts\n            \n            component\n            InfoComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/views/configure/tournament/schedule/schedule.component.ts\n            \n            component\n            ScheduleComponent\n            \n                5 %\n                (2/36)\n            \n        \n        \n            \n                \n                src/app/views/configure/tournament/score-system/score-group-editor/score-group-editor.component.ts\n            \n            component\n            ScoreGroupEditorComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/views/configure/tournament/score-system/score-system.component.ts\n            \n            component\n            ScoreSystemComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/views/configure/tournament/scorecards/scorecards.component.ts\n            \n            component\n            ScorecardsComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/views/configure/tournament/teams/team-editor/team-editor.component.ts\n            \n            component\n            TeamEditorComponent\n            \n                0 %\n                (0/35)\n            \n        \n        \n            \n                \n                src/app/views/configure/tournament/teams/teams.component.ts\n            \n            component\n            TeamsComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/views/configure/tournament/tournament-editor/tournament-editor.component.ts\n            \n            component\n            TournamentEditorComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/views/configure/tournament/tournament.component.ts\n            \n            component\n            TournamentComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/views/configure/users/password/password.component.ts\n            \n            component\n            PasswordComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/views/configure/users/user-editor/user-editor.component.ts\n            \n            component\n            UserEditorComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/views/configure/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/views/configure/venue/venue-editor/venue-editor.component.ts\n            \n            component\n            VenueEditorComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/views/configure/venue/venue.component.ts\n            \n            component\n            VenueComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/views/event/display/display.component.ts\n            \n            component\n            DisplayComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/views/event/display/fullscreen/fullscreen.component.ts\n            \n            component\n            FullscreenComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/views/event/event.component.ts\n            \n            component\n            EventComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/views/event/list/IScoreContainer.ts\n            \n            class\n            ScoreContainer\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/views/event/list/IScoreContainer.ts\n            \n            interface\n            IScoreContainer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/views/event/list/context-menu/context-menu.component.ts\n            \n            component\n            ContextMenuComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/views/event/list/list.component.ts\n            \n            component\n            ListComponent\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                src/app/views/event/list/list.component.ts\n            \n            interface\n            ParticipantCache\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/views/event/list/score-editor/score-editor.component.ts\n            \n            component\n            ScoreEditorComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/views/event/results/results.component.ts\n            \n            component\n            ResultsComponent\n            \n                8 %\n                (2/24)\n            \n        \n        \n            \n                \n                src/app/views/event/signoff-report/signoff-report.component.ts\n            \n            component\n            SignoffReportComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/views/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/views/home/home.component.ts\n            \n            interface\n            TournamentType\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/views/home/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/views/home/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/views/home/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/views/home/register/registration-activation.guard.ts\n            \n            guard\n            CanActivateRegistration\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/views/home/reset/reset.component.ts\n            \n            component\n            ResetComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.6\n        \n            @angular/animations : ^8.0.2\n        \n            @angular/cdk : ^8.0.1\n        \n            @angular/common : ^8.0.2\n        \n            @angular/compiler : ^8.0.2\n        \n            @angular/core : ^8.0.2\n        \n            @angular/forms : ^8.0.2\n        \n            @angular/material : ^8.0.1\n        \n            @angular/platform-browser : ^8.0.2\n        \n            @angular/platform-browser-dynamic : ^8.0.2\n        \n            @angular/platform-server : ^8.0.2\n        \n            @angular/pwa : ^0.800.3\n        \n            @angular/router : ^8.0.2\n        \n            @angular/service-worker : ^8.0.2\n        \n            @auth0/angular-jwt : ^2.1.0\n        \n            @nguniversal/express-engine : ^7.1.1\n        \n            @nguniversal/module-map-ngfactory-loader : ^7.1.1\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            angulartics2 : ^7.5.2\n        \n            apollo-angular : ^1.6.0\n        \n            apollo-angular-link-http : ^1.8.0\n        \n            apollo-angular-link-http-batch : ^1.7.0\n        \n            apollo-cache-inmemory : ^1.6.2\n        \n            apollo-client : ^2.6.3\n        \n            apollo-link : ^1.2.12\n        \n            apollo-link-ws : ^1.0.18\n        \n            core-js : ^3.1.4\n        \n            event-source-polyfill : ^1.0.5\n        \n            express : ^4.17.1\n        \n            flag-icon-css : ^3.3.0\n        \n            font-awesome : ^4.7.0\n        \n            graphql : ^14.3.1\n        \n            graphql-tag : ^2.10.1\n        \n            hammerjs : ^2.0.8\n        \n            http-proxy-middleware : ^0.19.1\n        \n            markdown-to-html-pipe : ^1.2.5\n        \n            moment : ^2.24.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^6.5.2\n        \n            snyk : ^1.179.1\n        \n            subscriptions-transport-ws : ^0.9.16\n        \n            zone.js : ^0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Classes   (src/.../Classes.ts)\n                        \n                        \n                            DivisionType   (src/.../DivisionType.ts)\n                        \n                        \n                            Gender   (src/.../Gender.ts)\n                        \n                        \n                            HttpMethod   (src/.../http-method.ts)\n                        \n                        \n                            Operation   (src/.../Operation.ts)\n                        \n                        \n                            ParticipationType   (src/.../ParticipationType.ts)\n                        \n                        \n                            Role   (src/.../IUser.ts)\n                        \n                        \n                            Type   (src/.../register.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model/Classes.ts\n    \n        \n            \n                \n                    \n                        \n                        Classes\n                    \n                \n                        \n                            \n                                 TeamGym\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 National\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/app/model/DivisionType.ts\n    \n        \n            \n                \n                    \n                        \n                        DivisionType\n                    \n                \n                        \n                            \n                                 Age\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Gender\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/app/model/Gender.ts\n    \n        \n            \n                \n                    \n                        \n                        Gender\n                    \n                \n                        \n                            \n                                 Male\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Female\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/app/shared/interceptors/http-method.ts\n    \n        \n            \n                \n                    \n                        \n                        HttpMethod\n                    \n                \n                        \n                            \n                                 Get\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 Post\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Put\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Delete\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 Options\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 Head\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 Patch\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    src/app/model/Operation.ts\n    \n        \n            \n                \n                    \n                        \n                        Operation\n                    \n                \n                        \n                            \n                                 Addition\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Subtraction\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/app/model/ParticipationType.ts\n    \n        \n            \n                \n                    \n                        \n                        ParticipationType\n                    \n                \n                        \n                            \n                                 Training\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Live\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/app/model/IUser.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : 99\n                            \n                        \n                        \n                            \n                                 Organizer\n                            \n                        \n                        \n                            \n                                Value : 90\n                            \n                        \n                        \n                            \n                                 Secretariat\n                            \n                        \n                        \n                            \n                                Value : 80\n                            \n                        \n                        \n                            \n                                 Club\n                            \n                        \n                        \n                            \n                                Value : 50\n                            \n                        \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n            \n        \n\n    src/app/views/home/register/register.component.ts\n    \n        \n            \n                \n                    \n                        \n                        Type\n                    \n                \n                        \n                            \n                                 Organizer\n                            \n                        \n                        \n                            \n                                 Club\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createApollo   (src/.../graphql.module.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.module.ts)\n                        \n                        \n                            tokenGetter   (src/.../app.module.ts)\n                        \n                        \n                            toLowerCaseTransformer   (src/.../to-uppercase.directive.ts)\n                        \n                        \n                            toUpperCaseTransformer   (src/.../to-uppercase.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/graphql.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createApollo\n                        \n                        \n                    \n                \n            \n            \n                \ncreateApollo(httpLink)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpLink\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            HttpLoaderFactory\n                        \n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tokenGetter\n                        \n                        \n                    \n                \n            \n            \n                \ntokenGetter()\n                \n            \n\n\n\n\n        \n    \n    src/app/shared/directives/to-uppercase/to-uppercase.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            toLowerCaseTransformer\n                        \n                        \n                    \n                \n            \n            \n                \ntoLowerCaseTransformer(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toUpperCaseTransformer\n                        \n                        \n                    \n                \n            \n            \n                \ntoUpperCaseTransformer(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGymsystems/Client\n\nThis project is using Angular Framework. We use angular-cli for both scaffolding and building our project. This seems to be the best and most efficient way of reaching our goal.\nInstall\nbash\nyarn install\nRun\nbash\nyarn client\nThis will run a continuous build and browsersync session for the frontend. Use this if you are developing the client. This starts up a small development server on localhost:4200, with a proxy to the backend so all api calls will work seamlessly.\nDebug\nYou can debug this project using VsCode. There's a launch configuration Client attached which will pull up a detached Chrome instance, and breakpoints can be set directly in VsCode.\nYou can also debug the unit tests using a launch configuration called Client Test.\nTests\nUnit tests\nThe project contains unit tests for every component, directive, pipe and service. We run the unit tests on every github push, so we don't break anything before a deploy - which is also triggered by a github push. In order to run them manually:\nyarn test\nE2E tests\nWe've also added end to end integration tests served using protractor and a separate database structure. The following will setup a docker container with a clean mysql database setup with default data. It will start up a server with a minimum of logging, so as not to clutter test output, and finally it will run the selenium driven protractor tests in a chrome instance.\nyarn e2e\nThe database will be dropped when the tests complete. If it for any reason should still persist (you can check using docker ps), you can clean up using\nyarn poste2e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdvancedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigureModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigureRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigureSharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DisciplinesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DivisionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScoreSystemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VenueModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdvancedModule\n\n\n\ncluster_AdvancedModule_declarations\n\n\n\ncluster_AdvancedModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_providers\n\n\n\ncluster_ClubModule\n\n\n\ncluster_ClubModule_declarations\n\n\n\ncluster_ClubModule_imports\n\n\n\ncluster_ClubModule_providers\n\n\n\ncluster_ConfigureModule\n\n\n\ncluster_ConfigureModule_declarations\n\n\n\ncluster_ConfigureModule_imports\n\n\n\ncluster_ConfigureSharedModule\n\n\n\ncluster_ConfigureSharedModule_declarations\n\n\n\ncluster_ConfigureSharedModule_exports\n\n\n\ncluster_DisciplinesModule\n\n\n\ncluster_DisciplinesModule_declarations\n\n\n\ncluster_DisciplinesModule_exports\n\n\n\ncluster_DivisionsModule\n\n\n\ncluster_DivisionsModule_declarations\n\n\n\ncluster_DivisionsModule_exports\n\n\n\ncluster_EventModule\n\n\n\ncluster_EventModule_declarations\n\n\n\ncluster_EventModule_imports\n\n\n\ncluster_ScoreSystemModule\n\n\n\ncluster_ScoreSystemModule_declarations\n\n\n\ncluster_ScoreSystemModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_VenueModule\n\n\n\ncluster_VenueModule_declarations\n\n\n\n\nAdvancedComponent\n\nAdvancedComponent\n\n\n\nAdvancedModule\n\nAdvancedModule\n\nAdvancedModule -->\n\nAdvancedComponent->AdvancedModule\n\n\n\n\n\nConfigureModule\n\nConfigureModule\n\nConfigureModule -->\n\nAdvancedModule->ConfigureModule\n\n\n\n\n\nDisciplinesModule\n\nDisciplinesModule\n\nAdvancedModule -->\n\nDisciplinesModule->AdvancedModule\n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nDisciplinesModule->TournamentModule\n\n\n\n\n\nDisciplineEditorComponent \n\nDisciplineEditorComponent \n\nDisciplineEditorComponent  -->\n\nDisciplinesModule->DisciplineEditorComponent \n\n\n\n\n\nDisciplinesComponent \n\nDisciplinesComponent \n\nDisciplinesComponent  -->\n\nDisciplinesModule->DisciplinesComponent \n\n\n\n\n\nDivisionsModule\n\nDivisionsModule\n\nAdvancedModule -->\n\nDivisionsModule->AdvancedModule\n\n\n\nTournamentModule -->\n\nDivisionsModule->TournamentModule\n\n\n\n\n\nDivisionEditorComponent \n\nDivisionEditorComponent \n\nDivisionEditorComponent  -->\n\nDivisionsModule->DivisionEditorComponent \n\n\n\n\n\nDivisionsComponent \n\nDivisionsComponent \n\nDivisionsComponent  -->\n\nDivisionsModule->DivisionsComponent \n\n\n\n\n\nScoreSystemModule\n\nScoreSystemModule\n\nAdvancedModule -->\n\nScoreSystemModule->AdvancedModule\n\n\n\nDisciplinesModule -->\n\nScoreSystemModule->DisciplinesModule\n\n\n\n\n\nScoreGroupEditorComponent \n\nScoreGroupEditorComponent \n\nScoreGroupEditorComponent  -->\n\nScoreSystemModule->ScoreGroupEditorComponent \n\n\n\n\n\nScoreSystemComponent \n\nScoreSystemComponent \n\nScoreSystemComponent  -->\n\nScoreSystemModule->ScoreSystemComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdvancedModule -->\n\nSharedModule->AdvancedModule\n\n\n\nDisciplinesModule -->\n\nSharedModule->DisciplinesModule\n\n\n\nDivisionsModule -->\n\nSharedModule->DivisionsModule\n\n\n\nScoreSystemModule -->\n\nSharedModule->ScoreSystemModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nClubModule\n\nClubModule\n\nClubModule -->\n\nSharedModule->ClubModule\n\n\n\n\n\nConfigureSharedModule\n\nConfigureSharedModule\n\nConfigureSharedModule -->\n\nSharedModule->ConfigureSharedModule\n\n\n\nConfigureModule -->\n\nSharedModule->ConfigureModule\n\n\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nSharedModule->UsersModule\n\n\n\n\n\nVenueModule\n\nVenueModule\n\nVenueModule -->\n\nSharedModule->VenueModule\n\n\n\n\n\nEventModule\n\nEventModule\n\nEventModule -->\n\nSharedModule->EventModule\n\n\n\n\n\nClubLookupComponent \n\nClubLookupComponent \n\nClubLookupComponent  -->\n\nSharedModule->ClubLookupComponent \n\n\n\n\n\nDialogComponent \n\nDialogComponent \n\nDialogComponent  -->\n\nSharedModule->DialogComponent \n\n\n\n\n\nErrorDialogComponent \n\nErrorDialogComponent \n\nErrorDialogComponent  -->\n\nSharedModule->ErrorDialogComponent \n\n\n\n\n\nHelpBlockComponent \n\nHelpBlockComponent \n\nHelpBlockComponent  -->\n\nSharedModule->HelpBlockComponent \n\n\n\n\n\nIfAuthDirective \n\nIfAuthDirective \n\nIfAuthDirective  -->\n\nSharedModule->IfAuthDirective \n\n\n\n\n\nLoadSpinnerComponent \n\nLoadSpinnerComponent \n\nLoadSpinnerComponent  -->\n\nSharedModule->LoadSpinnerComponent \n\n\n\n\n\nMediaControlComponent \n\nMediaControlComponent \n\nMediaControlComponent  -->\n\nSharedModule->MediaControlComponent \n\n\n\n\n\nMultirangeComponent \n\nMultirangeComponent \n\nMultirangeComponent  -->\n\nSharedModule->MultirangeComponent \n\n\n\n\n\nOrderByPipe \n\nOrderByPipe \n\nOrderByPipe  -->\n\nSharedModule->OrderByPipe \n\n\n\n\n\nSaveButtonComponent \n\nSaveButtonComponent \n\nSaveButtonComponent  -->\n\nSharedModule->SaveButtonComponent \n\n\n\n\n\nToCaseDirective \n\nToCaseDirective \n\nToCaseDirective  -->\n\nSharedModule->ToCaseDirective \n\n\n\n\n\nUtcDatePipe \n\nUtcDatePipe \n\nUtcDatePipe  -->\n\nSharedModule->UtcDatePipe \n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAppModule -->\n\nLogoutComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetComponent\n\nResetComponent\n\nAppModule -->\n\nResetComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nHttpCacheInterceptor\n\nHttpCacheInterceptor\n\nAppModule -->\n\nHttpCacheInterceptor->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nUniversalInterceptor\n\nUniversalInterceptor\n\nAppServerModule -->\n\nUniversalInterceptor->AppServerModule\n\n\n\n\n\nClubComponent\n\nClubComponent\n\nClubModule -->\n\nClubComponent->ClubModule\n\n\n\n\n\nClubEditorComponent\n\nClubEditorComponent\n\nClubModule -->\n\nClubEditorComponent->ClubModule\n\n\n\n\n\nMediaComponent\n\nMediaComponent\n\nClubModule -->\n\nMediaComponent->ClubModule\n\n\n\n\n\nMemberEditorComponent\n\nMemberEditorComponent\n\nClubModule -->\n\nMemberEditorComponent->ClubModule\n\n\n\n\n\nMembersComponent\n\nMembersComponent\n\nClubModule -->\n\nMembersComponent->ClubModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nClubModule -->\n\nStatisticsComponent->ClubModule\n\n\n\n\n\nTroopEditorComponent\n\nTroopEditorComponent\n\nClubModule -->\n\nTroopEditorComponent->ClubModule\n\n\n\n\n\nTroopsComponent\n\nTroopsComponent\n\nClubModule -->\n\nTroopsComponent->ClubModule\n\n\n\nConfigureModule -->\n\nClubModule->ConfigureModule\n\n\n\nClubModule -->\n\nConfigureSharedModule->ClubModule\n\n\n\nTournamentModule -->\n\nConfigureSharedModule->TournamentModule\n\n\n\n\n\nDivisionLookupComponent \n\nDivisionLookupComponent \n\nDivisionLookupComponent  -->\n\nConfigureSharedModule->DivisionLookupComponent \n\n\n\n\n\nMemberSelectorComponent \n\nMemberSelectorComponent \n\nMemberSelectorComponent  -->\n\nConfigureSharedModule->MemberSelectorComponent \n\n\n\n\n\nMemberStateService\n\nMemberStateService\n\nClubModule -->\n\nMemberStateService->ClubModule\n\n\n\n\n\nConfigureComponent\n\nConfigureComponent\n\nConfigureModule -->\n\nConfigureComponent->ConfigureModule\n\n\n\n\n\nConfigureDisplayComponent\n\nConfigureDisplayComponent\n\nConfigureModule -->\n\nConfigureDisplayComponent->ConfigureModule\n\n\n\n\n\nMacroDialogComponent\n\nMacroDialogComponent\n\nConfigureModule -->\n\nMacroDialogComponent->ConfigureModule\n\n\n\n\n\nConfigureRoutingModule\n\nConfigureRoutingModule\n\nConfigureModule -->\n\nConfigureRoutingModule->ConfigureModule\n\n\n\nConfigureModule -->\n\nTournamentModule->ConfigureModule\n\n\n\nConfigureModule -->\n\nUsersModule->ConfigureModule\n\n\n\nConfigureModule -->\n\nVenueModule->ConfigureModule\n\n\n\n\n\nDivisionLookupComponent\n\nDivisionLookupComponent\n\nConfigureSharedModule -->\n\nDivisionLookupComponent->ConfigureSharedModule\n\n\n\n\n\nMemberSelectorComponent\n\nMemberSelectorComponent\n\nConfigureSharedModule -->\n\nMemberSelectorComponent->ConfigureSharedModule\n\n\n\n\n\nDisciplineEditorComponent\n\nDisciplineEditorComponent\n\nDisciplinesModule -->\n\nDisciplineEditorComponent->DisciplinesModule\n\n\n\n\n\nDisciplinesComponent\n\nDisciplinesComponent\n\nDisciplinesModule -->\n\nDisciplinesComponent->DisciplinesModule\n\n\n\n\n\nDivisionEditorComponent\n\nDivisionEditorComponent\n\nDivisionsModule -->\n\nDivisionEditorComponent->DivisionsModule\n\n\n\n\n\nDivisionsComponent\n\nDivisionsComponent\n\nDivisionsModule -->\n\nDivisionsComponent->DivisionsModule\n\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\nEventModule -->\n\nContextMenuComponent->EventModule\n\n\n\n\n\nDisplayComponent\n\nDisplayComponent\n\nEventModule -->\n\nDisplayComponent->EventModule\n\n\n\n\n\nEventComponent\n\nEventComponent\n\nEventModule -->\n\nEventComponent->EventModule\n\n\n\n\n\nFullscreenComponent\n\nFullscreenComponent\n\nEventModule -->\n\nFullscreenComponent->EventModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nEventModule -->\n\nListComponent->EventModule\n\n\n\n\n\nResultsComponent\n\nResultsComponent\n\nEventModule -->\n\nResultsComponent->EventModule\n\n\n\n\n\nScoreEditorComponent\n\nScoreEditorComponent\n\nEventModule -->\n\nScoreEditorComponent->EventModule\n\n\n\n\n\nSignoffReportComponent\n\nSignoffReportComponent\n\nEventModule -->\n\nSignoffReportComponent->EventModule\n\n\n\n\n\nEventRoutingModule\n\nEventRoutingModule\n\nEventModule -->\n\nEventRoutingModule->EventModule\n\n\n\n\n\nScoreGroupEditorComponent\n\nScoreGroupEditorComponent\n\nScoreSystemModule -->\n\nScoreGroupEditorComponent->ScoreSystemModule\n\n\n\n\n\nScoreSystemComponent\n\nScoreSystemComponent\n\nScoreSystemModule -->\n\nScoreSystemComponent->ScoreSystemModule\n\n\n\n\n\nClubLookupComponent\n\nClubLookupComponent\n\nSharedModule -->\n\nClubLookupComponent->SharedModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nSharedModule -->\n\nDialogComponent->SharedModule\n\n\n\n\n\nErrorDialogComponent\n\nErrorDialogComponent\n\nSharedModule -->\n\nErrorDialogComponent->SharedModule\n\n\n\n\n\nHelpBlockComponent\n\nHelpBlockComponent\n\nSharedModule -->\n\nHelpBlockComponent->SharedModule\n\n\n\n\n\nIfAuthDirective\n\nIfAuthDirective\n\nSharedModule -->\n\nIfAuthDirective->SharedModule\n\n\n\n\n\nLoadSpinnerComponent\n\nLoadSpinnerComponent\n\nSharedModule -->\n\nLoadSpinnerComponent->SharedModule\n\n\n\n\n\nMediaControlComponent\n\nMediaControlComponent\n\nSharedModule -->\n\nMediaControlComponent->SharedModule\n\n\n\n\n\nMultirangeComponent\n\nMultirangeComponent\n\nSharedModule -->\n\nMultirangeComponent->SharedModule\n\n\n\n\n\nOrderByPipe\n\nOrderByPipe\n\nSharedModule -->\n\nOrderByPipe->SharedModule\n\n\n\n\n\nSaveButtonComponent\n\nSaveButtonComponent\n\nSharedModule -->\n\nSaveButtonComponent->SharedModule\n\n\n\n\n\nToCaseDirective\n\nToCaseDirective\n\nSharedModule -->\n\nToCaseDirective->SharedModule\n\n\n\n\n\nUtcDatePipe\n\nUtcDatePipe\n\nSharedModule -->\n\nUtcDatePipe->SharedModule\n\n\n\n\n\nAwardsComponent\n\nAwardsComponent\n\nTournamentModule -->\n\nAwardsComponent->TournamentModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nTournamentModule -->\n\nInfoComponent->TournamentModule\n\n\n\n\n\nScheduleComponent\n\nScheduleComponent\n\nTournamentModule -->\n\nScheduleComponent->TournamentModule\n\n\n\n\n\nScorecardsComponent\n\nScorecardsComponent\n\nTournamentModule -->\n\nScorecardsComponent->TournamentModule\n\n\n\n\n\nTeamEditorComponent\n\nTeamEditorComponent\n\nTournamentModule -->\n\nTeamEditorComponent->TournamentModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nTournamentModule -->\n\nTeamsComponent->TournamentModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nTournamentEditorComponent\n\nTournamentEditorComponent\n\nTournamentModule -->\n\nTournamentEditorComponent->TournamentModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nUsersModule -->\n\nPasswordComponent->UsersModule\n\n\n\n\n\nUserEditorComponent\n\nUserEditorComponent\n\nUsersModule -->\n\nUserEditorComponent->UsersModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nVenueComponent\n\nVenueComponent\n\nVenueModule -->\n\nVenueComponent->VenueModule\n\n\n\n\n\nVenueEditorComponent\n\nVenueEditorComponent\n\nVenueModule -->\n\nVenueEditorComponent->VenueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    55 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    27 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FilterFn   (src/.../member-selector.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/views/configure/_shared/member-selector/member-selector.component.ts\n    \n    \n        \n            \n                \n                    \n                    FilterFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CASE_INPUT_CONTROL_VALUE_ACCESSOR   (src/.../to-uppercase.directive.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            graphqlSubUri   (src/.../graphql.module.ts)\n                        \n                        \n                            graphqlUri   (src/.../graphql.module.ts)\n                        \n                        \n                            noop   (src/.../index.ts)\n                        \n                        \n                            RoleNames   (src/.../IUser.ts)\n                        \n                        \n                            storageMock   (src/.../browser.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/directives/to-uppercase/to-uppercase.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CASE_INPUT_CONTROL_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line:no-use-before-declare\n  useExisting: forwardRef(() => ToCaseDirective),\n  multi: true,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  wsUrl: 'www.gymsystems.org',\n  allowRegistrations: false,\n  // Should not have an api key open like this, I know,\n  // but it is limited to this particular domain anyway and\n  // I don't have that many ways of sneaking it into the client.\n  // I would rather avoid making an extra roundtrip to the server\n  // just to fetch this from system environment.\n  geoApiKey: 'AIzaSyDIYbCDSYzEF6naFvgkjv297hX7cqS3mBs'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  wsUrl: 'localhost:3000/api/graph',\n  allowRegistrations: false,\n  // Should not have an api key open like this, I know,\n  // but it is limited to this particular domain anyway and\n  // I don't have that many ways of sneaking it into the client.\n  // I would rather avoid making an extra roundtrip to the server\n  // just to fetch this from system environment.\n  geoApiKey: 'AIzaSyDIYbCDSYzEF6naFvgkjv297hX7cqS3mBs'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/graphql.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            graphqlSubUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/ws'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphqlUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/graph'\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/services/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            noop\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {}\n                        \n                    \n\n\n            \n        \n\n    src/app/model/IUser.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RoleNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { id: Role.Admin, name: 'Admin' },\n  { id: Role.Organizer, name: 'Organizer' },\n  { id: Role.Secretariat, name: 'Secretariat' },\n  { id: Role.Club, name: 'Club' },\n  { id: Role.User, name: 'User' },\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/browser.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            storageMock\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n  // We are in a node environment. Just return a mock\n  getItem: (): string => null,\n  setItem: (): void => { },\n  removeItem: (): void => { }\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
